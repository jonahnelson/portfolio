{"version":3,"sources":["RushingtonAtNight.png","Components/Pages/SignIn.js","logo.svg","Components/Fragments/High Level/Header.js","Components/Fragments/Mid Level/Resources.js","Components/Fragments/Low Level/Popup.js","Components/Fragments/Low Level/CitizenUserDropboxMenu.js","Components/Fragments/Low Level/NewTransferPopupBody.js","Components/Fragments/Mid Level/Bank.js","Components/Fragments/Mid Level/Calendar.js","Components/Fragments/Mid Level/Constitution.js","Components/Fragments/Low Level/CitizenGovernmentDropboxMenu.js","Components/Fragments/Low Level/NewChargePopupBody.js","Components/Fragments/Low Level/AddPropertyPopupBody.js","Components/Fragments/Low Level/AddCitizenPopupBody.js","Components/Fragments/Low Level/AddBusinessPopupBody.js","Components/Fragments/Low Level/PropertyDropboxMenu.js","Components/Fragments/Low Level/NewGovernmentTransferPopupBody.js","Components/Fragments/Mid Level/Government.js","Components/Fragments/Mid Level/Home.js","Components/Fragments/Mid Level/Profile.js","Components/Fragments/Mid Level/Licenses.js","Components/Fragments/Low Level/PostPage.js","RushingtonMap.png","Components/Fragments/Mid Level/Map.js","Components/Fragments/Mid Level/Properties.js","Components/Fragments/Mid Level/Citizens.js","Components/Fragments/Mid Level/Settings.js","Components/Fragments/Low Level/AddNewBusinessPopupBody.js","Components/Fragments/Mid Level/Businesses.js","Components/Fragments/Low Level/NewBusinessTransferPopupBody.js","Components/Fragments/Mid Level/Business.js","Components/Fragments/Mid Level/Panel.js","Components/Fragments/High Level/Content.js","Components/Fragments/High Level/Footer.js","Components/Pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Join","setSignedIn","citizens","setIsAdmin","setUser","useState","undefined","localStorage","getItem","citizenIDInput","setCitizenIDInput","errorMessage","setErrorMessage","onClickSignIn","isCitizenIDValid","citizensObjects","Object","values","foundCitizenIDMatch","forEach","citizenObject","citizenID","setItem","JSON","stringify","duringTyping","changeErrorMessage","length","startsWith","Number","substring","console","log","classNames","classes","filter","Boolean","join","className","style","backgroundImage","RushingtonAtNight","backgroundRepeat","backgroundSize","href","placeholder","value","onInput","event","target","onKeyDown","code","onClick","React","memo","navLinksAdmin","title","active","navLinksUser","Header","image","setImage","setName","setEmail","name","setFilteredSites","sites","setFilteredPeople","people","CompanyId","email","setLoggedIn","isAdmin","currentTime","currentCompany","setCurrentCompany","userCompanies","setUserCompanies","setCompanyId","currentDate","currentYear","user","signOut","as","open","profileOpen","Button","show","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","static","Item","preventDefault","window","location","map","link","Root","Child","Overlay","Panel","focus","src","Logo","alt","n","idx","Resources","resources","subtext","icon","LibraryIcon","CashIcon","CreditCardIcon","UsersIcon","MapIcon","BookOpenIcon","CalendarIcon","resource","Popup","setOpen","header","additionalComponent","cancelButtonRef","useRef","AdditionalComponent","onClose","type","ref","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Title","CitizenUserDropboxMenu","selectedCitizen","setSelectedCitizen","filteredCitizens","setFilteredCitizens","searchCitizensInput","setSearchCitizensInput","UpOrDownArrow","props","class","defaultValue","onChange","citizen","toUpperCase","includes","NewTransferPopupBody","database","getTime","setMeldas","meldas","getDate","getYear","setNewTransferPopupOpen","setTransfers","setCitizens","transferAmount","setTransferAmount","transferReason","setTransferReason","salesTaxRate","setSalesTaxRate","rushingtonEpoch","generateTransferID","transferID","i","String","Math","floor","random","isTransferAmountValid","useEffect","get","then","val","salesTaxRateSnapshot","min","max","round","receiverResultingBalance","senderResultingBalance","meldasSnapshot","amountTaxed","set","date","time","ssre","Date","amount","receiverID","receiverName","reason","resultingBalance","senderID","senderName","taxTransferID","governmentSnapshot","newGovernmentFunds","transfersSnapshot","transfers","sort","transfer1","transfer2","Bank","newTransferPopupOpen","bankAccounts","censor","id","onClickSave","inputs","saveText","transfer","Transfer","Calendar","getHoliday","day","monthNumber","days","push","generateDays","formatDate","month","dayString","endsWith","concat","number","week","slice","Constitution","lawNumber","rightNumber","policyNumber","civilResponsibilityNumber","constitutionalAdditionsChangeNumber","law","right","policy","civilResponsibility","constitutionalAdditionsChange","CitizenGovernmentDropboxMenu","NewChargePopupBody","setNewChargePopupOpen","setValues","selectedDefendant","selectedProsecutor","setSelectedProsecutor","allegedCrime","setAllegedCrime","reasonForVerdict","setReasonForVerdict","punishment","setPunishment","citizenGuilty","setCitizenGuilty","citizenSnapshot","editedSelectedCitizen","newCharge","newChargeID","chargeID","generateChargeID","defendant","prosecutor","crime","verdict","charges","parse","AddPropertyPopupBody","properties","setProperties","setAddPropertyPopupOpen","selectedPropertyType","setSelectedPropertyType","address","setAddress","width","setWidth","setLength","price","setPrice","propertyTypeOptions","propertyTypeOption","propertyID","generatePropertyID","newProperty","size","dateAdded","timeAdded","editedProperties","AddCitizenPopupBody","setAddCitizenPopupOpen","setCitizenID","initialMeldas","newCitizenID","generateCitizenID","addedCitizen","editedCitizens","AddBusinessPopupBody","selectedProperty","setSelectedProperty","setAddChangeBusinessPopupOpen","description","setDescription","business","newBusiness","owner","editedSelectedProperty","PropertyDropboxMenu","filteredProperties","setFilteredProperties","searchPropertiesInput","setSearchPropertiesInput","property","NewGovernmentTransferPopupBody","setNewGovernmentTransferPopupOpen","governmentFunds","receiverCitizenID","senderCitizenID","Government","selectedSection","setSelectedSection","announcementText","setAnnouncementText","filteredDropboxCitizens","setFilteredDropboxCitizens","announcements","setAnnouncements","businesses","setBusinesses","setGovernmentFunds","licenseTitle","setLicenseTitle","licensePermissions","setLicensePermissions","licensePrice","setLicensePrice","licenses","setLicenses","selectedDropdownProperty","setSelectedDropdownProperty","interestRate","setInterestRate","taxRate","setTaxRate","selectedNewPropertyOwner","setSelectedNewPropertyOwner","grantedMeldas","setGrantedMeldas","governmentGrantedMeldas","setGovernmentGrantedMeldas","governmentTransfers","setGovernmentTransfers","newChargePopupOpen","addChangeBusinessPopupOpen","addPropertyPopupOpen","newGovernmentTransferPopupBodyOpen","addCitizenPopupOpen","navigationSections","sectionName","sectionSelected","citizensSnapshot","citizen1","citizen2","localeCompare","propertiesSnapshot","property1","property2","announcementsSnapshot","announcement1","announcement2","licensesSnapshot","businessesSnapshot","onClickPostAnnouncement","announcementID","generateID","text","datePosted","timePosted","getResultingInterestPayout","totalMeldasGranted","meldasGranted","getResultingTaxRevenue","totalTaxRevenue","tax","prefix","navigationSection","newTransfer","abs","charge1","charge2","charge","CriminalCharge","findPropertyByID","Property","license1","license2","license","LicenseUser","totalMeldasInBank","getTotalMeldasInBank","newCitizensObject","licenseID","permissions","LicenseGovernment","announcement","Announcement","datePurchased","Home","setSelectedPost","selectedPost","criminalCharges","setCriminalCharges","posts","setPosts","filteredPosts","setFilteredPosts","notifications","setNotifications","postText","setPostText","numberOfPostsShown","setNumberOfPostsShown","selectedFilter","setSelectedFilter","postsLoaded","setPostsLoaded","notificationsLoaded","setNotificationsLoaded","unseenNotifications","setUnseenNotifications","announcementsLoaded","setAnnouncementsLoaded","criminalChargesLoaded","setCriminalChargesLoaded","NewspaperIcon","SpeakerphoneIcon","ScaleIcon","BellIcon","updateValues","notificationsSnapshot","notification1","notification2","notification","seen","unseenNotificationsValue","count","updateUnseenNotifications","postsSnapshot","post1","post2","updateFilteredPosts","criminalChargesSnapshot","postsInput","sortedPosts","post1Likes","liked","post1Dislikes","disliked","makeReadableTimeAgo","post","secondsSincePost","yearsAgo","toFixed","monthsAgo","daysAgo","minutesSincePost","num","fixed","re","RegExp","toString","match","onClickPost","postID","generatePostID","newPost","poster","Icon","criminalCharge","Post","newNumberOfPostsShown","postSnapshot","action","actor","commentText","object","comment","comments","splice","indexOf","comment1","comment2","comment1Likes","Profile","editingBiography","setEditingBiography","biography","newBiography","setNewBiography","License","Licenses","userSnapshot","onClickBuyLicense","addedLicense","userResultingBalance","governmentMeldas","governmentResultingBalance","keys","PostPage","updatePost","onClickPostComment","commentsSnapshot","commentID","generateCommentID","newComment","setCommentText","commentSnapshot","Map","RushingtonMap","Properties","Citizens","Citizen","Settings","updateUser","newPassword","setNewPassword","settings","requirePassword","requirePasswordChecked","setRequirePasswordChecked","isEditingPassword","setIsEditingPassword","showPassword","setShowPassword","Switch","checked","censorCitizenID","color","password","crypto","subtle","digest","str","buf","ArrayBuffer","bufView","Uint16Array","strLen","charCodeAt","stringToArrayBuffer","result","hashHex","Array","from","Uint8Array","b","padStart","AddNewBusinessPopupBody","setAddNewBusinessPopupOpen","updateBusinesses","newBusinessID","generateBusinessID","businessID","founder","owners","yearAdded","Businesses","userBusinesses","setUserBusinesses","filteredBusinesses","setFilteredBusinesses","addNewBusinessPopupOpen","userHasBAOLicense","found","business1","business2","userIsOwner","checkUserIsOwner","filteredBusiness","Business","businessPurchases","purchase1","purchase2","purchase","Purchase","yearPurchased","total","purchaseID","product","quantity","buyingPrice","orderingPrice","delivered","dateDelivered","yearDelivered","timeDelivered","businessSnapshot","NewBusinessTransferPopupBody","updateBusiness","setNewBusinessTransferPopupOpen","selectedBusiness","setSelectedBusiness","addItemPopupOpen","setAddItemPopupOpen","editItemPopupOpen","setEditItemPopupOpen","productBeingEdited","setProductBeingEdited","searchInput","setSearchInput","newBusinessName","setNewBusinessName","newBusinessDescription","setNewBusinessDescription","citizenIsNotInList","CollectionIcon","TruckIcon","BriefcaseIcon","EditProductPopupBody","AddItemPopupBody","products","product1","product2","Product","orders","order1","order2","order","Order","ownersList","setQuantity","buyable","orderable","businessResultingBalance","productID","timePurchased","customer","newItemBuyingPrice","setNewItemBuyingPrice","newItemOrderingPrice","setNewItemOrderingPrice","newItemName","setNewItemName","newItemBuyable","setNewItemBuyable","newItemOrderable","setNewItemOrderable","newProductID","generateProductID","itemBuyingPrice","setItemBuyingPrice","itemOrderingPrice","setItemOrderingPrice","itemName","setItemName","itemBuyable","setItemBuyable","itemOrderable","setItemOrderable","businessOrderReference","citizenPurchaseReference","setPeople","chosenPerson","setChosenPerson","site","siteClosed","setSiteClosed","isSubscribed","exact","path","render","Content","Footer","Main","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","booleanify","s","months","currentTotalSeconds","year","hour","seconds","monthString","monthItem","App","signedIn","setCurrentYear","setCurrentDate","setCurrentTime","interval","setInterval","clearInterval","SignIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b17ac1f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/RushingtonAtNight.5d0400fe.png\";","import React, { useState } from 'react';\r\nimport RushingtonAtNight from '../../RushingtonAtNight.png'\r\n\r\nconst Join = ({setSignedIn, citizens, setIsAdmin, setUser}) => {\r\n\r\n  const [citizenIDInput, setCitizenIDInput] = useState(localStorage.getItem('citizenID') != undefined ? localStorage.getItem('citizenID') : '');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [passwordRequired, setPasswordRequired] = useState(false);\r\n  const [passwordInput, setPasswordInput] = useState('');\r\n\r\n  function onClickSignIn(){\r\n    if(isCitizenIDValid(citizenIDInput, false, true) && citizens != undefined){\r\n      const citizensObjects = Object.values(citizens);\r\n      var foundCitizenIDMatch = false;\r\n    citizensObjects.forEach(citizenObject => {\r\n      if(citizenObject.citizenID == citizenIDInput){\r\n        foundCitizenIDMatch = true;        \r\n          setUser(citizenObject);\r\n          setIsAdmin(citizenIDInput == 'CI-78614');\r\n          localStorage.setItem('signedIn', 'true');\r\n          localStorage.setItem('user', JSON.stringify(citizenObject));\r\n          localStorage.setItem('isAdmin', citizenIDInput == 'CI-78614');\r\n          setSignedIn(true);\r\n        \r\n      }\r\n    });\r\n    setErrorMessage(foundCitizenIDMatch ? '' : 'Citizen ID has a valid format, but found no matches. Try refreshing')\r\n    }\r\n  }\r\n\r\n  function isCitizenIDValid(citizenID, duringTyping, changeErrorMessage){\r\n    if((citizenID.length == 1 && !citizenID.startsWith('C')) ||\r\n       (citizenID.length == 2 && !citizenID.startsWith('CI')) ||\r\n       (citizenID.length >= 3 && !citizenID.startsWith('CI-'))){\r\n      if(citizenID.length < 8){\r\n        if(citizenID.length == 0){\r\n          if(changeErrorMessage)setErrorMessage(duringTyping ? '' : 'Enter Citizen ID to sign in');\r\n          return duringTyping ? true : false;\r\n        } else {\r\n        if(changeErrorMessage)setErrorMessage(\"Invalid format. Citizen ID must begin with 'CI-'\");\r\n        return false;\r\n        }\r\n      } else {\r\n        if(changeErrorMessage)setErrorMessage(\"Invalid format. Citizen ID must begin with 'CI-' and be followed by 5 numbers\");\r\n        return false;\r\n      }\r\n    } else {\r\n      if(citizenID.length == 0){\r\n        if(changeErrorMessage)setErrorMessage(duringTyping ? '' : 'Enter Citizen ID to sign in');\r\n        return duringTyping ? true : false;\r\n      } else {\r\n        if(citizenID.length < 8){\r\n          if(changeErrorMessage)setErrorMessage(duringTyping ? '' : \"Invalid format. Citizen ID is too short. 5 numbers must follow 'CI-'\");\r\n          return duringTyping ? true : false;\r\n        } else {\r\n          if(citizenID.length > 8){\r\n            if(changeErrorMessage)setErrorMessage(\"Invalid format. Citizen ID is too dang long! At most 5 numbers must follow 'CI-'\");\r\n            return false;\r\n          } else {\r\n            //console.log('checking if numbers', Number(citizenID.substring(3, 9)) !== NaN, Number(citizenID.substring(3, 9)))\r\n            if(!Number(citizenID.substring(3, 9))){\r\n              if(changeErrorMessage)setErrorMessage(\"Invalid format. 5 numbers must follow 'CI-'\");\r\n              return false;\r\n            } else {\r\n              console.log('nu', Number(citizenID.substring(3, 9)))\r\n              if(changeErrorMessage)setErrorMessage('');\r\n              return true;\r\n            }\r\n            \r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  function classNames(...classes) {\r\n    return classes.filter(Boolean).join(\" \");\r\n  }\r\n\r\n    return(\r\n\r\n      <div className=\"min-h-screen justify-center py-12\"\r\n      style={{ \r\n        backgroundImage: `url(${RushingtonAtNight})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: \"cover\",\r\n      }}\r\n      >\r\n        <div className='mx-6 lg:mx-0'>\r\n        <div className='sm:mx-auto  sm:w-full sm:max-w-md '>\r\n        <div className='flex justify-center bg-gray-200 py-8 px-4 shadow rounded-t-lg sm:px-10'>\r\n        <div className=\"shadow bg-white border-l-2 border-b-2 border-blue-300 border-b-blue-200\">\r\n                <a href=\"#\">\r\n                  <span className=\"sr-only\">Workflow</span>\r\n                  <p className='text-3xl font-bold text-gray-700 p-1 border-r-2 border-t-2 border-yellow-300'>Rushington Hub</p>\r\n                </a>\r\n              </div>\r\n          </div>\r\n    </div>\r\n\r\n  <div className=\"sm:mx-auto  sm:w-full sm:max-w-md\">\r\n    <div className=\"bg-blue-200 py-8 px-4 shadow rounded-b-lg sm:px-10\">\r\n\r\n      \r\n        \r\n        <div className=\"w-full\">\r\n          <p className='font-semibold text-center'>Enter Citizen ID to Continue</p>\r\n        <input placeholder='e.g. CI-49893, CI-28492...'\r\n          value={citizenIDInput}\r\n          onInput={event => {setCitizenIDInput(event.target.value);\r\n          isCitizenIDValid(event.target.value, true, true);  \r\n      }} \r\n          onKeyDown={event => {\r\n            if(event.code === 'Enter'){\r\n              onClickSignIn();\r\n            }\r\n          }}\r\n          className={\r\n            classNames(isCitizenIDValid(citizenIDInput, true, false) ? '' : 'text-red-500 font-semibold',\r\n            'w-full type-password focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-1 rounded')}></input>\r\n        <div className='w-full flex justify-center py-6'>\r\n        <button className={classNames(citizens != undefined && isCitizenIDValid(citizenIDInput, false, false) ?  'bg-yellow-300 text-gray-800 hover:bg-yellow-400' : 'bg-yellow-200 text-gray-400',\r\n          'flex justify-center w-1/3 py-2 shadow font-semibold rounded')} onClick={onClickSignIn}>SIGN IN</button>\r\n        </div>\r\n        {errorMessage &&\r\n        <p className='text-center text-red-500 bg-white shadow p-1 font-semibold'>{errorMessage}</p>\r\n        }\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Join);\r\n","export default __webpack_public_path__ + \"static/media/logo.a626faa1.svg\";","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Menu, Popover, Transition } from \"@headlessui/react\";\r\nimport { BellIcon, LogoutIcon, MenuIcon, XIcon } from \"@heroicons/react/outline\";\r\nimport Logo from '../../../logo.svg';\r\n\r\n\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\nconst navLinksAdmin = [\r\n  { title: \"Home\", active: true, href: \"/\" },\r\n  { title: \"All Resources\", active: false, href: \"/resources\" },\r\n  { title: \"Profile\", active: false, href: '/profile'},\r\n  { title: \"Government\", active: false, href: \"/government\"}\r\n];\r\n\r\nconst navLinksUser = [\r\n  { title: \"Home\", active: true, href: \"/\" },\r\n  { title: \"All Resources\", active: false, href: \"/resources\" },\r\n  { title: \"Profile\", active: false, href: '/profile'},\r\n];\r\n\r\nconst Header = ({\r\n  image,\r\n  setImage,\r\n  setName,\r\n  setEmail,\r\n  name,\r\n  setFilteredSites,\r\n  sites,\r\n  setFilteredPeople,\r\n  people,\r\n  CompanyId,\r\n  email,\r\n  setLoggedIn,\r\n  isAdmin,\r\n  setIsAdmin,\r\n  currentCompany,\r\n  setCurrentCompany,\r\n  userCompanies,\r\n  setUserCompanies,\r\n  setCompanyId,\r\n  currentTime,\r\n  currentDate,\r\n  currentYear,\r\n  citizenID,\r\n  user,\r\n  setUser\r\n}) => {\r\n\r\n  const [editCompanyPopupOpen, setEditCompanyPopupOpen] = useState(false);\r\n\r\n  // This needs to be a state so that the modular popup component can change it and the on click save can use the value\r\n  const [editCompanyPopupNewName, setEditCompanyPopupNewName] = useState('');\r\n  const [removeCompanyPopupOpen, setRemoveCompanyPopupOpen] = useState(false);\r\n  //const currentDate = new Date();\r\n  //const [currentMilliseconds, setCurrentMilliseconds] = useState()\r\n\r\n  // The local storage values are set so that you can't refresh the page after logging out and stay logged in, since\r\n  // the initial values are set to the local storage values at the top\r\n  function signOut(){\r\n        setUser(null);\r\n        setIsAdmin(null);\r\n        localStorage.setItem('signedIn', null);\r\n        localStorage.setItem('user', null);\r\n        localStorage.setItem('isAdmin', null);\r\n        setLoggedIn(null);\r\n  }\r\n\r\n  var date = \"\";\r\n\r\n  //useEffect(()=>{date = formatDate(currentTime)}, currentTime)\r\n  function formatDate(currentTimeFields){\r\n        var monthName = \"\";\r\n        //console.log(Number('3'))\r\n        switch(currentTimeFields.month){\r\n            case 0:\r\n                monthName = \"Igmo\";\r\n                break;\r\n            case 1:\r\n                monthName = \"Bostiod\";\r\n                break;\r\n            case 2:\r\n                monthName = \"Walin\";\r\n                break;\r\n            case 3:\r\n                monthName = \"Jale\";\r\n                break;\r\n            case 4:\r\n                monthName = \"Carton\";\r\n                break;\r\n            case 5:\r\n                monthName = \"Wayu\";\r\n                break;\r\n            case 6:\r\n                monthName = \"Wildder\";\r\n                break;\r\n            case 7:\r\n                monthName = \"Wekenbarg\";\r\n                break;\r\n        }\r\n        \r\n        var dayString = \"\" + (Number(currentTimeFields.day) + 1);\r\n        \r\n        if(dayString.charAt(dayString.length-1) == '1'){\r\n            if(dayString.length > 1 && dayString.charAt(dayString.length-2) == '1'){\r\n                dayString = dayString + \"th\";\r\n            } else {\r\n                dayString = dayString + \"st\";\r\n            }\r\n        } else if(dayString.charAt(dayString.length-1) == '2'){\r\n            if(dayString.length > 1 && dayString.charAt(dayString.length-2) == '1'){\r\n                dayString = dayString + \"th\";\r\n            } else {\r\n                dayString = dayString + \"nd\";\r\n            }\r\n        } else if(dayString.charAt(dayString.length-1) == '3'){\r\n            if(dayString.length > 1 && dayString.charAt(dayString.length-2) == '1'){\r\n                dayString = dayString + \"th\";\r\n            } else {\r\n                dayString = dayString + \"rd\";\r\n            }\r\n        } else {\r\n            dayString = dayString + \"th\";\r\n        }\r\n        return monthName + \" \" + dayString + \", \" + currentTimeFields.year;\r\n  }\r\n\r\n  function censor(citizenID){\r\n      return citizenID;\r\n  }\r\n\r\n  \r\n  // The header needs to change whenver these values change because billing shouldn't be accessible or even visible for a non-admin\r\n  //useEffect(()=>{}, [isAdmin])\r\n  \r\n  function UpOrDownArrow(props){\r\n    if(props.open){\r\n        return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 15l7-7 7 7\" />\r\n          </svg>} else {\r\n        return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n          </svg>\r\n      }\r\n    }\r\n\r\n  return (\r\n    <Popover as=\"header\" className=\"pb-24 bg-gray-100 align-bottom\">\r\n      {({ open }) => (\r\n        <>\r\n          <a className='lg:hidden bg-black w-full flow-root px-2 pt-2.5 pb-1 h-10 fixed z-50'\r\n            href='/calendar'\r\n          >\r\n              <p className='text-white float-right font-semibold'>{currentDate}, {currentYear}</p>\r\n              <p className='text-white float-left font-semibold'>{currentTime}</p>\r\n          </a>\r\n          <div className=\"max-w-3xl mx-auto px-4 sm:px-6 pt-9 lg:pt-0 lg:max-w-7xl lg:px-8\">\r\n            <div className=\"relative pt-5 pb-1 align-items-bottom items-baseline h-16 lg:h-24\">\r\n                            \r\n            \r\n            \r\n            <div className='flow-root w-full align-bottom'>\r\n                        \r\n                        <div className='absolute bottom-1 lg:bottom-0 left-0'>\r\n                           {/* Logo */}\r\n              <div className=\"shadow bg-white border-l-2 border-b-2 border-blue-300 border-b-blue-200\">\r\n                <a href=\"/\">\r\n                  <span className=\"sr-only\">Workflow</span>\r\n                  <p className='text-3xl font-bold text-gray-700 p-1 border-r-2 border-t-2 border-yellow-300'>Rushington Hub</p>\r\n                </a>\r\n              </div>\r\n              <a\r\n              href='/calendar'\r\n              className='hidden lg:flow-root hover:bg-white px-1 hover:border hover:border-1 hover:border-gray-700'>\r\n                          <div className='float-left'>\r\n                        <p className='text-base text-gray-700 font-semibold'>{currentTime}</p>\r\n                        </div>\r\n                        <p className='text-base text-gray-700 float-right font-semibold'>{currentDate}, {currentYear}</p>\r\n                        </a>\r\n                        \r\n                              </div>\r\n                              \r\n                     \r\n                      \r\n                \r\n             \r\n\r\n              {/* Right section on desktop */}\r\n              <div className=\"absolute bottom-0 right-0\">\r\n                {/* Profile dropdown */}\r\n                <Menu as=\"div\" className=\"relative flex-shrink-0\">\r\n                  {({ profileOpen }) => (\r\n                    <>\r\n                      <div>\r\n                        <Menu.Button className=\"bg-gray hover:bg-white px-2 rounded text-right text-sm focus:outline-none focus:ring-opacity-100\">\r\n                        \r\n                                <p className='lg:text-lg text-gray-700 font-semibold'>{censor(user.citizenID)}</p>\r\n                                <p className='lg:text-lg text-gray-700 font-semibold'>{user.name}</p>\r\n                        </Menu.Button>\r\n                      </div>\r\n                      <Transition\r\n                        show={profileOpen}\r\n                        as={Fragment}\r\n                        enter=\"transition ease-out duration-75\"\r\n                        enterFrom=\"transform opacity-0 scale-95\"\r\n                        enterTo=\"transform opacity-100 scale-100\"\r\n                        leave=\"transition ease-in duration-75\"\r\n                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                        leaveTo=\"transform opacity-0 scale-95\"\r\n                      >\r\n                        <Menu.Items\r\n                          static\r\n                          className=\"origin-top-right z-40 absolute -right-2 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-green ring-opacity-5 focus:outline-none\"\r\n                        >\r\n                          <Menu.Item>\r\n                            {({ active }) => (\r\n                               <button\r\n                               onClick={event => {\r\n                                      event.preventDefault();\r\n                                      localStorage.setItem('selectedCitizen', JSON.stringify(user));\r\n                                      window.location.href = '/profile';\r\n                              }}\r\n                               className={classNames(\r\n                                 active ? \"bg-gray-100\" : \"\",\r\n                                 \"block px-4 py-2 text-sm w-full text-left text-green\"\r\n                               )}\r\n                             >\r\n                              Profile\r\n                             </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                          {/* <Menu.Item>\r\n                            {({ active }) => (\r\n                               \r\n                              <a\r\n                              href='/settings'\r\n                              className={classNames(\r\n                                active ? \"bg-gray-100\" : \"\",\r\n                                \"block px-4 py-2 text-sm text-green w-full text-left\"\r\n                              )}\r\n                              >Settings</a>\r\n                             \r\n                            )}\r\n                          </Menu.Item> */}\r\n                          <Menu.Item>\r\n                            {({ active }) => (\r\n                               \r\n                              <a onClick={signOut}\r\n                              href='/'\r\n                              className={classNames(\r\n                                active ? \"bg-gray-100\" : \"\",\r\n                                \"block px-4 py-2 text-sm text-green w-full text-left\"\r\n                              )}\r\n                              >Sign Out</a>\r\n                             \r\n                            )}\r\n                          </Menu.Item>\r\n                          \r\n                        </Menu.Items>\r\n                      </Transition>\r\n                    </>\r\n                  )}\r\n                </Menu>\r\n              </div>\r\n              </div>\r\n              {/* Menu button */}\r\n              <div className=\"absolute right-0 flex-shrink-0 hidden\">\r\n                {/* Mobile menu button */}\r\n                <Popover.Button className=\"bg-transparent p-2 rounded-md inline-flex items-center justify-center text-green hover:text-green hover:bg-gray hover:bg-opacity-10\">\r\n                  <span className=\"sr-only\">Open main menu</span>\r\n                  {open ? (\r\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  ) : (\r\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  )}\r\n                </Popover.Button>\r\n              </div>\r\n              </div>\r\n\r\n            <div className=\"lg:block border-t border-gray-700 border-opacity-40 py-3\">\r\n              <div className=\"lg:grid lg:grid-cols-3 lg:gap-8 lg:items-center\">\r\n                <div className=\"lg:col-span-2\">\r\n                  {isAdmin &&\r\n                  <nav className=\"flex lg:space-x-4\">\r\n                    {navLinksAdmin.map((link) => (\r\n                      <a\r\n                        key={link.title}\r\n                        href={link.href}\r\n                        onClick={event => {\r\n                          if(link.href == '/profile'){\r\n                                event.preventDefault();\r\n                                localStorage.setItem('selectedCitizen', JSON.stringify(user));\r\n                                window.location.href = '/profile';\r\n                          }\r\n                        }}\r\n                        className={classNames(\r\n                          link.active ? \"text-blue-600\" : \"text-blue-600\",\r\n                          \"flex-auto lg:flex-none text-center lg:text-left text-sm font-semibold rounded-md px-3 py-2 hover:bg-gray-200\"\r\n                        )}\r\n                        aria-current={link.active ? \"page\" : \"false\"}\r\n                      >\r\n                        {link.title}\r\n                      </a>\r\n                    ))}\r\n                  </nav>}\r\n                  {!isAdmin &&\r\n                  <nav className=\"flex lg:space-x-4\">\r\n                  {navLinksUser.map((link) => (\r\n                    <a\r\n                      key={link.title}\r\n                      href={link.href}\r\n                      onClick={event => {\r\n                        if(link.href == '/profile'){\r\n                              event.preventDefault();\r\n                              localStorage.setItem('selectedCitizen', JSON.stringify(user));\r\n                              window.location.href = '/profile';\r\n                        }\r\n                      }}\r\n                      className={classNames(\r\n                        link.active ? \"text-blue-600\" : \"text-blue-600\",\r\n                        \"flex-auto lg:flex-none text-center lg:text-left text-sm font-semibold rounded-md px-3 py-2 hover:bg-gray-200\"\r\n                      )}\r\n                      aria-current={link.active ? \"page\" : \"false\"}\r\n                    >\r\n                      {link.title}\r\n                    </a>\r\n                  ))}\r\n                </nav>\r\n                  }\r\n                </div>\r\n                <div>\r\n                  {/* \r\n                      Maybe conditionally render here\r\n                      If Point of Contact be able to add the details, if sites add those details, etc.\r\n                      Pass in ptops instead of search  \r\n                      */}\r\n                  {/* <div className=\"max-w-md w-full mx-auto\">\r\n                    <label htmlFor=\"search\" className=\"sr-only\">\r\n                      Search\r\n                    </label>\r\n                    <div className=\"relative text-green focus-within:text-gray-600\">\r\n                      <div className=\"pointer-events-none absolute inset-y-0 left-0 pl-3 flex items-center\">\r\n                        <SearchIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                      </div>\r\n                      <input\r\n                        id=\"search\"\r\n                        className=\"block w-full bg-gray bg-opacity-20 py-2 pl-10 pr-3 border border-transparent rounded-md leading-5 text-gray-900 placeholder-green focus:outline-none focus:bg-opacity-100 focus:border-transparent focus:placeholder-gray focus:ring-0 sm:text-sm\"\r\n                        placeholder=\"Search\"\r\n                        type=\"search\"\r\n                        name=\"search\"\r\n                        onChange={(e) => {\r\n                          /* e.preventDefault();\r\n                          setFilteredSites(\r\n                            sites.filter((s) => {\r\n                              return s.Url.toUpperCase().includes(e.target.value.toUpperCase());\r\n                            })\r\n                          );\r\n                          setFilteredPeople(\r\n                            people.filter((p) => {\r\n                              var i = e.target.value\r\n                                .replace(/ /g, \"\")\r\n                                .toUpperCase();\r\n                                console.log(\"people\", people);\r\n                              return (\r\n                                p.FName.toUpperCase().includes(i) ||\r\n                                p.LName.toUpperCase().includes(i) ||\r\n                                `${p.FName}${p.LName}`\r\n                                  .toUpperCase()\r\n                                  .includes(i) ||\r\n                                `${p.LName}${p.FName}`\r\n                                  .toUpperCase()\r\n                                  .includes(i) ||\r\n                                p.Email.toUpperCase().includes(i) ||\r\n                                p.Phone.toUpperCase().includes(i)\r\n                              );\r\n                            })\r\n                          );\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Transition.Root show={open} as={Fragment}>\r\n            <div className=\"lg:hidden\">\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter=\"duration-150 ease-out\"\r\n                enterFrom=\"opacity-0\"\r\n                enterTo=\"opacity-100\"\r\n                leave=\"duration-150 ease-in\"\r\n                leaveFrom=\"opacity-100\"\r\n                leaveTo=\"opacity-0\"\r\n              >\r\n                <Popover.Overlay\r\n                  static\r\n                  className=\"z-20 fixed inset-0 bg-gray bg-opacity-25\"\r\n                />\r\n              </Transition.Child>\r\n\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter=\"duration-150 ease-out\"\r\n                enterFrom=\"opacity-0 scale-95\"\r\n                enterTo=\"opacity-100 scale-100\"\r\n                leave=\"duration-150 ease-in\"\r\n                leaveFrom=\"opacity-100 scale-100\"\r\n                leaveTo=\"opacity-0 scale-95\"\r\n              >\r\n                <Popover.Panel\r\n                  focus\r\n                  static\r\n                  className=\"z-30 absolute top-0 inset-x-0 max-w-3xl mx-auto w-full p-2 transition transform origin-top\"\r\n                >\r\n                  <div className=\"rounded-lg shadow-lg ring-1 ring-green ring-opacity-5 bg-white divide-y divide-gray\">\r\n                    <div className=\"pt-3 pb-2\">\r\n                      <div className=\"flex items-center justify-between px-4\">\r\n                        <div>\r\n                          <img\r\n                            className=\"h-8 w-auto\"\r\n                            src={Logo}\r\n                            alt=\"GET Graph\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"-mr-2\">\r\n                          <Popover.Button className=\"bg-gray rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100\">\r\n                            <span className=\"sr-only\">Close menu</span>\r\n                            <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                          </Popover.Button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-3 px-2 space-y-1\">\r\n                        {isAdmin &&\r\n                        navLinksAdmin.map((n,idx) => {\r\n                          return(\r\n                            <a\r\n                            key={idx}\r\n                            href={n.href}\r\n                            className=\"block rounded-md px-3 py-2 text-base text-blue-600 font-semibold hover:bg-dark hover:text-blue-800\"\r\n                            >\r\n                            {n.title}\r\n                          </a>\r\n                          )\r\n                        })}\r\n                        {!isAdmin &&\r\n                        navLinksUser.map((n,idx) => {\r\n                          return(\r\n                            <a\r\n                            key={idx}\r\n                            href={n.href}\r\n                            className=\"block rounded-md px-3 py-2 text-base text-blue-600 font-semibold hover:bg-dark hover:text-blue-800\"\r\n                            >\r\n                            {n.title}\r\n                          </a>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Popover.Panel>\r\n              </Transition.Child>\r\n            </div>\r\n          </Transition.Root>\r\n        </>\r\n      )}\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { BookOpenIcon, CalendarIcon, CreditCardIcon, LibraryIcon, MapIcon, OfficeBuildingIcon, UsersIcon, CashIcon } from \"@heroicons/react/outline\"\r\n\r\nconst Resources = ({}) => {\r\n    const resources = [\r\n        {name: 'Bank', subtext: \"Transfer money, see balance, and see transfer history\", icon: LibraryIcon, href: '/bank'},\r\n        {name: 'Businesses', subtext: \"Add businesses and buy from other businesses\", icon: CashIcon, href: '/businesses'},\r\n        {name: 'Licenses', subtext: \"Buy new Rushington licenses and see purchased ones\", icon: CreditCardIcon, href: '/licenses'},\r\n        {name: 'Citizens', subtext: \"See all Rushington citizens and their profiles\", icon: UsersIcon, href: '/citizens'},\r\n        {name: 'Map', subtext: \"Full map of Rushington\", icon: MapIcon, href: '/map'},\r\n        //{name: 'Properties', subtext: \"See Rushington properties, which are owned, and which are available\", icon: OfficeBuildingIcon, href: '/properties'},\r\n        {name: 'Constitution', subtext: \"Rushington's system of government, laws, rights, and policies\", icon: BookOpenIcon, href: '/constitution'},\r\n        {name: 'Calendar', subtext: \"Rushington's yearly calendar by month and day\", icon: CalendarIcon, href: '/calendar'},\r\n    ]\r\n    return(\r\n        <div>\r\n            <div>\r\n                {resources.map(resource => {\r\n                    return(\r\n                    <div className='px-2 lg:px-20 py-2'>\r\n                    <a className=''\r\n                        href={resource.href}\r\n                    >\r\n                        <div className='w-full rounded bg-yellow-300 hover:bg-yellow-400 shadow py-6 px-2'>\r\n                        <div className='flex justify-center'>\r\n                            <resource.icon className='h-7 w-7'/>\r\n                            <p className='font-bold text-xl pl-1'>{resource.name}</p>\r\n                        </div>\r\n                        <p className='text-center text-gray-700'>{resource.subtext}</p>\r\n                        </div>\r\n                    </a>\r\n                    </div>)\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resources;","import React from \"react\";\r\nimport { EmojiSadIcon, PencilIcon } from \"@heroicons/react/solid\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { CheckIcon } from \"@heroicons/react/outline\";\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst Popup = ({ open, setOpen, header, additionalComponent }) => {\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  // Optional additional comp. passed as prop. Has to be a function for React to use it as a component\r\n  function AdditionalComponent(){\r\n    return additionalComponent();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog\r\n          as=\"div\"\r\n          static\r\n          className=\"fixed z-10 inset-0 overflow-y-auto \"\r\n          open={open}\r\n          onClose={setOpen}\r\n        >\r\n          <div className=\"flex items-end justify-center  min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0\"\r\n              enterTo=\"opacity-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <Dialog.Overlay className=\"fixed inset-0 bg-gray-700 bg-opacity-30 transition-opacity\" />\r\n            </Transition.Child>\r\n\r\n            {/* This element is to trick the browser into centering the modal contents. */}\r\n            <span\r\n              className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &#8203;\r\n            </span>\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            >\r\n              <div className=\"inline-block align-bottom justify-items-center bg-gray-100 rounded-lg px-4 pt-5 pb-4 overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\r\n              <div className='flow-root w-full'>\r\n              <button\r\n                    type=\"button\"\r\n                    className=\"mt-3 inline-flex float-right justify-center rounded-sm border border-gray-600 shadow-sm px-4 py-1 bg-red text-base font-medium text-gray hover:bg-red-600 hover:text-white focus:outline-none sm:mt-0 sm:col-start-1 sm:text-sm\"\r\n                    onClick={() => setOpen(false)}\r\n                    ref={cancelButtonRef}\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-4 w-4\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M6 18L18 6M6 6l12 12\"\r\n                      />\r\n                    </svg>\r\n                    \r\n                  </button>\r\n                  </div>\r\n                <div>\r\n                  <div className=\"flex items-center justify-center rounded-full\">\r\n                    <h1 className=\"text-green text-center font-semibold text-2xl px-2\">{header}</h1>\r\n                  </div>\r\n                  <div className=\"mt-3 text-center sm:mt-5\">\r\n                    <Dialog.Title\r\n                      as=\"h3\"\r\n                      className=\"text-lg leading-6 font-medium text-green\"\r\n                    >\r\n                      \r\n                    </Dialog.Title>\r\n                    <div className=\"mt-2\">\r\n                      {additionalComponent &&\r\n                      <AdditionalComponent/>\r\n                      }\r\n                      <p className=\"text-sm text-gray-500\"></p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n                \r\n                  \r\n                  \r\n              </div>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </>\r\n  );\r\n};\r\nexport default Popup;\r\n","import { Menu, Transition } from \"@headlessui/react\"\r\nimport { Fragment, useState } from \"react\"\r\n\r\n\r\nconst CitizenUserDropboxMenu = ({className, citizens, user, selectedCitizen, setSelectedCitizen, filteredCitizens, setFilteredCitizens, type}) => {\r\n    const [searchCitizensInput, setSearchCitizensInput] = useState('')\r\n    \r\n    function UpOrDownArrow(props){\r\n        if(props.open){\r\n            return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 15l7-7 7 7\" />\r\n              </svg>} else {\r\n            return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n          }\r\n        }\r\n    function classNames(...classes) {\r\n            return classes.filter(Boolean).join(\" \");\r\n          }\r\n      \r\n    function censor(citizenID){\r\n            return(user.citizenID != citizenID ? `CI-***${citizenID.substring(6, 8)}` : citizenID);\r\n    }\r\n\r\n    return(\r\n        <Menu as=\"div\" className={classNames(\"flex-shrink-0 justify-center\", className)}>\r\n                  {({ open }) => (\r\n                    <>\r\n                      <div className='flex justify-center'>\r\n                        <Menu.Button className=\"bg-white justify-center flex rounded-lg flex px-2 py-2 text-sm ring-2 ring-gray ring-opacity-20 focus:outline-none focus:ring-opacity-100\">\r\n                            <p className='text-center'>\r\n                              {selectedCitizen != undefined ? selectedCitizen.name : \"Select Citizen...\"}\r\n                            </p>\r\n                            <UpOrDownArrow open={open}/>\r\n                        </Menu.Button>\r\n                      </div>\r\n                      <Transition\r\n                        show={open}\r\n                        as={Fragment}\r\n                        enter=\"transition ease-out duration-75\"\r\n                        enterFrom=\"transform opacity-0 scale-95\"\r\n                        enterTo=\"transform opacity-100 scale-100\"\r\n                        leave=\"transition ease-in duration-75\"\r\n                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                        leaveTo=\"transform opacity-0 scale-95\"\r\n                      >\r\n                        <div className='flex justify-center'>\r\n                          \r\n                        <Menu.Items\r\n                          static\r\n                          className=\"z-50 absolute justify-center h-auto w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-green ring-opacity-5 focus:outline-none\"\r\n                        >\r\n                          <div className='px-1'>\r\n                        <input className='rounded w-full focus:outline-none border-2 px-1 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700' defaultValue={searchCitizensInput} placeholder='Search'\r\n                              onChange={event => {\r\n                                setSearchCitizensInput(event.target.value);\r\n                                setFilteredCitizens(citizens.filter(citizen => {\r\n                                  console.log(filteredCitizens)\r\n                                  return citizen.name.toUpperCase().includes(event.target.value.toUpperCase());\r\n                                }))\r\n                              }}></input>\r\n                        </div>\r\n                          <div className='max-h-40 overflow-y-scroll'>\r\n                          {filteredCitizens.filter(citizen => {\r\n                            return type != undefined && type == 'All' ? true : citizen.citizenID != user.citizenID\r\n                          }).map(citizen => {\r\n                            return(\r\n                              <Menu.Item>\r\n                            {({ active }) => (\r\n                               <button\r\n                               onClick={()=>{setSelectedCitizen(citizen)}}\r\n                               className={classNames(\r\n                                 active ? \"bg-gray-100\" : \"\",\r\n                                 \"block w-full text-left px-2 py-2 text-sm text-green\"\r\n                               )}\r\n                             >\r\n                               <div className='w-full flow-root'>\r\n                                  <p className='float-left font-semibold'>{citizen.name}</p>\r\n                                  <p className='float-right'>{censor(citizen.citizenID)}</p>\r\n                               </div>\r\n                             </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                            )\r\n                          })}\r\n                          </div>\r\n                        </Menu.Items>\r\n                        </div>\r\n                      </Transition>\r\n                    </>\r\n                  )}\r\n                </Menu>\r\n    )\r\n}\r\n\r\nexport default CitizenUserDropboxMenu","import CitizenUserDropboxMenu from './CitizenUserDropboxMenu'\r\nimport React, {useEffect, useState} from 'react'\r\nimport { ArrowCircleUpIcon } from '@heroicons/react/outline';\r\n\r\nconst NewTransferPopupBody = ({database, user, setMeldas, meldas, getTime, getDate, getYear, setTransfers, setNewTransferPopupOpen}) => {\r\n    const [citizens, setCitizens] = useState([]);\r\n    const [filteredCitizens, setFilteredCitizens] = useState([]);\r\n    const [selectedCitizen, setSelectedCitizen] = useState();\r\n    const [transferAmount, setTransferAmount] = useState(0);\r\n    const [transferReason, setTransferReason] = useState('');\r\n    const [salesTaxRate, setSalesTaxRate] = useState(0);\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    useEffect(()=>{addCitizens();\r\n        console.log('Called useeffect')\r\n    }, []);\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n      }\r\n    function addCitizens(){\r\n    database.ref('/citizens').get().then(citizensObjects => {\r\n        setCitizens(Object.values(citizensObjects.val()));\r\n        setFilteredCitizens(Object.values(citizensObjects.val()));\r\n        //setSelectedCitizen(Object.values(citizensObjects.val())[0]);\r\n        database.ref('/government/salesTaxRate').get().then(salesTaxRateSnapshot => {\r\n            setSalesTaxRate(salesTaxRateSnapshot.val());\r\n        })\r\n    })}\r\n\r\n    function onClickSendTransfer(){\r\n        var receiverResultingBalance = 0;\r\n        var senderResultingBalance = 0;\r\n        if(isTransferAmountValid()){\r\n        database.ref(`/citizens/${selectedCitizen.citizenID}/meldas`).get().then(\r\n            meldasSnapshot => {\r\n                const amountTaxed = Math.round(Number(transferAmount) * salesTaxRate);\r\n                receiverResultingBalance = (Number(meldasSnapshot.val()) + Number(transferAmount)) - amountTaxed;\r\n                database.ref(`/citizens/${selectedCitizen.citizenID}/meldas`).set(receiverResultingBalance);\r\n                database.ref(`/citizens/${user.citizenID}/meldas`).get().then(\r\n                    meldasSnapshot => {\r\n                        senderResultingBalance = Number(meldasSnapshot.val()) - Number(transferAmount)\r\n                        database.ref(`/citizens/${user.citizenID}/meldas`).set(senderResultingBalance);\r\n                        user.meldas = senderResultingBalance;\r\n                        const transferID = generateTransferID();\r\n                        database.ref(`/citizens/${user.citizenID}/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount,\r\n                            receiverID: selectedCitizen.citizenID,\r\n                            receiverName: selectedCitizen.name,\r\n                            type: \"Outgoing\",\r\n                            reason: transferReason.length != 0 ? transferReason : 'None given',\r\n                            resultingBalance: senderResultingBalance\r\n                        }\r\n                        \r\n                    );\r\n                    database.ref(`/citizens/${selectedCitizen.citizenID}/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount - amountTaxed,\r\n                            senderID: user.citizenID,\r\n                            senderName: user.name,\r\n                            type: \"Incoming\",\r\n                            reason: transferReason.length != 0 ? transferReason : 'None given',\r\n                            resultingBalance: receiverResultingBalance\r\n                        }\r\n                        \r\n                    );\r\n                    if(amountTaxed > 0){\r\n                    const taxTransferID = generateTransferID();\r\n                    database.ref('/government').get().then(governmentSnapshot => {\r\n                        var governmentFunds = governmentSnapshot.val().meldas;\r\n                        const newGovernmentFunds = governmentFunds + amountTaxed;\r\n                        database.ref('/government/meldas').set(newGovernmentFunds);\r\n                        database.ref(`/government/transfers/${taxTransferID}`).set(\r\n                            {\r\n                                transferID: taxTransferID,\r\n                                date: `${getDate()}, ${getYear()}`,\r\n                                time: getTime(),\r\n                                ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                amount: amountTaxed,\r\n                                senderID: user.citizenID,\r\n                                senderName: user.name,\r\n                                type: \"Incoming\",\r\n                                reason: `${salesTaxRate * 100}% tax of ${transferID}`,\r\n                                resultingBalance: newGovernmentFunds\r\n                            }\r\n                        )\r\n                    })\r\n                }\r\n                    database.ref(`/citizens/${user.citizenID}/transfers`).get().then(\r\n                        transfersSnapshot => {\r\n                            console.log(\"Transfers\", transfersSnapshot.val())\r\n                            user.transfers = Object.values(transfersSnapshot.val()).sort((transfer1, transfer2) => {\r\n                                return transfer2.ssre - transfer1.ssre\r\n                            });\r\n                            localStorage.setItem('user', JSON.stringify(user));\r\n                            setNewTransferPopupOpen(false);\r\n                        }\r\n                    )\r\n                    /* database.ref(`/citizens/${user[\"Citizen ID\"]}/ArrayTest`).set(\r\n                        ['igrn', 'griolw', 'gej', 'aqe']\r\n                    ); */\r\n                    }\r\n                    \r\n                )\r\n            }\r\n        );\r\n        }\r\n    }\r\n\r\n    function generateTransferID(){\r\n        var transferID = 'MT-'\r\n        for(var i = 0; i < 5; i++){\r\n            transferID = transferID + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(transferID);\r\n    }\r\n\r\n    function isTransferAmountValid(){\r\n        return selectedCitizen != undefined && String(transferAmount).length != 0 && !String(transferAmount).startsWith('-') \r\n                && (Number(user.meldas) - Number(transferAmount) >= 0) && transferAmount != 0;\r\n    }\r\n\r\n    return(\r\n        <div className='w-full justify-center '>\r\n            <div className='pb-4'>\r\n            <div className='p-5 bg-blue-200 rounded shadow'>\r\n                <div className=''>\r\n                <div className='w-full pb-2'>\r\n                <p className='text-sm font-bold'>TO</p>\r\n                <CitizenUserDropboxMenu\r\n                    filteredCitizens={filteredCitizens}\r\n                    setFilteredCitizens={setFilteredCitizens}\r\n                    citizens={citizens}\r\n                    selectedCitizen={selectedCitizen}\r\n                    setSelectedCitizen={setSelectedCitizen}\r\n                    className='pb-2'\r\n                    user={user}\r\n                />\r\n                </div>\r\n                <div className='w-full pb-2'>\r\n                <p className='text-sm font-bold'>AMOUNT</p>\r\n                <div className='flex w-full justify-center'>\r\n                <input type='Number' placeholder='' min={0} max={user.meldas} defaultValue={transferAmount} onChange={event => {setTransferAmount(Number(event.target.value))}} className='rounded appearance-textfield flex justify-center w-full focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-1'></input>\r\n                <p className='font-semibold pl-1 text-xl'>[M]</p>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                <div className='pb-2'>\r\n                <p className='text-sm font-bold'>REASON</p>\r\n                <div className='flex justify-center'>\r\n                <textarea placeholder='' onChange={event => {setTransferReason(event.target.value)}} className='rounded w-full bg-white h-20 flex justify-center resize-none focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-2'></textarea>\r\n                </div>\r\n                </div>\r\n                {isTransferAmountValid() &&\r\n                <div>\r\n                <div className='pb-2'>\r\n                    \r\n                    <p className='text-sm font-bold'>RESULTING BALANCE</p>\r\n                    \r\n                    <p className='p-1 font-semibold shadow bg-white '>{Number(user.meldas) - Number(transferAmount)} {'[M]'}</p>\r\n                </div>\r\n                <div className='pb-2'>\r\n                    \r\n                <p className='text-sm font-bold'>AMOUNT TAXED</p>\r\n                \r\n                <p className='p-1 font-semibold shadow bg-white '>{Math.round(Number(transferAmount) * Number(salesTaxRate))} [M]</p>\r\n            </div>\r\n            </div>\r\n                }\r\n            </div>\r\n            </div>\r\n            <button className={classNames(\r\n                isTransferAmountValid()\r\n                ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'w-1/3 rounded py-1 px-2 font-semibold shadow')}\r\n                onClick={onClickSendTransfer}\r\n            >\r\n                <div className='flex justify-center'>\r\n                <ArrowCircleUpIcon className='h-6 w-6'/>\r\n                SEND\r\n                </div>\r\n                </button>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(NewTransferPopupBody)","import { PlusCircleIcon } from \"@heroicons/react/outline\";\r\nimport Popup from '../Low Level/Popup'\r\nimport {useEffect, useState} from 'react'\r\nimport NewTransferPopupBody from \"../Low Level/NewTransferPopupBody\";\r\n\r\nconst Bank = ({user, citizenID, database, getTime, getDate, getYear}) => {\r\n  \r\n    const [newTransferPopupOpen, setNewTransferPopupOpen] = useState(false);\r\n    const [meldas, setMeldas] = useState('...');\r\n    const [bankAccounts, setBankAccounts] = useState([]);\r\n    //const [transfers, setTransfers] = useState([]);\r\n    /* useEffect(setBankValues, []);\r\n    function setBankValues(){\r\n    database.ref(`citizens/${citizenID}`).get().then(\r\n        userSnapshot => {\r\n          setMeldas(userSnapshot.val().meldas);\r\n          if(userSnapshot.val().transfers != null && Object.values(userSnapshot.val().transfers).length != 0){\r\n              console.log(\"Transfers\", Object.values(userSnapshot.val().transfers))\r\n            setTransfers(Object.values(userSnapshot.val().transfers).sort((transfer1, transfer2) => {\r\n                return transfer2.ssre - transfer1.ssre\r\n            }));\r\n          }\r\n          \r\n        }\r\n      )\r\n    } */\r\n    console.log('Meldas', meldas)\r\n    const currentUser = 'Jonah Nelson';\r\n    \r\n    function censor(id){\r\n        return(id.startsWith('CI-') && user.citizenID != id ? `CI-***${id.substring(6, 8)}` : id);\r\n    }\r\n\r\n    return(\r\n        <div className='mx-1 lg:mx-10 my-1 lg:my-5'>\r\n            <div className='flow-root py-2'>\r\n                <div className='float-left'>\r\n            <p className='text-4xl text-black font-bold'>Bank</p>\r\n            \r\n            </div>\r\n            \r\n            <div className='float-right'>\r\n                <button className='rounded bg-yellow-300 p-2 font-semibold hover:bg-yellow-400 flex shadow'\r\n                    onClick={()=>{setNewTransferPopupOpen(true)}}\r\n                ><PlusCircleIcon className='w-6 h-6'/><p className='pl-1'>NEW TRANSFER</p>\r\n                <Popup\r\n                    open={newTransferPopupOpen}\r\n                    setOpen={setNewTransferPopupOpen}\r\n                    header='New Transfer'\r\n                    onClickSave={()=>{}}\r\n                    inputs={[]}\r\n\r\n                    saveText={'Send'}\r\n                    additionalComponent={()=>{return <NewTransferPopupBody database={database} bankAccounts={bankAccounts} user={user} setMeldas={setMeldas} meldas={meldas} getTime={getTime} getDate={getDate} getYear={getYear} setNewTransferPopupOpen={setNewTransferPopupOpen}/>}}\r\n                />\r\n                </button>\r\n            </div>\r\n            </div>\r\n            <div className='p-2 lg:p-6 group bg-gray-100 rounded'>\r\n            <div className='lg:flow-root w-full  p-1 shadow bg-white border-4 border-gray-500 text-bottom'>\r\n                <div className='lg:float-left text-bottom bg-white'>\r\n                <p className='text-2xl font-semibold pl-1 text-gray-700'>Current Balance</p>\r\n                \r\n                \r\n                </div>\r\n            <div className='flex justify-center text-2xl font-bold lg:float-right px-1 border-2 border-gray-500 bg-white'>\r\n                <p className='pr-1'>{user.meldas}</p>\r\n                <p>[M]</p>\r\n            </div>\r\n            </div>\r\n            \r\n            <div className='w-full border-gray-500 border-b-4 border-r-4 border-l-4 bg-white'>\r\n                \r\n                <p className='font-semibold text-gray-700 px-2 pt-2 text-2xl'>Transaction History</p>\r\n                {user.transfers != undefined && Object.values(user.transfers).length != 0 ?\r\n                <div className='lg:p-2 p-1 bg-gray-200'>\r\n                {Object.values(user.transfers).sort((transfer1, transfer2) => {\r\n                    return transfer2.ssre - transfer1.ssre;\r\n                }).map(transfer => {\r\n                    return(\r\n                        <div className='p-1'>\r\n                            <Transfer transfer={transfer}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n                </div> :\r\n                <div className='p-2 bg-gray-100'>\r\n                <p className='font-bold text-2xl'>Nothing yet</p>\r\n                </div>\r\n            }\r\n                \r\n            </div>\r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n    \r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(\" \");\r\n  }\r\n\r\nfunction Transfer({transfer}){\r\n    \r\n        return(\r\n            <div className='rounded bg-white shadow'>\r\n                <div className='w-full lg:flow-root'>\r\n                <p className='lg:float-left pl-2 pt-2 font-semibold text-gray-700'>{transfer.date} at {transfer.time}</p>\r\n                <p className='lg:float-right lg:pl-0 pl-2 pr-2 pt-2 font-semibold text-gray-700'>{transfer.transferID} {transfer.ssre}</p>\r\n                </div>\r\n                <div className='grid grid-cols-4 lg:gap-3 gap-y-3 p-2'>\r\n                {transfer.type == \"Incoming\" ?\r\n                <div className='col-span-4 lg:col-span-2 grid grid-cols-2'>\r\n                            <div className='col-span-1'>\r\n                                <p className='font-semibold'>Amount</p>\r\n                                <p className='text-green-700'>+{transfer.amount} [M]</p>\r\n                            </div>\r\n                            <div className='col-span-1'>\r\n                                <p className='font-semibold'>Sender</p>\r\n                                <p className=''>{transfer.senderName}</p>\r\n                                <p className=''>{transfer.senderName != 'Rushington Government' && transfer.senderName != 'Rushington Bank' ? \r\n                                    censor(transfer.senderID) : ''}</p>\r\n                            </div>\r\n                            </div>\r\n                :    \r\n                <div className='col-span-4 lg:col-span-2 grid grid-cols-2'>\r\n                <div className='col-span-1'>\r\n                    <p className='font-semibold'>Amount</p>\r\n                    <p className='text-red-700'>-{transfer.amount} [M]</p>\r\n                </div>\r\n                <div className='col-span-1'>\r\n                    <p className='font-semibold'>Receiver</p>\r\n                    <p className=''>{transfer.receiverName}</p>\r\n                    <p className=''>{transfer.receiverName != 'Rushington Government' && transfer.receiverName != 'Rushington Bank' && transfer.receiverName != 'Real Currency' ? \r\n                                    censor(transfer.receiverID) : ''}</p>\r\n                </div>\r\n                </div>\r\n                        }\r\n                <div className='col-span-2 lg:col-span-1'>\r\n                                <p className='font-semibold'>Reason</p>\r\n                                <p className=''>{transfer.reason}</p>\r\n                            </div>\r\n                <div className='col-span-2 lg:col-span-1'>\r\n                                <p className='font-semibold'>Resulting Balance</p>\r\n                                <p className=''>{transfer.resultingBalance} [M]</p>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        )\r\n    \r\n}\r\n}\r\n\r\n\r\nexport default Bank;","const Calendar = ({currentDate, currentYear}) => {\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n      }\r\n\r\n    const months = [\r\n    {number: 1, name: 'Igmo'},\r\n    {number: 2, name: 'Bostiod'},\r\n    {number: 3, name: 'Walin'},\r\n    {number: 4, name: 'Sabetata'},\r\n    {number: 5, name: 'Carton'},\r\n    {number: 6, name: 'Wayu'},\r\n    {number: 7, name: 'Wildder'},\r\n    {number: 8, name: 'Wekenbarg'},\r\n    {number: 9, name: 'Pape'},\r\n    {number: 10, name: 'Fortis'},\r\n    {number: 11, name: 'Callidus'},\r\n    {number: 12, name: 'Fastis'}\r\n    ];\r\n\r\n    function generateDays(){\r\n        var days = [];\r\n        for(var i = 1; i < 25; i++){\r\n            days.push(i);\r\n        }\r\n        return(days)\r\n    }\r\n\r\n    function getHoliday(day, monthNumber){\r\n        if(monthNumber == 1 && day == 10){\r\n            return('Dependence Day')\r\n        } else if(monthNumber == 1 && day == 23){\r\n            return('To Day')\r\n        } else if(monthNumber == 2 && day == 3){\r\n            return('Coupon Day')\r\n        } else if(monthNumber == 2 && day == 4){\r\n            return('Government Harassment Day')\r\n        } else if(monthNumber == 2 && day == 30){\r\n            return('Monkey Day')\r\n        } else if(monthNumber == 3 && day == 1){\r\n            return('Day of Stain')\r\n        } else if(monthNumber == 3 && day == 14){\r\n            return('Crisis Day')\r\n        } else if(monthNumber == 4 && day == 15){\r\n            return('Cruelty Day')\r\n        } else if(monthNumber == 4 && day == 22){\r\n            return('Shantik Forest Memorial Day')\r\n        } else if(monthNumber == 5 && day == 19){\r\n            return('Blood Day')\r\n        } else if(monthNumber == 5 && day == 24){\r\n            return('Insurance Day')\r\n        } else if(monthNumber == 6 && day == 5){\r\n            return('Argument Day')\r\n        } else if(monthNumber == 6 && day == 17){\r\n            return('China Day')\r\n        } else if(monthNumber == 7 && day == 1){\r\n            return('Clothes Day')\r\n        } else if(monthNumber == 7 && day == 20){\r\n            return('Thankstaking')\r\n        } else if(monthNumber == 8 && day == 9){\r\n            return('Chive Day')\r\n        } else if(monthNumber == 8 && day == 20){\r\n            return('Jazz Day')\r\n        }\r\n    }\r\n\r\n    const days = generateDays();\r\n\r\n    function formatDate(month, day){\r\n        var dayString = '' + day;\r\n        console.log(dayString.endsWith('1'));\r\n        if(dayString.endsWith('0') ||\r\n        dayString.endsWith('4') ||\r\n        dayString.endsWith('5') ||\r\n        dayString.endsWith('6') ||\r\n        dayString.endsWith('7') ||\r\n        dayString.endsWith('8') ||\r\n        dayString.endsWith('9')){\r\n          dayString = dayString.concat('th');\r\n        } else if(dayString.endsWith('1')){\r\n          dayString = dayString == '11' ? dayString.concat('th') : dayString.concat('st');\r\n        } else if(dayString.endsWith('2')){\r\n          dayString = dayString == '12' ? dayString.concat('th') : dayString.concat('nd');\r\n        } else if(dayString.endsWith('3')){\r\n          dayString = dayString == '13' ? dayString.concat('th') : dayString.concat('rd');\r\n        }\r\n        return(`${month} ${dayString}`);\r\n      }\r\n    console.log(days);\r\n    return(\r\n        <div className='py-10 px-1 lg:px-16'>\r\n            <div className='flex justify-center'>\r\n            <h className='text-center text-3xl font-bold'>Year {currentYear}</h>\r\n            </div>\r\n             {months.map(month=>{return(\r\n        <div className='py-5'>\r\n           \r\n        <table class=\"table-fixed w-full border-collapse\">\r\n\r\n  <thead>\r\n  \r\n    <tr>\r\n      <th className=\"text-left text-xl\">{month.name}</th>\r\n      \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n \r\n  \r\n    {[4, 3, 2, 1].map(week => {\r\n        return(\r\n            <tr className=\"\">\r\n    {days.slice(24-(6*week), 24-(6*week)+6).map(day => {\r\n        return(\r\n            <td className={classNames(currentDate == formatDate(month.name, day) ? 'bg-yellow-300 hover:bg-yellow-400 text-black' : 'bg-white hover:bg-gray-200 text-blue-600',\r\n                \"border border-gray-500 px-1 h-24\")}>\r\n                    <div className='w-full h-full'>\r\n                <div className=''>\r\n                <p className='text-black'>{day}</p>\r\n                </div>\r\n                <div className=''>\r\n                <p className='break-normal overflow-hidden font-semibold text-xs lg:text-base'>{getHoliday(day, month.number)}</p>\r\n                </div>\r\n                </div>\r\n            </td>\r\n        )\r\n    })}\r\n    </tr>\r\n        )\r\n    })}\r\n  \r\n  \r\n  </tbody>\r\n</table>\r\n</div>\r\n    )})}\r\n    </div>)\r\n}\r\n\r\nexport default Calendar;","const Constitution = () => {\r\n    const laws = [\r\n        'No citizen can alter any governmental, business, or residential property that is not their own unless given verbal or written permission by the owner of the property.',\r\n        'No citizen can interact with containers (chests, furnaces, etc.) that aren’t theirs unless given verbal or written permission or they are labeled “Public.”',\r\n        'No citizen can trespass on residential property that isn’t theirs unless given verbal or written permission.',\r\n        'No citizen can own TNT.',\r\n        'No citizen can plot to overthrow the government.',\r\n        'No citizen can farm crops/animals, ride horses, create potions, or create and operate a business, unless they paid for and own a license signed by the dictator of Rushington.',\r\n        'No citizen can kill or hurt anyone else unless by self-defense.',\r\n        'No citizen can take items or property (including animals and mobs) that isn’t their own unless given verbal or written permission.'\r\n    ]\r\n\r\n    const rights = [\r\n        'All citizens of Rushington have the right to say whatever they want without punishment, unless what’s said is a threat against others or the government.',\r\n        'All citizens of Rushington have the right to use any of the government services in the government area of Rushington.',\r\n        'All citizens of Rushington, if they own a business license signed by the dictator of Rushington, have the right to create and operate a business on a business lot they paid for, at a price given by the dictator of Rushington.',\r\n        'All citizens of Rushington have the right to buy (at a price given by the dictator of Rushington), own, and alter property that is their own.',\r\n        'All citizens of Rushington have the right to own any item they want, except TNT.',\r\n        'All citizens of Rushington have the right to a fair public trial by the dictator if they feel they were wrongly prosecuted.',\r\n        'All citizens of Rushington have the right to resist being searched by military personnel if they believe it’s unnecessary, although the dictator may issue a search warrant to allow them to do so.',\r\n        'All citizens have the right to go onto any governmental property (except the Town Hall) and business property unless the property is labeled “Private.”',\r\n        'All businesses have the right to refuse service to anyone they want.',\r\n        'All citizens have the right to go onto business properties, as long as business is in mind.',\r\n        'All citizens have the right to alter terrain outside of Rushington.',\r\n        'All citizens have the right to fair treatment under the law.'\r\n    ]\r\n\r\n    const policies = [\r\n        'To become a citizen of Rushington, one has to register with the dictator at the registry/licensure. He or she will receive an official certificate of citizenship that contains their information that is signed by the dictator of Rushington. The citizen will then be guaranteed the rights laid out by the Rights section of the Constitution and will be required to follow all laws, or he or she will be punished. It is not required by law that citizens uphold civil responsibilities laid out in the Civil Responsibilities section of the Constitution, but it is preferred.',\r\n        'To create regular currency, a citizen must find/mine/get gold and rename it with an anvil. Gold nuggets are renamed “Meldas”, gold ingots are renamed “Demorias”, and gold blocks are renamed “Rildas.” Each citizen is free to use currency however they please.',\r\n        'To get a property, a citizen must ask which properties are free to use, and the dictator of Rushington will show them which to use based on the purpose (residential vs. business, type of business, etc.) and property balance across the city.',\r\n        'To create a book for the library, a citizen has to put the book in a submission box in the library, and the book will be put in the library in its appropriate genre if it’s approved by the dictator.',\r\n        'To attain a license, a citizen must buy it on the Rushington Hub website. It is illegal for a citizen to do an action that legally requires a license without owning that license.',\r\n        'To sign up for the military, a citizen must meet with the dictator or general at the military office and be trained, approved, and registered.',\r\n        'To become a police officer, a citizen must purchase a Police Officer License on the Rushington Hub website. He or she will be encouraged to wear the now legal netherite armor and will legally be able to reasonably threaten to enact or enact violence to enforce the law. If the Rushington government believes the threat or enaction was not reasonable, however, that is grounds for license revocation.',\r\n        'To use the bank, a citizen drops their gold nuggets, ingots, or blocks into their deposit box at the bank, and the dictator will keep track of the money of each citizen, occasionally granting interest at the cost of the government.'\r\n    ]\r\n\r\n    const civilResponsibilities = [\r\n        'All citizens should kill any harmful mobs they see within Rushington.',\r\n        'All citizens should fix any property damage caused by creepers/fire/TNT that they find to the best of their ability.',\r\n        'All citizens should buy residential property and build a home.',\r\n        'All citizens should start a business or get a job as part of an already existing business.',\r\n        'All citizens should use government services.'\r\n    ]\r\n\r\n    const constitutionalAdditionsChanges = [\r\n        '(Additional Law). Advisors are citizens in the eyes of the law, but they can legally alter any governmental property as they see fit.',\r\n        '(Additional Right). All citizens have the right to expression. They may wear any skin and armor.',\r\n        '(Additional Law). No citizen can wear/own a green leather cap, as they are only worn by military personnel, and any offense would be stolen valor.',\r\n        '(Additional Right). All citizens have the right to kill any animals/mobs on their property or on governmental/business property that doesn’t clearly belong to that government/business.',\r\n        '(Additional Law). All citizens have to fix any property damage that was caused by a creeper that exploded in an attempt to kill that citizen.',\r\n        '(Additional Law). The most recent edition of the Constitution is the Supreme Law of the Land.',\r\n        '(Additional Right). No citizen of Rushington can be convicted of a crime that was not prohibited previous of the crime.',\r\n        '(Addition to the System of Government). The dictator of Rushington needs the approval of one of the advisors of a punishment when deciding a verdict.',\r\n        '(Clarification of Right 8). No citizen can enter or alter the property that the Town Hall is on (defined the innermost green hedge).',\r\n        '(Addition to the System of Government). The dictator of Rushington has the right to infringe upon a citizen’s right(s) if given permission by both advisors.',\r\n        '(Additional Policy). Citizens have to pay for their residential/business property within a month of beginning the purchase.',\r\n        '(Additional Policy). Citizens have to start paying for a residential/business property within a day of the property being registered to the citizen.',\r\n        '(Additional Law). No citizen can host a business on their business property if he or she does not own a Business and Organization License.',\r\n        '(Additional Law). No citizen can wear netherite armor if he or she is not a licensed police officer.'\r\n    ]\r\n\r\n    const constitutionText = `\r\n    System of Government\r\n    The government of Rushington is a dictatorship under the sovereignty of a governor and a council consisting of two advisors, who are, under the law, citizens. The dictator can create/change laws and any other legal policies. The citizens must follow these laws and legal policies or they will be fined/punished an amount that the dictator, who acts as a judge, sees as necessary. The dictator of Rushington can break any laws or legal policies with the permission of both advisors.\r\n    \r\n    Laws\r\n    The following laws are enforced by military personnel. Citizens must follow these laws or they will be punished.\r\n    1. No citizen can alter any governmental, business, or residential property that is not their own unless given verbal or written permission by the owner of the property.\r\n    2. No citizen can interact with containers (chests, furnaces, etc.) that aren’t theirs unless given verbal or written permission or they are labeled “Public.”\r\n    3. No citizen can trespass on residential property that isn’t theirs unless given verbal or written permission.\r\n    4. No citizen can own TNT.\r\n    5. No citizen can plot to overthrow the government.\r\n    6. No citizen can farm crops/animals, ride horses, create potions, or create and operate a business, unless they paid for and own a license signed by the dictator of Rushington.\r\n    7. No citizen can kill or hurt anyone else unless by self-defense.\r\n    8. No citizen can take items or property (including animals and mobs) that isn’t their own unless given verbal or written permission.\r\n    \r\n    Rights\r\n    All citizens of Rushington have the following rights that cannot be infringed upon.\r\n    1. All citizens of Rushington have the right to say whatever they want without punishment, unless what’s said is a threat against others or the government.\r\n    2. All citizens of Rushington have the right to use any of the government services in the government area of Rushington.\r\n    3. All citizens of Rushington, if they own a business license signed by the dictator of Rushington, have the right to create and operate a business on a business lot they paid for, at a price given by the dictator of Rushington.\r\n    4. All citizens of Rushington have the right to buy (at a price given by the dictator of Rushington), own, and alter property that is their own.\r\n    5. All citizens of Rushington have the right to own any item they want, except TNT.\r\n    6. All citizens of Rushington have the right to a fair public trial by the dictator if they feel they were wrongly prosecuted.\r\n    7. All citizens of Rushington have the right to resist being searched by military personnel if they believe it’s unnecessary, although the dictator may issue a search warrant to allow them to do so.\r\n    8. All citizens have the right to go onto any governmental property (except the Town Hall) and business property unless the property is labeled “Private.”\r\n    9. All businesses have the right to refuse service to anyone they want.\r\n    10. All citizens have the right to go onto business properties, as long as business is in mind.\r\n    11. All citizens have the right to alter terrain outside of Rushington.\r\n    12. All citizens have the right to fair treatment under the law.\r\n    \r\n    Policies\r\n    The following policies describe important information in the daily life of a Rushington citizen.\r\n    1. To become a citizen of Rushington, one has to register with the dictator at the registry/licensure. He or she will receive an official certificate of citizenship that contains their information that is signed by the dictator of Rushington. The citizen will then be guaranteed the rights laid out by the Rights section of the Constitution and will be required to follow all laws, or he or she will be punished. It is not required by law that citizens uphold civil responsibilities laid out in the Civil Responsibilities section of the Constitution, but it is preferred.\r\n    2. To create regular currency, a citizen must find/mine/get gold and rename it with an anvil. Gold nuggets are renamed “Meldas”, gold ingots are renamed “Demorias”, and gold blocks are renamed “Rildas.” Each citizen is free to use currency however they please.\r\n    3. To apply for a residential property, a citizen has to meet with the dicator of Rushington at the registry/licensure. The dictator will assign a property that the citizen can then alter. The citizen will be given an initial price that he or she will have to play (1 Melda per block; 1 Melda per 10 blocks of farmland), and then will have to pay regular taxes every time he or she joins the world, at a rate that will be dictated in the residential property deed that the citizen will be given after the property is purchased. An advisor must approve the building. The upward vertical limit is 40 blocks, and the downward vertical limit is 10 blocks. Any new information (such as a new member of the household) will have to be disclosed to the dictator of Rushington in a meeting at the registry/licensure. The dictator will add any new information to the official property record.\r\n    4. To apply for business property, a citizen has to pay for a business license and meet with the dictator of Rushington at the registry/licensure. The citizen will fill out a form stating the name and type of business, and if it’s for profit or it’s a non-profit organization. The citizen will have to pay an initial price for the property (1 Melda per block), and then regular taxes every time the citizen joins the world at a rate that is dictated by the business property deed that the citizen is given after the property is purchased. The dictator has to approve of the business. The business owner can hire anybody to work for them, if they disclose the information in a meeting with the dictator at the registry/licensure.\r\n    5. To use the post office service, a citizen can rename the item to the address that the item will be sent to and put it in their mailbox, or bring it to the post office. The government will carry the item to the elected receiver.\r\n    6. To be educated in the school, there must be a class of at least 3 who will meet up with the dictator or someone who the dictator approves of. When the citizens finish the education, they will be given a certificate of completion.\r\n    7. To create a book for the library, a citizen has to put the book in a submission box in the library, and the book will be put in the library in its appropriate genre if it’s approved by the dictator.\r\n    8. To attain a license, a citizen must meet with the dictator at the registry/licensure and the dictator will assign a price for it and will decide if the citizen can have the license.\r\n    9. To sign up for the military, a citizen must meet with the dictator at the military office and be trained, approved, and registered. He or she will be given a green leather cap that the soldier will be required to wear at all times when within the boundaries of Rushington. Soldiers act as the law enforcement; if they recognize an action as illegal, they must correct it and report the action to the dictator, who will punish the citizen accordingly. However, military personnel are still, in the eyes of the law, citizens. Military personnel must always be ready to engage in a mission under the command of the military General. Prior to the mission, military personnel will be issued full diamond armor, a diamond sword, a bow, and arrows. In order to stay in the military, military personnel must follow all orders given by the military General. If they do not do so, they will be discharged and possibly more harshly punished.\r\n    10. To use the bank, a citizen meets with the dictator at the bank and deposits/withdraws money as he or she pleases, and the dictator will keep track of the money of each citizen.\r\n    \r\n    Civil Responsibilities\r\n    The following civil responsibilities are not required by law to perform, but they are preferred in order to maintain Rushington the best that is possible.\r\n    1. All citizens should kill any harmful mobs they see within Rushington.\r\n    2. All citizens should fix any property damage caused by creepers/fire/TNT that they find to the best of their ability.\r\n    3. All citizens should buy residential property and build a home.\r\n    4. All citizens should start a business or get a job as part of an already existing business.\r\n    5. All citizens should use government services.\r\n    \r\n    Constitutional Additions/Changes\r\n    The following additions/changes overrule any already existing constitutional ideas.\r\n    1 (Additional Law). Advisors are citizens in the eyes of the law, but they can legally alter any governmental property as they see fit.\r\n    2 (Additional Right). All citizens have the right to expression. They may wear any skin and armor.\r\n    3 (Additional Law). No citizen can wear/own a green leather cap, as they are only worn by military personnel, and any offense would be stolen valor.\r\n    4 (Additional Right). All citizens have the right to kill any animals/mobs on their property or on governmental/business property that doesn’t clearly belong to that government/business.\r\n    5 (Additional Law). All citizens have to fix any property damage that was caused by a creeper that exploded in an attempt to kill that citizen.\r\n    6 (Additional Law). The most recent edition of the Constitution is the Supreme Law of the Land.\r\n    7 (Additional Right). No citizen of Rushington can be convicted of a crime that was not prohibited previous of the crime.\r\n    8 (Addition to the System of Government). The dictator of Rushington needs the approval of one of the advisors of a punishment when deciding a verdict.\r\n    9 (Clarification of Right 8). No citizen can enter or alter the property that the Town Hall is on (defined the innermost green hedge).\r\n    10 (Addition to the System of Government). The dictator of Rushington has the right to infringe upon a citizen’s right(s) if given permission by both advisors.\r\n    11 (Additional Policy). Citizens have to pay for their residential/business property within a month of beginning the purchase.\r\n    12 (Additional Policy). Citizens have to start paying for a residential/business property within a day of the property being registered to the citizen.\r\n    `\r\n    \r\n    var lawNumber = 0;\r\n    var rightNumber = 0;\r\n    var policyNumber = 0;\r\n    var civilResponsibilityNumber = 0;\r\n    var constitutionalAdditionsChangeNumber = 0;\r\n    return(\r\n        <div className='px-2 lg:px-16 py-8'>\r\n            <p className='font-bold text-2xl text-center'>Constitution of Rushington</p>\r\n            <p className='text-sm text-center font-semibold text-gray-800'>THE SUPREME LAW OF THE LAND</p>\r\n            <p className='font-bold pt-5'>\r\n                System of Government\r\n            </p>\r\n            <div>\r\n                <p>\r\n                    The government of Rushington is a Demoperiatic Oligarchy under the sovereignty of a dictator and a council consisting of two advisors, who are, under the law, citizens. The dictator can create/change laws and any other legal policies. The citizens must follow these laws and legal policies or they will be sentenced to a punishment that the dictator, who acts as a judge, or an appointed licensed judge sees as necessary. The dictator of Rushington can break any laws or legal policies with the permission of both advisors.\r\n                </p>\r\n            </div>\r\n            <p className='font-bold pt-5'>\r\n                Laws\r\n            </p>\r\n            <p className='pb-2'>\r\n                The following laws are enforced by the government and licensed police. Citizens must follow these laws within Rushington or they will be sentenced to a punishment.\r\n            </p>\r\n            {laws.map(law => {\r\n                lawNumber++;\r\n                return(\r\n                    <div>\r\n                    <p>{lawNumber}. {law}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            <p className='font-bold pt-5'>\r\n                Rights\r\n            </p>\r\n            <p className='pb-2'>\r\n                All citizens of Rushington have the following rights while in Rushington that cannot be infringed upon.\r\n            </p>\r\n            {rights.map(right => {\r\n                rightNumber++;\r\n                return(\r\n                    <div>\r\n                    <p>{rightNumber}. {right}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            <p className='font-bold pt-5'>\r\n                Policies\r\n            </p>\r\n            <p className='pb-2'>\r\n                The following policies describe important information in the daily life of a Rushington citizen.\r\n            </p>\r\n            {policies.map(policy => {\r\n                policyNumber++;\r\n                return(\r\n                    <div>\r\n                    <p>{policyNumber}. {policy}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            <p className='font-bold pt-5'>\r\n                Civil Responsibilities\r\n            </p>\r\n            <p className='pb-2'>\r\n                The following civil responsibilities are not required by law to perform, but they are preferred in order to maintain Rushington the best that is possible.\r\n            </p>\r\n            {civilResponsibilities.map(civilResponsibility => {\r\n                civilResponsibilityNumber++;\r\n                return(\r\n                    <div>\r\n                    <p>{civilResponsibilityNumber}. {civilResponsibility}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            <p className='font-bold pt-5'>\r\n                Constitutional Additions/Changes\r\n            </p>\r\n            <p className='pb-2'>\r\n                The following additions/changes overrule any already existing constitutional ideas.\r\n            </p>\r\n            {constitutionalAdditionsChanges.map(constitutionalAdditionsChange => {\r\n                constitutionalAdditionsChangeNumber++;\r\n                return(\r\n                    <div>\r\n                    <p>{constitutionalAdditionsChangeNumber} {constitutionalAdditionsChange}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Constitution;","import { Menu, Transition } from \"@headlessui/react\"\r\nimport { Fragment, useState } from \"react\"\r\n\r\n\r\nconst CitizenGovernmentDropboxMenu = ({className, citizens, user, selectedCitizen, setSelectedCitizen, filteredCitizens, setFilteredCitizens}) => {\r\n    const [searchCitizensInput, setSearchCitizensInput] = useState('')\r\n    \r\n    function UpOrDownArrow(props){\r\n        if(props.open){\r\n            return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 15l7-7 7 7\" />\r\n              </svg>} else {\r\n            return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n          }\r\n        }\r\n    function classNames(...classes) {\r\n            return classes.filter(Boolean).join(\" \");\r\n          }\r\n\r\n    return(\r\n        <Menu as=\"div\" className={classNames(\"flex-shrink-0 justify-center\", className)}>\r\n                  {({ open }) => (\r\n                    <>\r\n                      <div className='flex justify-center'>\r\n                        <Menu.Button className=\"bg-white justify-center flex rounded-lg flex px-2 py-1 text-sm ring-2 ring-gray ring-opacity-20 focus:outline-none focus:ring-opacity-100\">\r\n                            <p className='text-center'>\r\n                              {selectedCitizen != undefined ? selectedCitizen.name : \"Select Citizen...\"}\r\n                            </p>\r\n                            <UpOrDownArrow open={open}/>\r\n                        </Menu.Button>\r\n                      </div>\r\n                      <Transition\r\n                        show={open}\r\n                        as={Fragment}\r\n                        enter=\"transition ease-out duration-75\"\r\n                        enterFrom=\"transform opacity-0 scale-95\"\r\n                        enterTo=\"transform opacity-100 scale-100\"\r\n                        leave=\"transition ease-in duration-75\"\r\n                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                        leaveTo=\"transform opacity-0 scale-95\"\r\n                      >\r\n                        <div className='flex justify-center'>\r\n                          \r\n                        <Menu.Items\r\n                          static\r\n                          className=\"z-50 absolute justify-center h-auto w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-green ring-opacity-5 focus:outline-none\"\r\n                        >\r\n                          <div className='px-1'>\r\n                        <input className='w-full focus:outline-none bg-gray-100 border-2 px-1 border-gray-500 focus:border-gray-700' defaultValue={searchCitizensInput} placeholder='Search'\r\n                              onChange={event => {\r\n                                setSearchCitizensInput(event.target.value);\r\n                                setFilteredCitizens(citizens.filter(citizen => {\r\n                                  console.log(filteredCitizens)\r\n                                  return citizen.name.toUpperCase().includes(event.target.value.toUpperCase());\r\n                                }))\r\n                              }}></input>\r\n                        </div>\r\n                          <div className='max-h-40 overflow-y-scroll'>\r\n                          {filteredCitizens.map(citizen => {\r\n                            return(\r\n                              <Menu.Item>\r\n                            {({ active }) => (\r\n                               <button\r\n                               onClick={()=>{setSelectedCitizen(citizen)}}\r\n                               className={classNames(\r\n                                 active ? \"bg-gray-100\" : \"\",\r\n                                 \"block w-full text-left px-2 py-2 text-sm text-green\"\r\n                               )}\r\n                             >\r\n                               <div className='w-full flow-root'>\r\n                                  <p className='float-left font-semibold'>{citizen.name}</p>\r\n                                  <p className='float-right'>{citizen.citizenID}</p>\r\n                               </div>\r\n                             </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                            )\r\n                          })}\r\n                          </div>\r\n                        </Menu.Items>\r\n                        </div>\r\n                      </Transition>\r\n                    </>\r\n                  )}\r\n                </Menu>\r\n    )\r\n}\r\n\r\nexport default CitizenGovernmentDropboxMenu","import CitizenGovernmentDropboxMenu from './CitizenGovernmentDropboxMenu'\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nconst NewChargePopupBody = ({database, getTime, getDate, getYear, selectedCitizen, setSelectedCitizen, setNewChargePopupOpen, setValues}) => {\r\n    const [citizens, setCitizens] = useState([]);\r\n    const [filteredCitizens, setFilteredCitizens] = useState([]);\r\n    const [selectedDefendant, setSelectedDefendant] = useState(selectedCitizen);\r\n    const [selectedProsecutor, setSelectedProsecutor] = useState();\r\n    const [allegedCrime, setAllegedCrime] = useState('');\r\n    const [reasonForVerdict, setReasonForVerdict] = useState('');\r\n    const [punishment, setPunishment] = useState('');\r\n    const [citizenGuilty, setCitizenGuilty] = useState(true);\r\n\r\n    const [transferAmount, setTransferAmount] = useState(0);\r\n    const [transferReason, setTransferReason] = useState('');\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    useEffect(()=>{addCitizens();\r\n        console.log('Called useeffect')\r\n    }, []);\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n      }\r\n    function addCitizens(){\r\n    database.ref('/citizens').get().then(citizensObjects => {\r\n        setCitizens(Object.values(citizensObjects.val()));\r\n        setFilteredCitizens(Object.values(citizensObjects.val()));\r\n        //setSelectedCitizen(Object.values(citizensObjects.val())[0]);\r\n        console.log(Object.values(citizensObjects.val())[0])\r\n    })}\r\n\r\n    function onClickAddChargeButton(){\r\n        database.ref(`/citizens/${selectedCitizen.citizenID}`).get().then(\r\n            citizenSnapshot => {\r\n                var editedSelectedCitizen = citizenSnapshot.val();\r\n                var newCharge = {};\r\n                const newChargeID = generateChargeID();\r\n                if(citizenGuilty){\r\n                    newCharge = {\r\n                        date: `${getDate()}, ${getYear()}`,\r\n                        time: `${getTime()}`,\r\n                        ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                        chargeID: newChargeID,\r\n                        defendant: {name: selectedDefendant.name, citizenID: selectedDefendant.citizenID},\r\n                        prosecutor: {name: selectedProsecutor.name, citizenID: selectedProsecutor.citizenID},\r\n                        crime: allegedCrime,\r\n                        verdict: \"Guilty\",\r\n                        reasonForVerdict: reasonForVerdict,\r\n                        punishment: punishment} \r\n                } else {\r\n                    newCharge = {\r\n                        date: `${getDate()}, ${getYear()}`,\r\n                        time: `${getTime()}`,\r\n                        ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                        chargeID: newChargeID,\r\n                        defendant: {name: selectedDefendant.name, citizenID: selectedDefendant.citizenID},\r\n                        prosecutor: {name: selectedProsecutor.name, citizenID: selectedProsecutor.citizenID},\r\n                        allegedCrime: allegedCrime,\r\n                        verdict: \"Not Guilty\",\r\n                        reasonForVerdict: reasonForVerdict\r\n                    };\r\n                } \r\n                database.ref(`/citizens/${selectedCitizen.citizenID}/charges/${newChargeID}`).set(newCharge);\r\n                database.ref(`/criminalCharges/${newChargeID}`).set(newCharge);\r\n                console.log(\"Charges\", selectedCitizen.charges)\r\n                editedSelectedCitizen.charges = editedSelectedCitizen.charges != undefined ? JSON.parse(JSON.stringify([...Object.values(editedSelectedCitizen.charges), newCharge])) : JSON.parse(JSON.stringify([newCharge]));\r\n                setValues();\r\n                setSelectedCitizen(editedSelectedCitizen);\r\n                setNewChargePopupOpen(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    function generateChargeID(){\r\n        var chargeID = 'CC-'\r\n        for(var i = 0; i < 5; i++){\r\n            chargeID = chargeID + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(chargeID);\r\n    }\r\n    return(\r\n        <div className='w-full justify-center '>\r\n            <div className='pb-4'>\r\n            <div className='p-5 bg-blue-200 rounded shadow'>\r\n                <div className='flow-root w-full pb-5'>\r\n                <div className='float-left w-1/2'>\r\n                <p className='text-sm font-bold'>PROSECUTOR</p>\r\n                <CitizenGovernmentDropboxMenu\r\n                    filteredCitizens={filteredCitizens}\r\n                    setFilteredCitizens={setFilteredCitizens}\r\n                    citizens={citizens}\r\n                    selectedCitizen={selectedProsecutor}\r\n                    setSelectedCitizen={setSelectedProsecutor}\r\n                    className='pb-2'\r\n                />\r\n                </div>\r\n                <div className='float-right w-1/2'>\r\n                <p className='text-sm font-bold'>DEFENDANT</p>\r\n                <p>{selectedCitizen.name}</p>\r\n                </div>\r\n                </div>\r\n                <div className='w-full'>\r\n                    <p className='text-sm font-bold'>ALLEGED CRIME</p>\r\n                    <textarea className='w-full focus:outline-none p-2' placeholder=\"\" onChange={event=>{setAllegedCrime(event.target.value)}}></textarea>\r\n                </div>\r\n                <div className='w-full flex justify-center pt-2'>\r\n                    <button className={classNames(citizenGuilty ? 'text-black bg-yellow-300' : 'text-gray-400 bg-yellow-100 hover:bg-yellow-200',\r\n                        'w-1/3 rounded-l py-1 px-2 font-semibold text-sm')}\r\n                        onClick={()=>{setCitizenGuilty(true)}}>GUILTY</button>\r\n                    <button className={classNames(!citizenGuilty ? 'text-black bg-yellow-300' : 'text-gray-400 bg-yellow-100 hover:bg-yellow-200',\r\n                        'w-1/3 rounded-r py-1 px-2 font-semibold text-sm')}\r\n                        onClick={()=>{setCitizenGuilty(false)}}>NOT GUILTY</button>\r\n                </div>\r\n                <div className='w-full pt-2'>\r\n                    <p className='text-sm font-bold'>REASON</p>\r\n                    <textarea className='w-full focus:outline-none p-2' placeholder=\"\" onChange={event=>{setReasonForVerdict(event.target.value)}}></textarea>\r\n                </div>\r\n                {citizenGuilty &&\r\n                <div className='w-full pt-2'>\r\n                    <p className='text-sm font-bold'>PUNISHMENT</p>\r\n                    <textarea className='w-full focus:outline-none p-2' placeholder=\"\" onChange={event=>{setPunishment(event.target.value)}}></textarea>\r\n                </div>\r\n                }\r\n            </div>\r\n            </div>\r\n            <button className={classNames(\r\n                selectedDefendant != undefined &&  selectedProsecutor != undefined ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'w-1/3 rounded py-1 px-2 font-semibold')}\r\n                onClick={onClickAddChargeButton}\r\n            >Add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(NewChargePopupBody)","import { Menu, Transition } from \"@headlessui/react\"\r\nimport { Fragment, useState } from \"react\"\r\n\r\nconst AddPropertyPopupBody = ({className, database, getTime, getDate, getYear, properties, setProperties, setAddPropertyPopupOpen}) => {\r\n  const [selectedPropertyType, setSelectedPropertyType] = useState();\r\n  const [selectedOwner, setSelectedOwner] = useState();\r\n  const [address, setAddress] = useState('');\r\n  const [width, setWidth] = useState();\r\n  const [length, setLength] = useState();\r\n  const [price, setPrice] = useState();\r\n  const propertyTypeOptions = ['Residential', 'Business'];\r\n  const rushingtonEpoch = 1522648800;\r\n\r\n  function UpOrDownArrow(props){\r\n    if(props.open){\r\n        return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 15l7-7 7 7\" />\r\n          </svg>} else {\r\n        return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n          </svg>\r\n      }\r\n    }\r\n\r\n    function classNames(...classes) {\r\n      return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    function onClickAddPropertyButton(){\r\n      if(selectedPropertyType != undefined && length != undefined && width != undefined && address != undefined && price != undefined){\r\n        const propertyID = generatePropertyID();\r\n        const newProperty = {\r\n          propertyID: propertyID,\r\n          address: address,\r\n          type: selectedPropertyType,\r\n          price: Number(price),\r\n          width: Number(width),\r\n          length: Number(length),\r\n          size: length * width,\r\n          ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n          dateAdded: `${getDate()}, ${getYear()}`,\r\n          timeAdded: getTime()\r\n        }\r\n        database.ref(`/properties/${propertyID}`).set(newProperty);\r\n        const editedProperties = [...properties];\r\n        editedProperties.push(newProperty);\r\n        setProperties(editedProperties);\r\n        setAddPropertyPopupOpen(false);\r\n      }\r\n    }\r\n\r\n    function generatePropertyID(){\r\n      var propertyID = 'PR-'\r\n      for(var i = 0; i < 5; i++){\r\n          propertyID = propertyID + String(Math.floor(Math.random()*10));\r\n      }\r\n      return(propertyID);\r\n    }\r\n    return(\r\n    <div>\r\n      <div className='pb-4'>\r\n        <div className='p-5 bg-blue-200 rounded shadow'>\r\n        <div className='w-full flex gap-4 justify-center items-center pb-4'>\r\n          <div>\r\n        <div className='align-center'>\r\n                    <p className='text-sm font-bold'>PROPERTY TYPE</p>\r\n                    \r\n        <Menu as=\"div\" className={classNames(\"flex-shrink-0 align-center w-full\")}>\r\n                  {({ open }) => (\r\n                    <>\r\n                      \r\n                        <Menu.Button className=\"bg-white w-full justify-center rounded-lg flex align-center p-2 text-sm ring-2 ring-gray ring-opacity-20 focus:outline-none focus:ring-opacity-100\">\r\n                            <p className='text-center'>\r\n                              {selectedPropertyType != undefined ? selectedPropertyType : 'Select Property Type...'}\r\n                            </p>\r\n                            <UpOrDownArrow open={open}/>\r\n                        </Menu.Button>\r\n                      <Transition\r\n                        show={open}\r\n                        as={Fragment}\r\n                        enter=\"transition ease-out duration-75\"\r\n                        enterFrom=\"transform opacity-0 scale-95\"\r\n                        enterTo=\"transform opacity-100 scale-100\"\r\n                        leave=\"transition ease-in duration-75\"\r\n                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                        leaveTo=\"transform opacity-0 scale-95\"\r\n                      >\r\n                        <div className='flex justify-center'>\r\n                          \r\n                        <Menu.Items\r\n                          static\r\n                          className=\"z-40 absolute justify-center h-auto w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-green ring-opacity-5 focus:outline-none\"\r\n                        >\r\n                        \r\n\r\n                          <div className='max-h-40'>\r\n                          {propertyTypeOptions.map(propertyTypeOption => {\r\n                            return(\r\n                              <Menu.Item>\r\n                            {({ active }) => (\r\n                               <button\r\n                               onClick={()=>{setSelectedPropertyType(propertyTypeOption)}}\r\n                               className={classNames(\r\n                                 active ? \"bg-gray-100\" : \"\",\r\n                                 \"block w-full text-left px-4 py-2 text-sm text-green\"\r\n                               )}\r\n                             >\r\n                              {propertyTypeOption}\r\n                             </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                            )\r\n                          })}\r\n                          </div>\r\n                        </Menu.Items>\r\n                        </div>\r\n                      </Transition>\r\n                    </>\r\n                  )}\r\n                </Menu>\r\n                </div>\r\n                    </div>\r\n                  \r\n                </div>\r\n                <div className='align-center'>\r\n                    <p className='text-sm font-bold'>ADDRESS</p>\r\n                    <div className='flex justify-center'>\r\n                    <input placeholder='' onChange={event => {setAddress(event.target.value)}} className='flex justify-center border-2 border-gray-500 focus:border-gray-700 focus:outline-none bg-white p-1 w-full'></input>\r\n                    </div>\r\n                    </div>\r\n                <div className='flex gap-3 justify-center pt-4'>\r\n                      <div className='w-full'>\r\n                        <p className='text-sm font-bold'>WIDTH</p>\r\n                        <input className='focus:outline-none bg-white w-full p-1 border-2 border-gray-500 focus:border-gray-700'\r\n                          onChange={event => {setWidth(event.target.value)}}\r\n                        ></input>\r\n                      </div>\r\n                      <div className='w-full'>\r\n                        <p className='text-sm font-bold'\r\n                        >LENGTH</p>\r\n                        <input className='focus:outline-none bg-white p-1 w-full border-2 border-gray-500 focus:border-gray-700'\r\n                          onChange={event => {setLength(event.target.value)}}\r\n                        ></input>\r\n                      </div>\r\n                      {length && width &&\r\n                      <div className='w-full'>\r\n                        <p className='text-sm font-bold'>SIZE</p>\r\n                        <p className='p-1 bg-white w-full shadow border-2 border-white break-none'>{length * width} Blocks</p>\r\n                      </div>\r\n                      }\r\n                </div>\r\n                \r\n                <div className='pt-4'>\r\n                  <p className='text-sm font-bold'>PRICE</p>\r\n                  <div className='flex gap-1 justify-center'>\r\n                    <input className='focus:outline-none bg-white p-1 w-32 border-2 border-gray-500 focus:border-gray-700'\r\n                      onChange={event => {setPrice(event.target.value)}}\r\n                    ></input>\r\n                    <p className='font-semibold text-lg'>[M]</p>\r\n                  </div>\r\n                </div>\r\n                <div></div>\r\n          </div>\r\n          \r\n          </div>\r\n          <div className='flex justify-center'>\r\n            <button className={classNames(\r\n                selectedPropertyType != undefined && length != undefined && width != undefined && address != undefined && price != undefined ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'w-1/3 rounded py-1 px-2 font-semibold shadow')}\r\n                onClick={onClickAddPropertyButton}\r\n            >ADD</button>\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default AddPropertyPopupBody;","import DropboxMenu from './CitizenUserDropboxMenu'\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nconst AddCitizenPopupBody = ({database, setAddCitizenPopupOpen, citizens, setCitizens, getTime, getDate, getYear}) => {\r\n    const [name, setName] = useState('');\r\n    const [citizenID, setCitizenID] = useState('');\r\n    const [initialMeldas, setInitialMeldas] = useState(0);\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n      }\r\n    \r\n\r\n    function onClickAddCitizenButton(){\r\n        const newCitizenID = generateCitizenID();\r\n        if(name){\r\n            const addedCitizen = {\r\n                citizenID: citizenID ? citizenID : newCitizenID,\r\n                name: name,\r\n                meldas: initialMeldas,\r\n                dateAdded: `${getDate()}, ${getYear()}`\r\n            }\r\n            database.ref('/citizens/' + (citizenID ? citizenID : newCitizenID)).set(addedCitizen);\r\n            const editedCitizens = [...citizens];\r\n            editedCitizens.push(addedCitizen);\r\n            setCitizens(editedCitizens);\r\n            setAddCitizenPopupOpen(false);\r\n        }\r\n    }\r\n\r\n    function generateCitizenID(){\r\n        var citizenID = 'CI-'\r\n        for(var i = 0; i < 5; i++){\r\n            citizenID = citizenID + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(citizenID);\r\n    }\r\n    return(\r\n        <div className='w-full justify-center '>\r\n            <div className='pb-4'>\r\n            <div className='p-5 bg-blue-200 rounded shadow'>\r\n                \r\n                <div className=''>\r\n                <p className='text-sm font-bold'>NAME</p>\r\n                <input className='p-1 focus:outline-none'\r\n                    onChange={event => {setName(event.target.value)}}\r\n                ></input>\r\n                </div>\r\n                <div className='pt-2'>\r\n                <p className='text-sm font-bold'>CITIZEN ID</p>\r\n                \r\n                <input className='p-1 focus:outline-none'\r\n                    placeholder='Generated if no input'\r\n                    onChange={event => {setCitizenID(event.target.value)}}\r\n                ></input>\r\n                </div>\r\n                <div className='pt-2'>\r\n                <p className='text-sm font-bold'>INITIAL MELDAS</p>\r\n                \r\n                <input type='Number' defaultValue='0' className='p-1 focus:outline-none'></input>\r\n                </div>\r\n                \r\n            </div>\r\n            </div>\r\n            <button className={classNames(\r\n                name ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'w-1/3 rounded py-1 px-2 font-semibold')}\r\n                onClick={onClickAddCitizenButton}\r\n            >Add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(AddCitizenPopupBody)","import { useState } from \"react\";\r\n\r\nconst AddBusinessPopupBody = ({database, setValues, selectedProperty, setSelectedProperty, setAddChangeBusinessPopupOpen}) => {\r\n    const [name, setName] = useState();\r\n    const [description, setDescription] = useState();\r\n\r\n    function onClickAddBusinessButton(){\r\n        const newBusiness = {\r\n            name: name,\r\n            description: description\r\n        }\r\n        database.ref(`/properties/${selectedProperty.propertyID}/business`).set(newBusiness);\r\n        database.ref(`/citizens/${selectedProperty.owner.citizenID}/properties/${selectedProperty.propertyID}/business`).set(newBusiness);\r\n        setValues();\r\n        var editedSelectedProperty = JSON.parse(JSON.stringify(selectedProperty));\r\n        editedSelectedProperty.business = newBusiness;\r\n        setSelectedProperty(editedSelectedProperty);\r\n        setAddChangeBusinessPopupOpen(false);\r\n    }\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    return(\r\n        <div className='w-full justify-center '>\r\n            <div className='pb-4'>\r\n            <div className='p-5 bg-blue-200 rounded shadow'>\r\n                \r\n                <div className=''>\r\n                <p className='text-sm font-bold'>NAME</p>\r\n                <input className='p-1 w-full border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 focus:outline-none'\r\n                    defaultValue={selectedProperty.business != undefined ? selectedProperty.business.name : ''}\r\n                    onChange={event => {setName(event.target.value)}}\r\n                ></input>\r\n                </div>\r\n                <div className='pt-2'>\r\n                <p className='text-sm font-bold'>DESCRIPTION</p>\r\n                \r\n                <textarea className='p-1 w-full border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 resize-none focus:outline-none'\r\n                    defaultValue={selectedProperty.business != undefined ? selectedProperty.business.description : ''}\r\n                    onChange={event => {setDescription(event.target.value)}}\r\n                ></textarea>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n            </div>\r\n            <button className={classNames(\r\n                name && description ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'w-1/3 rounded py-1 px-2 font-semibold')}\r\n                onClick={onClickAddBusinessButton}\r\n            >Add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBusinessPopupBody;","import { Menu, Transition } from \"@headlessui/react\"\r\nimport { Fragment, useState } from \"react\"\r\n\r\n\r\nconst PropertyDropboxMenu = ({className, properties, user, selectedProperty, setSelectedProperty, filteredProperties, setFilteredProperties}) => {\r\n    const [searchPropertiesInput, setSearchPropertiesInput] = useState('')\r\n    \r\n    function UpOrDownArrow(props){\r\n        if(props.open){\r\n            return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 15l7-7 7 7\" />\r\n              </svg>} else {\r\n            return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n          }\r\n        }\r\n    function classNames(...classes) {\r\n            return classes.filter(Boolean).join(\" \");\r\n          }\r\n\r\n    return(\r\n        <Menu as=\"div\" className={classNames(\"flex-shrink-0 justify-center\", className)}>\r\n                  {({ open }) => (\r\n                    <>\r\n                      <div className='flex justify-center'>\r\n                        <Menu.Button className=\"bg-white justify-center flex rounded-lg flex px-2 py-1 text-sm ring-2 ring-gray ring-opacity-20 focus:outline-none focus:ring-opacity-100\">\r\n                            <p className='text-center'>\r\n                              {selectedProperty != undefined ? selectedProperty.address : \"Select Property...\"}\r\n                            </p>\r\n                            <UpOrDownArrow open={open}/>\r\n                        </Menu.Button>\r\n                      </div>\r\n                      <Transition\r\n                        show={open}\r\n                        as={Fragment}\r\n                        enter=\"transition ease-out duration-75\"\r\n                        enterFrom=\"transform opacity-0 scale-95\"\r\n                        enterTo=\"transform opacity-100 scale-100\"\r\n                        leave=\"transition ease-in duration-75\"\r\n                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                        leaveTo=\"transform opacity-0 scale-95\"\r\n                      >\r\n                        <div className='flex justify-center'>\r\n                          \r\n                        <Menu.Items\r\n                          static\r\n                          className=\"z-40 absolute justify-center h-auto w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-green ring-opacity-5 focus:outline-none\"\r\n                        >\r\n                          <div className='px-1'>\r\n                        <input className='w-full focus:outline-none bg-gray-100 border-2 px-1 border-gray-500 focus:border-gray-700' defaultValue={searchPropertiesInput} placeholder='Search'\r\n                              onChange={event => {\r\n                                setSearchPropertiesInput(event.target.value);\r\n                                setFilteredProperties(properties.filter(property => {\r\n                                  //console.log(filteredCitizens)\r\n                                  return property.address.toUpperCase().includes(event.target.value.toUpperCase());\r\n                                }))\r\n                              }}></input>\r\n                        </div>\r\n                          <div className='max-h-40 overflow-y-scroll'>\r\n                          {filteredProperties.map(property => {\r\n                            return(\r\n                              <Menu.Item>\r\n                            {({ active }) => (\r\n                               <button\r\n                               onClick={()=>{setSelectedProperty(property)}}\r\n                               className={classNames(\r\n                                 active ? \"bg-gray-100\" : \"\",\r\n                                 \"block w-full text-left px-2 py-2 text-sm text-green\"\r\n                               )}\r\n                             >\r\n                               <div className='w-full flow-root'>\r\n                                  <p className='float-left font-semibold'>{property.address}</p>\r\n                                  <p className='float-right'>{property.propertyID}</p>\r\n                               </div>\r\n                             </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                            )\r\n                          })}\r\n                          </div>\r\n                        </Menu.Items>\r\n                        </div>\r\n                      </Transition>\r\n                    </>\r\n                  )}\r\n                </Menu>\r\n    )\r\n}\r\n\r\nexport default PropertyDropboxMenu","import React, {useEffect, useState} from 'react'\r\nimport { ArrowCircleUpIcon } from '@heroicons/react/outline';\r\n\r\nconst NewGovernmentTransferPopupBody = ({database, user, getTime, getDate, getYear, setNewGovernmentTransferPopupOpen, selectedCitizen, setValues, governmentFunds}) => {\r\n    const [citizens, setCitizens] = useState([]);\r\n    const [filteredCitizens, setFilteredCitizens] = useState([]);\r\n    const [transferAmount, setTransferAmount] = useState(0);\r\n    const [transferReason, setTransferReason] = useState('');\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    useEffect(()=>{addCitizens();\r\n        console.log('Called useeffect')\r\n    }, []);\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n      }\r\n    function addCitizens(){\r\n    database.ref('/citizens').get().then(citizensObjects => {\r\n        setCitizens(Object.values(citizensObjects.val()));\r\n        setFilteredCitizens(Object.values(citizensObjects.val()));\r\n        //setSelectedCitizen(Object.values(citizensObjects.val())[0]);\r\n        console.log(Object.values(citizensObjects.val())[0])\r\n    })}\r\n\r\n    function onClickSendTransfer(){\r\n        var receiverResultingBalance = 0;\r\n        var senderResultingBalance = 0;\r\n        if(isTransferAmountValid()){\r\n        database.ref(`/citizens/${selectedCitizen.citizenID}/meldas`).get().then(\r\n            meldasSnapshot => {\r\n                receiverResultingBalance = Number(meldasSnapshot.val()) + Number(transferAmount)\r\n                database.ref(`/citizens/${selectedCitizen.citizenID}/meldas`).set(receiverResultingBalance);\r\n                database.ref(`/government/meldas`).get().then(\r\n                    meldasSnapshot => {\r\n                        senderResultingBalance = Number(meldasSnapshot.val()) - Number(transferAmount)\r\n                        database.ref(`/government/meldas`).set(senderResultingBalance);\r\n                        const transferID = generateTransferID();\r\n                        database.ref(`/government/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount,\r\n                            receiverCitizenID: selectedCitizen.citizenID,\r\n                            receiverName: selectedCitizen.name,\r\n                            type: \"Outgoing\",\r\n                            reason: transferReason.length != 0 ? transferReason : 'None given',\r\n                            resultingBalance: senderResultingBalance\r\n                        }\r\n                        \r\n                    );\r\n                    database.ref(`/citizens/${selectedCitizen.citizenID}/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount,\r\n                            senderCitizenID: 'CI-78614',\r\n                            senderName: 'Rushington Government',\r\n                            type: \"Incoming\",\r\n                            reason: transferReason.length != 0 ? transferReason : 'None given',\r\n                            resultingBalance: receiverResultingBalance\r\n                        }\r\n                        \r\n                    );\r\n                    setValues();\r\n                    setNewGovernmentTransferPopupOpen(false);\r\n                    /* database.ref(`/citizens/${user.citizenID}/transfers`).get().then(\r\n                        transfersSnapshot => {\r\n                            console.log(\"Transfers\", transfersSnapshot.val())\r\n                            user.transfers = Object.values(transfersSnapshot.val()).sort((transfer1, transfer2) => {\r\n                                return transfer2.ssre - transfer1.ssre\r\n                            });\r\n                            localStorage.setItem('user', JSON.stringify(user));\r\n                            setNewTransferPopupOpen(false);\r\n                        }\r\n                    ) */\r\n                    /* database.ref(`/citizens/${user[\"Citizen ID\"]}/ArrayTest`).set(\r\n                        ['igrn', 'griolw', 'gej', 'aqe']\r\n                    ); */\r\n                    }\r\n                    \r\n                )\r\n            }\r\n        );\r\n        }\r\n    }\r\n\r\n    function generateTransferID(){\r\n        var transferID = 'MT-'\r\n        for(var i = 0; i < 5; i++){\r\n            transferID = transferID + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(transferID);\r\n    }\r\n\r\n    function isTransferAmountValid(){\r\n        return selectedCitizen != undefined && String(transferAmount).length != 0 && !String(transferAmount).startsWith('-') \r\n                && (Number(governmentFunds) - Number(transferAmount) >= 0) && transferAmount != 0;\r\n    }\r\n\r\n    return(\r\n        <div className='w-full justify-center '>\r\n            <div className='pb-4'>\r\n            <div className='p-5 bg-blue-200 rounded shadow'>\r\n                <div className=''>\r\n                <div className='w-full pb-2'>\r\n                <p className='text-sm font-bold'>TO</p>\r\n                <div className='bg-white shadow p-1'>\r\n                    <p>{selectedCitizen.name}</p>\r\n                    <p>{selectedCitizen.citizenID}</p>\r\n                </div>\r\n                </div>\r\n                <div className='w-full pb-2'>\r\n                <p className='text-sm font-bold'>AMOUNT</p>\r\n                <div className='flex w-full justify-center'>\r\n                <input type='Number' placeholder='' min={0} max={governmentFunds} defaultValue={transferAmount} onChange={event => {setTransferAmount(Number(event.target.value))}} className='appearance-textfield flex justify-center w-full focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-1'></input>\r\n                <p className='font-semibold pl-1 text-xl'>[M]</p>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                <div className='pb-2'>\r\n                <p className='text-sm font-bold'>REASON</p>\r\n                <div className='flex justify-center'>\r\n                <textarea placeholder='' onChange={event => {setTransferReason(event.target.value)}} className='w-full bg-white h-20 flex justify-center resize-none focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-2'></textarea>\r\n                </div>\r\n                </div>\r\n                {isTransferAmountValid() &&\r\n                <div className='pb-2'>\r\n                    \r\n                    <p className='text-sm font-bold'>RESULTING BALANCE</p>\r\n                    \r\n                    <p className='p-1 font-semibold shadow bg-white '>{Number(governmentFunds) - Number(transferAmount)} {'[M]'}</p>\r\n                </div>}\r\n            </div>\r\n            </div>\r\n            <button className={classNames(\r\n                isTransferAmountValid()\r\n                ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'w-1/3 rounded py-1 px-2 font-semibold shadow')}\r\n                onClick={onClickSendTransfer}\r\n            >\r\n                <div className='flex justify-center'>\r\n                <ArrowCircleUpIcon className='h-6 w-6'/>\r\n                SEND\r\n                </div>\r\n                </button>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(NewGovernmentTransferPopupBody)","import { useEffect, useState } from \"react\";\r\nimport { PlusCircleIcon, PencilIcon, ArrowCircleUpIcon, ArrowCircleDownIcon, UserAddIcon, CreditCardIcon, CheckCircleIcon } from \"@heroicons/react/outline\";\r\nimport Popup from \"../Low Level/Popup\";\r\nimport NewChargePopupBody from \"../Low Level/NewChargePopupBody\";\r\nimport AddPropertyPopupBody from \"../Low Level/AddPropertyPopupBody\";\r\nimport AddCitizenPopupBody from \"../Low Level/AddCitizenPopupBody\";\r\nimport AddBusinessPopupBody from \"../Low Level/AddBusinessPopupBody\"\r\nimport CitizenGovernmentDropboxMenu from \"../Low Level/CitizenGovernmentDropboxMenu\";\r\nimport PropertyDropboxMenu from \"../Low Level/PropertyDropboxMenu\";\r\nimport NewGovernmentTransferPopupBody from \"../Low Level/NewGovernmentTransferPopupBody\";\r\n\r\nconst Government = ({database, getTime, getDate, getYear, user, setUser}) => {\r\n    const [selectedSection, setSelectedSection] = useState('Citizens');\r\n    const [citizens, setCitizens] = useState(localStorage.getItem('citizens') ? JSON.parse(localStorage.getItem('citizens')) : []);\r\n    const [announcementText, setAnnouncementText] = useState('');\r\n    const [filteredCitizens, setFilteredCitizens] = useState(localStorage.getItem('filteredCitizens') ? JSON.parse(localStorage.getItem('filteredCitizens')) : []);\r\n    const [filteredDropboxCitizens, setFilteredDropboxCitizens] = useState(localStorage.getItem('filteredCitizens') ? JSON.parse(localStorage.getItem('filteredCitizens')) : []);\r\n    const [announcements, setAnnouncements] = useState([]);\r\n    const [searchCitizensInput, setSearchCitizensInput] = useState('');\r\n    const [searchPropertiesInput, setSearchPropertiesInput] = useState('');\r\n    const [businesses, setBusinesses] = useState([])\r\n    const [governmentFunds, setGovernmentFunds] = useState(0);\r\n    const [licenseTitle, setLicenseTitle] = useState('');\r\n    const [licensePermissions, setLicensePermissions] = useState('');\r\n    const [licensePrice, setLicensePrice] = useState(0);\r\n    const [licenses, setLicenses] = useState([]);\r\n    const [selectedDropdownProperty, setSelectedDropdownProperty] = useState();\r\n    const [filteredProperties, setFilteredProperties] = useState([]);\r\n    const [selectedCitizen, setSelectedCitizen] = useState(localStorage.getItem('selectedCitizen') ? JSON.parse(localStorage.getItem('selectedCitizen')) : undefined);\r\n    const [interestRate, setInterestRate] = useState(0);\r\n    const [taxRate, setTaxRate] = useState(0);\r\n    const [salesTaxRate, setSalesTaxRate] = useState(0);\r\n    const [selectedProperty, setSelectedProperty] = useState(localStorage.getItem('selectedProperty') ? JSON.parse(localStorage.getItem('selectedProperty')) : undefined);\r\n    const [selectedNewPropertyOwner, setSelectedNewPropertyOwner] = useState();\r\n    const [grantedMeldas, setGrantedMeldas] = useState(0);\r\n    const [governmentGrantedMeldas, setGovernmentGrantedMeldas] = useState(0);\r\n    const [governmentTransfers, setGovernmentTransfers] = useState([]);\r\n    const [newChargePopupOpen, setNewChargePopupOpen] = useState(false);\r\n    const [addChangeBusinessPopupOpen, setAddChangeBusinessPopupOpen] = useState(false);\r\n    const [selectedPropertiesSection, setSelectedPropertiesSection] = useState('All');\r\n    const [addPropertyPopupOpen, setAddPropertyPopupOpen] = useState(false);\r\n    const [newGovernmentTransferPopupBodyOpen, setNewGovernmentTransferPopupOpen] = useState(false);\r\n    const [addCitizenPopupOpen, setAddCitizenPopupOpen] = useState(false);\r\n    const [properties, setProperties] = useState([]);\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    useEffect(setValues, []);\r\n    const navigationSections = [\r\n        {sectionName: 'Citizens', sectionSelected: selectedSection == 'Citizens'},\r\n        {sectionName: 'Bank', sectionSelected: selectedSection == 'Bank'},\r\n        {sectionName: 'Properties', sectionSelected: selectedSection == 'Properties'},\r\n        {sectionName: 'Licenses', sectionSelected: selectedSection == 'Licenses'},\r\n        {sectionName: 'Announcements', sectionSelected: selectedSection == 'Announcements'}\r\n    ]\r\n\r\n    function setValues(){\r\n        database.ref('/citizens').get().then(\r\n            citizensSnapshot => {\r\n                setCitizens(Object.values(citizensSnapshot.val()).sort((citizen1, citizen2) => {\r\n                    return citizen1.name.localeCompare(citizen2.name);\r\n                }));\r\n                setFilteredDropboxCitizens(Object.values(citizensSnapshot.val()).sort((citizen1, citizen2) => {\r\n                    return citizen1.name.localeCompare(citizen2.name);\r\n                }));\r\n                setFilteredCitizens(Object.values(citizensSnapshot.val()).sort((citizen1, citizen2) => {\r\n                    return citizen1.name.localeCompare(citizen2.name);\r\n                }).filter(citizen => {\r\n                      return citizen.name.toUpperCase().includes(searchCitizensInput.toUpperCase());\r\n                    }));\r\n                setSelectedCitizen(selectedCitizen != undefined ? citizensSnapshot.val()[selectedCitizen.citizenID] : undefined);\r\n                if(selectedCitizen != undefined){\r\n                    setSelectedCitizen(citizensSnapshot.val()[selectedCitizen.citizenID]);\r\n                    localStorage.setItem('selectedCitizen', JSON.stringify(citizensSnapshot.val()[selectedCitizen.citizenID]));\r\n                    if(user.citizenID == selectedCitizen.citizenID){\r\n                        setUser(citizensSnapshot.val()[user.citizenID]);\r\n                        localStorage.setItem('user', JSON.stringify(citizensSnapshot.val()[user.citizenID]))\r\n                    }\r\n                }\r\n                localStorage.setItem('citizens', JSON.stringify(Object.values(citizensSnapshot.val()).sort((citizen1, citizen2) => {\r\n                    return citizen1.name.localeCompare(citizen2.name);\r\n                })));\r\n                localStorage.setItem('filteredCitizens', JSON.stringify(Object.values(citizensSnapshot.val()).sort((citizen1, citizen2) => {\r\n                    return citizen1.name.localeCompare(citizen2.name);\r\n                })));\r\n            }\r\n        );\r\n        database.ref('/properties').get().then(\r\n            propertiesSnapshot => {\r\n                console.log('properties', propertiesSnapshot)\r\n                if(propertiesSnapshot.val() != undefined){\r\n                    setProperties(Object.values(propertiesSnapshot.val()).sort((property1, property2) => {\r\n                        return property1.address.localeCompare(property2.address);\r\n                    }));\r\n                    setFilteredProperties(Object.values(propertiesSnapshot.val()).sort((property1, property2) => {\r\n                        return property1.address.localeCompare(property2.address);\r\n                    }));\r\n                    console.log(selectedProperty != undefined ? selectedProperty.propertyID : 'undfee')\r\n                    setSelectedProperty(selectedProperty != undefined ? propertiesSnapshot.val()[selectedProperty.propertyID] : undefined)                \r\n                }\r\n            }\r\n        );\r\n        database.ref('/announcements').get().then(\r\n            announcementsSnapshot => {\r\n                if(announcementsSnapshot.val() != undefined){setAnnouncements(Object.values(announcementsSnapshot.val()).sort(\r\n                    (announcement1, announcement2) => {\r\n                        return announcement2.ssre - announcement1.ssre;\r\n                    }\r\n                ));}\r\n            }\r\n        );\r\n        database.ref('/government').get().then(\r\n            governmentSnapshot => {\r\n                console.log('gover funds', governmentSnapshot.val().meldas)\r\n                setGovernmentFunds(Number(governmentSnapshot.val().meldas));\r\n                setSalesTaxRate(Number(governmentSnapshot.val().salesTaxRate) * 100);\r\n                setGovernmentTransfers(Object.values(governmentSnapshot.val().transfers).sort((transfer1, transfer2) => {\r\n                    return transfer2.ssre - transfer1.ssre;\r\n                }));\r\n            }\r\n        );\r\n        database.ref('/licenses').get().then(\r\n            licensesSnapshot => {\r\n                if(licensesSnapshot.val() != undefined){\r\n                    setLicenses(Object.values(licensesSnapshot.val()));\r\n                }\r\n            }\r\n        );\r\n        database.ref('/businesses').get().then(\r\n            businessesSnapshot => {\r\n                if(businessesSnapshot.val() != undefined){\r\n                    setBusinesses(Object.values(businessesSnapshot.val()));\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function onClickGrantMeldasButton(){\r\n        database.ref(`/citizens/${selectedCitizen.citizenID}/meldas`).get().then(\r\n            meldasSnapshot => {\r\n                const resultingBalance = Number(meldasSnapshot.val()) + Number(grantedMeldas);\r\n                \r\n                database.ref(`/citizens/${selectedCitizen.citizenID}/meldas`).set(\r\n                    resultingBalance\r\n                );\r\n                var editedSelectedCitizen = JSON.stringify(selectedCitizen);\r\n                editedSelectedCitizen = JSON.parse(editedSelectedCitizen);\r\n                editedSelectedCitizen.meldas = resultingBalance;\r\n                \r\n                const transferID = generateID('MT');\r\n                const newTransfer = grantedMeldas >= 0 ? {\r\n                    transferID: transferID,\r\n                    date: `${getDate()}, ${getYear()}`,\r\n                    time: getTime(),\r\n                    ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                    amount: grantedMeldas,\r\n                    senderCitizenID: 'CI-78614',\r\n                    senderName: 'Rushington Bank',\r\n                    type: \"Incoming\",\r\n                    reason: 'Deposit',\r\n                    resultingBalance: resultingBalance\r\n                } :\r\n                {\r\n                    transferID: transferID,\r\n                    date: `${getDate()}, ${getYear()}`,\r\n                    time: getTime(),\r\n                    ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                    amount: Math.abs(grantedMeldas),\r\n                    receiverName: 'Real Currency',\r\n                    receiverCitizenID: selectedCitizen.citizenID,\r\n                    type: \"Outgoing\",\r\n                    reason: 'Withdrawal',\r\n                    resultingBalance: resultingBalance\r\n                }\r\n                database.ref(`/citizens/${selectedCitizen.citizenID}/transfers/${transferID}`).set(newTransfer);\r\n                editedSelectedCitizen.transfers = editedSelectedCitizen.transfers != undefined ? [...Object.values(editedSelectedCitizen.transfers), newTransfer] :\r\n                    [newTransfer];\r\n                console.log(\"Transfers\", Object.values(editedSelectedCitizen.transfers));\r\n                setValues();\r\n                if(editedSelectedCitizen.citizenID == user.citizenID){\r\n                    setUser(editedSelectedCitizen);\r\n                    localStorage.setItem('user', JSON.stringify(editedSelectedCitizen));\r\n                }\r\n                setSelectedCitizen(editedSelectedCitizen);\r\n            }\r\n        )\r\n    }\r\n\r\n    function onClickGrantGovernmentMeldas(){\r\n        database.ref('/government/meldas').set(Number(governmentFunds) + Number(governmentGrantedMeldas));\r\n        const transferID = generateID('MT');\r\n        const newTransfer = governmentGrantedMeldas >= 0 ? {\r\n            transferID: transferID,\r\n            date: `${getDate()}, ${getYear()}`,\r\n            time: getTime(),\r\n            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n            amount: Number(governmentGrantedMeldas),\r\n            senderCitizenID: 'CI-78614',\r\n            senderName: 'Rushington Bank',\r\n            type: \"Incoming\",\r\n            reason: 'Deposit',\r\n            resultingBalance: Number(governmentFunds) + Number(governmentGrantedMeldas)\r\n        } :\r\n        {\r\n            transferID: transferID,\r\n            date: `${getDate()}, ${getYear()}`,\r\n            time: getTime(),\r\n            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n            amount: Math.abs(governmentGrantedMeldas),\r\n            receiverName: 'Real Currency',\r\n            type: \"Outgoing\",\r\n            reason: 'Withdrawal',\r\n            resultingBalance: Number(governmentFunds) + Number(governmentGrantedMeldas)\r\n        }\r\n        database.ref(`/government/transfers/${transferID}`).set(newTransfer);\r\n        setGovernmentGrantedMeldas(0);\r\n        setValues();\r\n    }\r\n\r\n    function onClickGrantProperty(){\r\n        console.log(selectedDropdownProperty)\r\n        if(selectedDropdownProperty.owner != undefined){\r\n            console.log(selectedDropdownProperty.propertyID)\r\n            database.ref(`/citizens/${selectedDropdownProperty.owner.citizenID}/properties/${selectedDropdownProperty.propertyID}`).set(null);\r\n\r\n        };\r\n        var editedSelectedProperty = JSON.stringify(selectedDropdownProperty);\r\n        editedSelectedProperty = JSON.parse(editedSelectedProperty);\r\n        editedSelectedProperty.owner = {\r\n                name: selectedCitizen.name,\r\n                citizenID: selectedCitizen.citizenID,\r\n                dateAdded: `${getDate()}, ${getYear()}`\r\n        }\r\n        console.log('edited sp', editedSelectedProperty)\r\n        database.ref(`/properties/${selectedDropdownProperty.propertyID}/owner`).set(\r\n            {\r\n                name: selectedCitizen.name,\r\n                citizenID: selectedCitizen.citizenID,\r\n                dateAdded: `${getDate()}, ${getYear()}`\r\n            }\r\n        );\r\n        \r\n        database.ref(`/citizens/${selectedCitizen.citizenID}/properties/${selectedDropdownProperty.propertyID}`).set(\r\n            editedSelectedProperty\r\n        );\r\n        setValues();\r\n        /* setSelectedDropdownProperty(editedSelectedProperty);\r\n        var editedSelectedCitizen = JSON.parse(JSON.stringify(selectedCitizen));\r\n        const editedPropertyID = selectedDropdownProperty.propertyID;\r\n        if(editedSelectedCitizen.properties == undefined){\r\n            //console.log(JSON.stringify(properties))\r\n            //console.log(`{\"${editedPropertyID}\": ${JSON.stringify(editedSelectedProperty)}}`);\r\n            editedSelectedCitizen.properties = JSON.parse(`{\"${editedPropertyID}\": ${JSON.stringify(editedSelectedProperty)}}`);\r\n        } else {\r\n            console.log('edited prop id', editedSelectedCitizen.properties)\r\n            editedSelectedCitizen.properties[editedPropertyID] = editedSelectedProperty;\r\n        }\r\n        setSelectedCitizen(editedSelectedCitizen);\r\n        if(selectedProperty != undefined && selectedProperty.propertyID == selectedDropdownProperty.propertyID){\r\n            setSelectedProperty(editedSelectedProperty);\r\n            \r\n        } */\r\n    }\r\n\r\n    function onClickPostAnnouncement(){\r\n        const announcementID = generateID('GA');\r\n        database.ref(`/announcements/${announcementID}`).set(\r\n            {\r\n                announcementID: announcementID,\r\n                text: announcementText,\r\n                datePosted: `${getDate()}, ${getYear()}`,\r\n                timePosted: getTime(),\r\n                ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch)\r\n            }\r\n        );\r\n        setValues();\r\n    }\r\n\r\n    function onClickPayAsGovernmentButton(){\r\n        setNewGovernmentTransferPopupOpen(true);\r\n    }\r\n\r\n    function onClickAddLicense(){\r\n        const licenseID = generateID('LI');\r\n        database.ref(`/licenses/${licenseID}`).set(\r\n            {\r\n                licenseID: licenseID,\r\n                title: licenseTitle,\r\n                permissions: licensePermissions,\r\n                price: Number(licensePrice),\r\n                dateAdded: `${getDate()}, ${getYear()}`\r\n            }\r\n        );\r\n        setValues();\r\n    }\r\n\r\n    function onClickGrantInterest(){\r\n        const editedCitizens = [...citizens];\r\n        const newCitizensObject = {};\r\n        var totalMeldasGranted = 0;\r\n        editedCitizens.forEach(citizen => {\r\n            const meldasGranted = Math.round(Number(citizen.meldas) * (0.01 * interestRate));\r\n            if(meldasGranted != 0){\r\n            citizen.meldas = Number(citizen.meldas) + Number(meldasGranted);\r\n            totalMeldasGranted = totalMeldasGranted + meldasGranted;\r\n            const transferID = generateID('MT');\r\n            if(citizen.transfers == undefined)citizen.transfers = {}\r\n            citizen.transfers[transferID] = {\r\n                transferID: transferID,\r\n                date: `${getDate()}, ${getYear()}`,\r\n                time: getTime(),\r\n                ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                amount: meldasGranted,\r\n                senderCitizenID: 'CI-78614',\r\n                senderName: 'Rushington Bank',\r\n                type: \"Incoming\",\r\n                reason: `Accrued ${interestRate}% Interest`,\r\n                resultingBalance: citizen.meldas\r\n            }}\r\n            newCitizensObject[citizen.citizenID] = citizen;\r\n        });\r\n        const transferID = generateID('MT');\r\n        database.ref(`/government/transfers/${transferID}`).set(\r\n            {\r\n                transferID: transferID,\r\n                date: `${getDate()}, ${getYear()}`,\r\n                time: getTime(),\r\n                ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                amount: totalMeldasGranted,\r\n                receiverName: 'All Citizens',\r\n                type: \"Outgoing\",\r\n                reason: `Accrued ${interestRate}% Interest`,\r\n                resultingBalance: governmentFunds - Number(totalMeldasGranted)\r\n            }\r\n        )\r\n        //console.log('edited citizens', editedCitizens);\r\n        database.ref('/citizens').set(newCitizensObject);\r\n        database.ref('/government/meldas').set(governmentFunds - Number(totalMeldasGranted));\r\n        setInterestRate(0);\r\n        setValues();\r\n    }\r\n\r\n    \r\n    function onClickPullTaxes(){\r\n        const editedCitizens = [...citizens];\r\n        const newCitizensObject = {};\r\n        var totalTaxRevenue = 0;\r\n        editedCitizens.forEach(citizen => {\r\n            const tax = Math.round(Number(citizen.meldas) * (0.01 * taxRate));\r\n            if(tax != 0){\r\n            citizen.meldas = Number(citizen.meldas) - Number(tax);\r\n            totalTaxRevenue = totalTaxRevenue + tax;\r\n            const transferID = generateID('MT');\r\n            if(citizen.transfers == undefined)citizen.transfers = {}\r\n            citizen.transfers[transferID] = {\r\n                transferID: transferID,\r\n                date: `${getDate()}, ${getYear()}`,\r\n                time: getTime(),\r\n                ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                amount: tax,\r\n                receiverCitizenID: 'CI-78614',\r\n                receiverName: 'Rushington Government',\r\n                type: \"Outgoing\",\r\n                reason: `${taxRate}% Tax`,\r\n                resultingBalance: citizen.meldas\r\n            }}\r\n            newCitizensObject[citizen.citizenID] = citizen;\r\n        });\r\n        const transferID = generateID('MT');\r\n        database.ref(`/government/transfers/${transferID}`).set(\r\n            {\r\n                transferID: transferID,\r\n                date: `${getDate()}, ${getYear()}`,\r\n                time: getTime(),\r\n                ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                amount: totalTaxRevenue,\r\n                senderName: 'All Citizens',\r\n                type: \"Incoming\",\r\n                reason: `${taxRate}% Tax`,\r\n                resultingBalance: governmentFunds - Number(totalTaxRevenue)\r\n            }\r\n        )\r\n        //console.log('edited citizens', editedCitizens);\r\n        database.ref('/citizens').set(newCitizensObject);\r\n        database.ref('/government/meldas').set(governmentFunds + Number(totalTaxRevenue));\r\n        setTaxRate(0);\r\n        setValues();\r\n    }\r\n\r\n    function getTotalMeldasInBank(){\r\n        var totalMeldasInBank = 0;\r\n        citizens.forEach(citizen => {\r\n            totalMeldasInBank = totalMeldasInBank + Number(citizen.meldas);\r\n        });\r\n        businesses.forEach(business => {\r\n            totalMeldasInBank = totalMeldasInBank + Number(business.meldas);\r\n        });\r\n        return totalMeldasInBank + governmentFunds;\r\n    }\r\n\r\n    function getResultingInterestPayout(){\r\n        const editedCitizens = [...citizens];\r\n        var totalMeldasGranted = 0;\r\n        editedCitizens.forEach(citizen => {\r\n            const meldasGranted = Math.round(Number(citizen.meldas) * (0.01 * interestRate));\r\n            totalMeldasGranted = totalMeldasGranted + meldasGranted;\r\n        });\r\n        return totalMeldasGranted;\r\n    }\r\n\r\n    function getResultingTaxRevenue(){\r\n        const editedCitizens = [...citizens];\r\n        var totalTaxRevenue = 0;\r\n        editedCitizens.forEach(citizen => {\r\n            const tax = Math.round(Number(citizen.meldas) * (0.01 * taxRate));\r\n            totalTaxRevenue = totalTaxRevenue + tax;\r\n        });\r\n        return totalTaxRevenue;\r\n    }\r\n    function onClickAddChargeButton(){\r\n        /* database.ref(`/Users/${selectedCitizen[\"Citizen ID\"]}/Charges`).get().then(\r\n            chargesSnapshot => {\r\n                var editedSelectedCitizen = JSON.stringify(selectedCitizen);\r\n                editedSelectedCitizen = JSON.parse(editedSelectedCitizen);\r\n                const chargeID = generateID('CC');\r\n                const newCharge = {\r\n                    \"Transfer ID\": transferID,\r\n                    \"Date\": `${getDate()}, ${getYear()}`,\r\n                    \"Time\": getTime(),\r\n                    \"SSRE\": Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                    \"Amount\": grantedMeldas,\r\n                    \"Sender Citizen ID\": 'CI-78614',\r\n                    \"Sender Name\": 'Rushington Bank',\r\n                    \"Type\": \"Incoming\",\r\n                    \"Reason\": 'Deposit',\r\n                    \"Resulting Balance\": resultingBalance\r\n                }\r\n                database.ref(`/Users/${selectedCitizen[\"Citizen ID\"]}/Transfers/${transferID}`).set(newTransfer);\r\n                editedSelectedCitizen.Transfers = editedSelectedCitizen.Transfers != undefined ? [...Object.values(editedSelectedCitizen.Transfers), newTransfer] :\r\n                    [newTransfer];\r\n                console.log(\"Transfers\", Object.values(editedSelectedCitizen.Transfers));\r\n                setSelectedCitizen(editedSelectedCitizen);\r\n            }\r\n        ) */\r\n    }\r\n\r\n    function onClickAddChangeOwnerButton(){\r\n        if(selectedProperty.owner != undefined){\r\n            database.ref(`/citizens/${selectedProperty.owner.citizenID}/properties/${selectedProperty.propertyID}`).set(null);\r\n        }\r\n        var editedSelectedProperty = JSON.stringify(selectedProperty);\r\n        editedSelectedProperty = JSON.parse(editedSelectedProperty);\r\n        editedSelectedProperty.owner = {\r\n                name: selectedNewPropertyOwner.name,\r\n                citizenID: selectedNewPropertyOwner.citizenID,\r\n                dateAdded: `${getDate()}, ${getYear()}`\r\n        }\r\n        console.log('edited sp', editedSelectedProperty)\r\n        database.ref(`/properties/${selectedProperty.propertyID}/owner`).set(\r\n            {\r\n                name: selectedNewPropertyOwner.name,\r\n                citizenID: selectedNewPropertyOwner.citizenID,\r\n                dateAdded: `${getDate()}, ${getYear()}`\r\n            }\r\n        );\r\n        database.ref(`/citizens/${selectedNewPropertyOwner.citizenID}/properties/${selectedProperty.propertyID}`).set(\r\n            editedSelectedProperty\r\n        );\r\n        //setSelectedProperty(editedSelectedProperty);\r\n        setValues();\r\n        /* if(selectedCitizen != undefined && selectedNewPropertyOwner.citizenID == selectedCitizen.citizenID){\r\n            var editedSelectedCitizen = JSON.parse(JSON.stringify(selectedCitizen));\r\n        const editedPropertyID = selectedProperty.propertyID;\r\n        if(editedSelectedCitizen.properties == undefined){\r\n            //console.log(JSON.stringify(properties))\r\n            //console.log(`{\"${editedPropertyID}\": ${JSON.stringify(editedSelectedProperty)}}`);\r\n            editedSelectedCitizen.properties = JSON.parse(`{\"${editedPropertyID}\": ${JSON.stringify(editedSelectedProperty)}}`);\r\n        } else {\r\n            console.log('edited prop id', editedSelectedCitizen.properties)\r\n            editedSelectedCitizen.properties[editedPropertyID] = editedSelectedProperty;\r\n        }\r\n        setSelectedCitizen(editedSelectedCitizen);\r\n        } */\r\n    }\r\n    function generateID(prefix){\r\n        var id = `${prefix}-`;\r\n        for(var i = 0; i < 5; i++){\r\n            id = id + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(id);\r\n    }\r\n\r\n    function findPropertyByID(id){\r\n        for(var i = 0; i < properties.length; i++){\r\n            if(properties[i].propertyID == id){\r\n                return properties[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCitizenByID(id){\r\n        for(var i = 0; i < citizens.length; i++){\r\n            if(citizens[i].citizenID == id){\r\n                return citizens[i];\r\n            }\r\n        }\r\n    }\r\n    \r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n      }\r\n    return(\r\n        <div>\r\n            <div className='lg:grid lg:grid-cols-6 lg:gap-5'>\r\n                <div className='lg:col-span-1 pb-4 lg:pb-0'>\r\n                    <div>\r\n                    {navigationSections.map(navigationSection => {\r\n                        return(\r\n                        <div>\r\n                            \r\n                        <button\r\n                            onClick={()=>{setSelectedSection(navigationSection.sectionName)}}\r\n                            className={classNames(navigationSection.sectionSelected ? 'bg-gray-200' : 'bg-white hover:bg-gray-100',\r\n                                'rounded p-2 w-full text-center lg:text-left'\r\n                            )}\r\n                        >\r\n                            <p className='text-gray-800 font-semibold'>{navigationSection.sectionName}</p></button>\r\n                        </div>\r\n                        )\r\n                    })}\r\n                    </div>\r\n                </div>\r\n                <div className='lg:col-span-5 bg-gray-100 rounded'>\r\n                    {selectedSection == 'Citizens' &&\r\n                        <div className='lg:grid lg:grid-cols-3'>\r\n                            <div className='col-span-2 p-2'>\r\n                                {selectedCitizen == undefined &&\r\n                                    <p className='text-gray-500 p-5 font-semibold text-center lg:text-left'>NO CITIZEN SELECTED</p>\r\n                                }\r\n                                {selectedCitizen != undefined &&\r\n                                    <div className='bg-white rounded'>\r\n                                        <div className='p-2'>\r\n                                            \r\n                                            <div className='grid grid-cols-3 border-2 border-gray-400'>\r\n                                            <div className='col-span-1 p-2'>\r\n                                                <p className='font-semibold'>Name</p>\r\n                                                <p>{selectedCitizen.name}</p>\r\n                                            </div>\r\n                                            <div className='col-span-1 p-2'>\r\n                                                <p className='font-semibold'>Citizen ID</p>\r\n                                                <p>{selectedCitizen.citizenID}</p>\r\n                                            </div>\r\n                                            <div className='col-span-1 p-2'>\r\n                                                <p className='font-semibold'>Date Added</p>\r\n                                                <p>{selectedCitizen.dateAdded}</p>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='p-2'>\r\n                                            <div className='grid grid-cols-2'>\r\n                                            <div className='col-span-2 p-2'>\r\n                                                \r\n                                                <div className='bg-white'>\r\n                                                    \r\n                                                    <div className='w-full flow-root p-2 bg-gray-200'>\r\n                                                    <p className='font-semibold float-left'>BANK</p>\r\n                                                    <div className='float-right flex gap-1'>\r\n                                                        \r\n                                                        <input type='Number' onChange={event => {setGrantedMeldas(event.target.value)}} className='px-2 border-2 border-gray-700 w-20 focus:outline-none'></input>\r\n                                                        \r\n                                                        \r\n                                                        <button \r\n                                                            onClick={onClickGrantMeldasButton}\r\n                                                            className='bg-yellow-300 py-1 px-2 mr-2 flex text-sm hover:bg-yellow-400 font-semibold rounded shadow'>\r\n                                                            <PlusCircleIcon className='w-5 h-5'/>{grantedMeldas < 0 ? 'WITHDRAW' : 'DEPOSIT'}</button>\r\n                                                            <button \r\n                                                            onClick={onClickPayAsGovernmentButton}\r\n                                                            className='bg-yellow-300 py-1 px-2 flex text-sm hover:bg-yellow-400 font-semibold rounded shadow'>\r\n                                                            <PlusCircleIcon className='w-5 h-5'/>\r\n                                                                <Popup\r\n                                                                    header='New Government Transfer'\r\n                                                                    open={newGovernmentTransferPopupBodyOpen}\r\n                                                                    setOpen={setNewGovernmentTransferPopupOpen}\r\n                                                                    inputs={[]}\r\n                                                                    additionalComponent={()=>{return <NewGovernmentTransferPopupBody\r\n                                                                        database={database} getTime={getTime} getDate={getDate} getYear={getYear} setNewGovernmentTransferPopupOpen={setNewGovernmentTransferPopupOpen} setValues={setValues} selectedCitizen={selectedCitizen} governmentFunds={governmentFunds}\r\n                                                                    />}}\r\n                                                                />\r\n                                                            NEW TRANSFER</button>\r\n                                                    </div>\r\n                                                    </div>\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                        <p className='float-left font-semibold text-gray-700'>Balance</p>\r\n                                                        <p className='float-right'>{selectedCitizen.meldas} [M]</p>\r\n                                                    </div>\r\n                                                    <div className='p-2 border-b-2 border-r-2 border-l-2 border-gray-400'>\r\n                                                        <p className='font-semibold text-gray-700'>Transfers</p>\r\n                                                        {selectedCitizen.transfers != undefined &&\r\n                                                        <div className='max-h-96 overflow-y-scroll bg-gray-100'>\r\n                                                            \r\n                                                            \r\n                                                            \r\n                                                        {Object.values(selectedCitizen.transfers).sort((transfer1, transfer2)=>{\r\n                                                            return(transfer2.ssre - transfer1.ssre);\r\n                                                        }).map(transfer => {\r\n                                                            return(\r\n                                                                <div className='p-1'>\r\n                                                                <Transfer transfer={transfer}/>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                        \r\n                                                        </div>}\r\n                                                        {selectedCitizen.transfers == undefined &&\r\n                                                        <div className=''>None yet</div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            <div className='col-span-2 p-2'>\r\n                                                \r\n                                                <div className='bg-white'>\r\n                                                <div className='p-2 flow-root w-full bg-gray-200'>\r\n                                                <p className='font-semibold float-left'>CRIMINAL CHARGES</p>\r\n                                                        <button \r\n                                                            onClick={()=>{setNewChargePopupOpen(true)}}\r\n                                                            className='bg-yellow-300 float-right flex py-1 px-2 hover:bg-yellow-400 text-sm font-semibold rounded shadow'>\r\n                                                            <PlusCircleIcon className='w-5 h-5'/>ADD CHARGE</button>\r\n                                                            <Popup\r\n                                                                open={newChargePopupOpen}\r\n                                                                setOpen={setNewChargePopupOpen}\r\n                                                                header='New Charge'\r\n                                                                onClickSave={()=>{}}\r\n                                                                inputs={[]}\r\n                                                                saveText={'Add'}\r\n                                                                additionalComponent={()=>{return <NewChargePopupBody database={database} getTime={getTime} getDate={getDate} getYear={getYear} setNewChargePopupOpen={setNewChargePopupOpen} selectedCitizen={selectedCitizen} setSelectedCitizen={setSelectedCitizen} setValues={setValues}/>}}\r\n                                                            />\r\n                                                    </div>\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                        <p className='float-left font-semibold text-gray-700'>Total</p>\r\n                                                        <p className='float-right'>{selectedCitizen.charges ? Object.values(selectedCitizen.charges).length : 0}</p>\r\n                                                    </div>\r\n                                                    <div className='p-2 border-b-2 border-r-2 border-l-2 border-gray-400'>\r\n                                                        {selectedCitizen.charges != undefined &&\r\n                                                        <div className='max-h-96 overflow-y-scroll bg-gray-100'>\r\n                                                            \r\n                                                            \r\n                                                            \r\n                                                        {Object.values(selectedCitizen.charges).sort((charge1, charge2)=>{\r\n                                                            return(charge2.ssre - charge1.ssre);\r\n                                                        }).map(charge => {\r\n                                                            return(\r\n                                                                <div className='p-1'>\r\n                                                                <CriminalCharge charge={charge}/>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                        \r\n                                                        </div>}\r\n                                                        {selectedCitizen.charges == undefined &&\r\n                                                        <div className=''>None yet</div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                            \r\n                                            </div>\r\n                                            <div className='col-span-2 p-2'>\r\n                                                \r\n                                                <div className='bg-white'>\r\n                                                <div className='p-2 flow-root w-full bg-gray-200'>\r\n                                                <p className='font-semibold float-left'>PROPERTIES</p>\r\n                                                        <div className='flex gap-2 float-right'>\r\n                                                            <PropertyDropboxMenu\r\n                                                                properties={properties}\r\n                                                                user={user}\r\n                                                                selectedProperty={selectedDropdownProperty}\r\n                                                                setSelectedProperty={setSelectedDropdownProperty}\r\n                                                                filteredProperties={filteredProperties}\r\n                                                                setFilteredProperties={setFilteredProperties}\r\n                                                            />\r\n                                                        <button \r\n                                                            onClick={onClickGrantProperty}\r\n                                                            className='bg-yellow-300 flex py-1 px-2 hover:bg-yellow-400 text-sm font-semibold rounded shadow'>\r\n                                                            <PlusCircleIcon className='w-5 h-5'/>GRANT PROPERTY</button>\r\n\r\n                                                        </div>\r\n                                                        \r\n                                                            {/* <Popup\r\n                                                                open={newChargePopupOpen}\r\n                                                                setOpen={setNewChargePopupOpen}\r\n                                                                header='New Charge'\r\n                                                                onClickSave={()=>{}}\r\n                                                                inputs={[]}\r\n                                                                saveText={'Add'}\r\n                                                                additionalComponent={()=>{return <NewChargePopupBody database={database} getTime={getTime} getDate={getDate} getYear={getYear} setNewChargePopupOpen={setNewChargePopupOpen} selectedCitizen={selectedCitizen} setSelectedCitizen={setSelectedCitizen}/>}}\r\n                                                            /> */}\r\n                                                    </div>\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                        <p className='float-left font-semibold text-gray-700'>Total</p>\r\n                                                        <p className='float-right'>{selectedCitizen.properties ? Object.values(selectedCitizen.properties).length : 0}</p>\r\n                                                    </div>\r\n                                                    <div className='p-2 border-b-2 border-r-2 border-l-2 border-gray-400'>\r\n                                                        {selectedCitizen.properties != undefined &&\r\n                                                        <div className='max-h-96 overflow-y-scroll bg-gray-100'>\r\n                                                            \r\n                                                            \r\n                                                            <div className='py-1'>\r\n                                                        {Object.values(selectedCitizen.properties).sort((property1, property2)=>{\r\n                                                            return(property2.ssre - property1.ssre);\r\n                                                        }).map(property => {\r\n                                                            return(\r\n                                                                <button className='w-full text-left group'\r\n                                                                    onClick={()=>{\r\n                                                                        setSelectedProperty(findPropertyByID(property.propertyID));\r\n                                                                        setSelectedSection('Properties');\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <div className='px-1'>\r\n                                                                <Property property={property}/>\r\n                                                                </div>\r\n                                                                </button>\r\n                                                            )\r\n                                                        })}\r\n                                                        </div>\r\n                                                        </div>}\r\n                                                        \r\n                                                        {selectedCitizen.properties == undefined &&\r\n                                                        <div className=''>None yet</div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            <div className='col-span-2 p-2'>\r\n                                                \r\n                                                <div className='bg-white'>\r\n                                                <div className='w-full flow-root p-2 bg-gray-200'>\r\n                                                    <p className='font-semibold float-left'>LICENSES</p>\r\n                                                    \r\n                                                    </div>\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                        <p className='float-left font-semibold text-gray-700'>Total</p>\r\n                                                        <p className='float-right'>{selectedCitizen.licenses ? Object.values(selectedCitizen.licenses).length : 0}</p>\r\n                                                    </div>\r\n                                                    <div className='p-2 border-b-2 border-r-2 border-l-2 border-gray-400'>\r\n                                                        {selectedCitizen.licenses != undefined &&\r\n                                                        <div className='max-h-96 overflow-y-scroll bg-gray-100'>\r\n                                                            \r\n                                                            \r\n                                                            \r\n                                                        {Object.values(selectedCitizen.licenses).sort((license1, license2)=>{\r\n                                                            return(license1.title.localeCompare(license2.title));\r\n                                                        }).map(license => {\r\n                                                            return(\r\n                                                                <div className='text-left group m-2'\r\n                                                                    onClick={()=>{\r\n                                                                        /* setSelectedProperty(findPropertyByID(property.propertyID));\r\n                                                                        setSelectedSection('Properties'); */\r\n                                                                    }}\r\n                                                                >\r\n                                                                <LicenseUser license={license}/>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                        \r\n                                                        </div>}\r\n                                                        {selectedCitizen.licenses == undefined &&\r\n                                                        <div className=''>None yet</div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <div className='col-span-1 p-2'>\r\n                                <div className='bg-white rounded'>\r\n                                    <div className='p-2'>\r\n                                        <button className='w-full bg-yellow-300 hover:bg-yellow-400 font-semibold text-sm py-2 justify-center text-center rounded shadow flex'\r\n                                            onClick={()=>{setAddCitizenPopupOpen(true)}}>\r\n                                            <PlusCircleIcon className='w-5 h-5'/>ADD CITIZEN</button>\r\n                                            <Popup\r\n                                                open={addCitizenPopupOpen}\r\n                                                setOpen={setAddCitizenPopupOpen}\r\n                                                header='New Citizen'\r\n                                                onClickSave={()=>{}}\r\n                                                inputs={[]}\r\n                                                saveText={'Add'}\r\n                                                additionalComponent={()=>{return <AddCitizenPopupBody database={database} getTime={getTime} getDate={getDate} getYear={getYear} citizens={citizens} setCitizens={setCitizens} setAddCitizenPopupOpen={setAddCitizenPopupOpen}/>}}\r\n                                            />\r\n                                    </div>\r\n                                    <div className='p-2'>\r\n                                    <input placeholder='Search' value={searchCitizensInput} className='w-full border-2 border-gray-500 p-2 bg-gray-100 focus:ring-1 focus:ring-gray-700 focus:border-gray-700 focus:outline-none'\r\n                                        onChange={event => {\r\n                                            setSearchCitizensInput(event.target.value);\r\n                                            setFilteredCitizens(citizens.filter(citizen => {\r\n                                              console.log(filteredCitizens)\r\n                                              return citizen.name.toUpperCase().includes(event.target.value.toUpperCase());\r\n                                            }))\r\n                                          }}\r\n                                    ></input>\r\n                                    </div>\r\n                                    <div className=''>\r\n                                {filteredCitizens.map(citizen => {\r\n                                    return(\r\n                                        <div className='p-2'>\r\n                                            <button \r\n                                                onClick={()=>{setSelectedCitizen(citizen);\r\n                                                    localStorage.setItem('selectedCitizen', JSON.stringify(citizen));\r\n                                                }}\r\n                                                className={classNames(selectedCitizen != undefined && selectedCitizen.citizenID == citizen.citizenID ? 'border-2 border-blue-400 shadow-lg bg-yellow-400' : ' bg-yellow-300', 'w-full shadow rounded hover:bg-yellow-400 p-2 text-sm font-semibold')}>\r\n                                                    <div>{citizen.name.toUpperCase()}</div>\r\n                                                    <div className='text-gray-700'>{citizen.citizenID.toUpperCase()}</div>\r\n                                                    </button>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {selectedSection == 'Bank' &&\r\n                        <div className='p-4'>\r\n                            <div className='p-3 grid grid-cols-2 bg-white rounded shadow'>\r\n                                <div>\r\n                                    <p className='text-2xl font-bold'>Bank Vault</p>\r\n                                    <p className='text-3xl'>{getTotalMeldasInBank()} [M]</p>\r\n                                </div>\r\n                                <div>\r\n                                    <div className='flex gap-2'>\r\n                                    <p className='text-2xl font-bold'>Government Funds</p>\r\n                                    <div className='float-right flex gap-1'>\r\n                                                        <input type='Number' value={governmentGrantedMeldas} onChange={event => {setGovernmentGrantedMeldas(event.target.value)}} className='px-2 border-2 border-gray-700 w-20 focus:outline-none'></input>\r\n                                                        <button \r\n                                                            onClick={onClickGrantGovernmentMeldas}\r\n                                                            className='bg-yellow-300 py-1 px-2 mr-2 flex hover:bg-yellow-400 font-semibold rounded shadow'>\r\n                                                            <PlusCircleIcon className='w-6 h-6'/>{governmentGrantedMeldas < 0 ? 'WITHDRAW' : 'DEPOSIT'}</button>\r\n                                                    </div>\r\n                                    </div>\r\n                                    <p className='text-3xl'>{governmentFunds} [M]</p>\r\n                                    \r\n                                </div>\r\n                                <div className='col-span-2 pt-4'>\r\n                                    <p className='text-2xl font-bold'>Transfers</p>\r\n                                    <div className='bg-gray-200 border-2 border-gray-500 p-2 max-h-56 min-h-12 overflow-y-scroll'>\r\n                                        {governmentTransfers.map(transfer => {\r\n                                            return(\r\n                                                <div className='p-1'>\r\n                                                    <Transfer transfer={transfer}/>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='p-3 my-4 bg-white shadow rounded'>\r\n                            <p className='text-2xl font-bold'>Sales Tax</p>\r\n                            <div className=''>\r\n                                <div className='flex justify-center'>\r\n                            <div className='gap-1'>\r\n                                <p className='text-xl font-semibold'>Rate</p>\r\n                                <div className='flex gap-1'>\r\n                            <input\r\n                                className='p-1 bg-white border-2 border-gray-500 focus:outline-none'\r\n                                type='Number'\r\n                                value={salesTaxRate}\r\n                                onChange={event => {setSalesTaxRate(Number(event.target.value))}}\r\n                            ></input>\r\n                            <p className='text-xl font-semibold'>%</p>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <button \r\n                                className='mt-4 p-2 col-span-3 rounded shadow flex w-full justify-center font-semibold bg-yellow-300 hover:bg-yellow-400 text-lg'\r\n                                onClick={() => {\r\n                                    database.ref('/government/salesTaxRate').set(0.01 * salesTaxRate);\r\n                                }}\r\n                                >\r\n                                    <CheckCircleIcon className='h-7 w-7'/>\r\n                                    UPDATE SALES TAX RATE</button>\r\n                            </div>\r\n                            </div>\r\n                            <div className='p-3 my-4 bg-white shadow rounded'>\r\n                            <p className='text-2xl font-bold'>Interest</p>\r\n                            <div className='grid grid-cols-3'>\r\n                            <div className='gap-1'>\r\n                                <p className='text-xl font-semibold'>Rate</p>\r\n                                <div className='flex gap-1'>\r\n                            <input\r\n                                className='p-1 bg-white border-2 border-gray-500 focus:outline-none'\r\n                                type='Number'\r\n                                value={interestRate}\r\n                                onChange={event => {setInterestRate(Number(event.target.value))}}\r\n                            ></input>\r\n                            <p className='text-xl font-semibold'>%</p>\r\n                            </div>\r\n                            </div>\r\n                            <div>\r\n                            <p className='text-xl font-semibold'>Resulting Payout</p>\r\n                            <p className={classNames(getResultingInterestPayout() > 0 ? 'text-red-700' : '', 'text-xl')}>{getResultingInterestPayout()} [M]</p>\r\n                            </div>\r\n                            <div>\r\n                            <p className='text-xl font-semibold'>Resulting Government Funds</p>\r\n                            <p className={classNames(getResultingInterestPayout() > 0 ? 'text-red-700' : '','text-xl')}>{governmentFunds - getResultingInterestPayout()} [M]</p>\r\n                            </div>\r\n                            <button \r\n                                className='mt-4 p-2 col-span-3 rounded shadow flex w-full justify-center font-semibold bg-yellow-300 hover:bg-yellow-400 text-lg'\r\n                                onClick={onClickGrantInterest}\r\n                                >\r\n                                    <ArrowCircleUpIcon className='h-7 w-7'/>\r\n                                    GRANT INTEREST</button>\r\n                            </div>\r\n                            </div>\r\n                            <div className='p-3 bg-white shadow rounded'>\r\n                            <p className='text-2xl font-bold'>Taxes</p>\r\n                            <div className='grid grid-cols-3'>\r\n                            <div className='gap-1'>\r\n                                <p className='text-xl font-semibold'>Rate</p>\r\n                                <div className='flex gap-1'>\r\n                            <input\r\n                                className='p-1 bg-white border-2 border-gray-500 focus:outline-none'\r\n                                type='Number'\r\n                                value={taxRate}\r\n                                onChange={event => {setTaxRate(Number(event.target.value))}}\r\n                            ></input>\r\n                            <p className='text-xl font-semibold'>%</p>\r\n                            </div>\r\n                            </div>\r\n                            <div>\r\n                            <p className='text-xl font-semibold'>Resulting Revenue</p>\r\n                            <p className={classNames(getResultingTaxRevenue() > 0 ? 'text-green-700' : '', 'text-xl')}>{getResultingTaxRevenue()} [M]</p>\r\n                            </div>\r\n                            <div>\r\n                            <p className='text-xl font-semibold'>Resulting Government Funds</p>\r\n                            <p className={classNames(getResultingTaxRevenue() > 0 ? 'text-green-700' : '', 'text-xl')}>{governmentFunds + getResultingTaxRevenue()} [M]</p>\r\n                            </div>\r\n                            <button \r\n                                className='mt-4 p-2 col-span-3 rounded shadow flex w-full justify-center font-semibold bg-yellow-300 hover:bg-yellow-400 text-lg'\r\n                                onClick={onClickPullTaxes}\r\n                                >\r\n                                    <ArrowCircleDownIcon className='h-7 w-7'/>\r\n                                    PULL TAXES</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {selectedSection == 'Licenses' &&\r\n                        <div className=''>\r\n                            <div className='m-4 bg-white rounded p-2 shadow'>\r\n                            <div className=''>\r\n                                <p className='font-semibold text-lg'>Title</p>\r\n                                <input\r\n                                    className='border-2 border-gray-500 w-full p-1 focus:outline-none'\r\n                                    onChange={event => {setLicenseTitle(event.target.value)}}\r\n                                ></input>\r\n                            </div>\r\n                            <div className='py-2'>\r\n                                <p className='font-semibold text-lg'>Permissions</p>\r\n                                <input\r\n                                    className='border-2 border-gray-500 w-full p-1 focus:outline-none'\r\n                                    onChange={event => {setLicensePermissions(event.target.value)}}\r\n                                ></input>\r\n                            </div>\r\n                            <div className=''>\r\n                                <p className='font-semibold text-lg'>Price</p>\r\n                                <div className='flex gap-1 w-full'>\r\n                                    <input\r\n                                        className='border-2 border-gray-500 w-full p-1 focus:outline-none'\r\n                                        onChange={event => {setLicensePrice(event.target.value)}}\r\n                                    ></input>\r\n                                    <p className='text-xl font-bold'>[M]</p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className='flex justify-center pt-2'>\r\n                            <button className='font-semibold rounded shadow bg-yellow-300 hover:bg-yellow-400 py-1 px-2 flex justify-center'\r\n                                onClick={onClickAddLicense}\r\n                            >ADD LICENSE</button>\r\n                            </div>\r\n                            </div>\r\n                            <div className='py-2 bg-gray-200 max-h-screen overflow-y-scroll'>\r\n                                {licenses.map(license => {\r\n                                    return(\r\n                                        <div className='px-4 py-2'>\r\n                                            <LicenseGovernment license={license}/>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {selectedSection == 'Holidays' &&\r\n                        <div>\r\n                            Holidays\r\n                        </div>\r\n                    }\r\n                    {selectedSection == 'Properties' &&\r\n                        <div className='grid grid-cols-3'>\r\n                        <div className='col-span-2 p-2'>\r\n                            {selectedProperty == undefined &&\r\n                                <p className='text-gray-500 p-5 font-semibold'>NO PROPERTY SELECTED</p>\r\n                            }\r\n                            {selectedProperty != undefined &&\r\n                                <div className='bg-white rounded'>\r\n                                    <div className='p-1'>\r\n                                    <Property property={selectedProperty}/>\r\n                                    </div>\r\n                                    <div className='p-2 max-h-screen overflow-y-scroll'>\r\n                                        <div className='grid grid-cols-2'>\r\n                                        <div className='col-span-2 p-2'>\r\n                                            \r\n                                            <div className='bg-white'>\r\n                                                \r\n                                                <div className='w-full flow-root p-2 bg-gray-200'>\r\n                                                <p className='font-semibold float-left'>OWNER</p>\r\n                                                <div className='float-right flex gap-2'>\r\n                                                    <CitizenGovernmentDropboxMenu\r\n                                                        citizens={citizens}\r\n                                                        selectedCitizen={selectedNewPropertyOwner}\r\n                                                        setSelectedCitizen={setSelectedNewPropertyOwner}\r\n                                                        filteredCitizens={filteredDropboxCitizens}\r\n                                                        setFilteredCitizens={setFilteredDropboxCitizens}\r\n                                                    />\r\n                                                        <button \r\n                                                        onClick={onClickAddChangeOwnerButton}\r\n                                                        className='bg-yellow-300 py-1 px-2 flex text-sm hover:bg-yellow-400 font-semibold rounded shadow'>\r\n                                                        <PlusCircleIcon className='w-5 h-5'/>{selectedProperty.owner != undefined ? 'CHANGE OWNER' : 'ADD OWNER'}</button>\r\n                                                </div>\r\n                                                </div>\r\n                                                <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                    <p className='float-left font-semibold text-gray-700'>Current</p>\r\n                                                    <p className='float-right'>{selectedProperty.owner ? `${selectedProperty.owner.name}, ${selectedProperty.owner.citizenID}` : 'None'}</p>\r\n                                                </div>\r\n                                                {selectedProperty.owner &&\r\n                                                <div className='flow-root p-2 border-l-2 border-r-2 border-b-2 border-gray-400'>\r\n                                                    <p className='float-left font-semibold text-gray-700'>Date Given</p>\r\n                                                    <p className='float-right'>{selectedProperty.owner.dateAdded}</p>\r\n                                                </div>\r\n                                                }\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        {selectedProperty.type == 'Business' &&\r\n                                        <div className='col-span-2 p-2'>\r\n                                            \r\n                                            <div className='bg-white'>\r\n                                                \r\n                                                <div className='w-full flow-root p-2 bg-gray-200'>\r\n                                                <p className='font-semibold float-left'>BUSINESS</p>\r\n                                                <div className='float-right flex gap-2'>\r\n                                                    \r\n                                                        <button \r\n                                                        onClick={()=>{setAddChangeBusinessPopupOpen(true)}}\r\n                                                        className='bg-yellow-300 py-1 px-2 flex text-sm hover:bg-yellow-400 font-semibold rounded shadow'>\r\n                                                        <PlusCircleIcon className='w-5 h-5'/>{selectedProperty.business != undefined ? 'CHANGE BUSINESS' : 'ADD BUSINESS'}\r\n                                                            <Popup\r\n                                                                open={addChangeBusinessPopupOpen}\r\n                                                                setOpen={setAddChangeBusinessPopupOpen}\r\n                                                                header={selectedProperty.business != undefined ? 'Change Business' : 'Add Business'}\r\n                                                                onClickSave={()=>{}}\r\n                                                                inputs={[]}\r\n                                                                saveText={selectedProperty.business != undefined ? 'Change' : 'Add'}\r\n                                                                additionalComponent={()=>{return <AddBusinessPopupBody database={database} setValues={setValues} selectedProperty={selectedProperty} setSelectedProperty={setSelectedProperty} setAddChangeBusinessPopupOpen={setAddChangeBusinessPopupOpen}/>}}\r\n                                                            />\r\n                                                        </button>\r\n                                                </div>\r\n                                                </div>\r\n                                                {selectedProperty.business != undefined ?\r\n                                                    <div>\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                    <p className='float-left font-semibold text-gray-700'>Name</p>\r\n                                                    <p className='float-right'>{selectedProperty.business.name}</p>\r\n                                                    </div>\r\n                                                    <div className='flow-root p-2 border-b-2 border-l-2 border-r-2 border-gray-400'>\r\n                                                    <p className='float-left font-semibold text-gray-700'>Description</p>\r\n                                                    <p className='float-right'>{selectedProperty.business.description}</p>\r\n                                                    </div>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                    <p className='float-left font-semibold text-gray-700'>None yet</p>\r\n                                                    \r\n                                                    </div>\r\n                                                }\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n                                    <p></p>\r\n                                \r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className='col-span-1 p-2'>\r\n                            <div className='bg-white rounded'>\r\n                                <div className='p-2'>\r\n                                    <button className='w-full bg-yellow-300 hover:bg-yellow-400 font-semibold text-sm py-2 justify-center text-center rounded shadow flex'\r\n                                        onClick={()=>{setAddPropertyPopupOpen(true)}}>\r\n                                        <PlusCircleIcon className='w-5 h-5'/>ADD PROPERTY</button>\r\n                                        <Popup\r\n                                            open={addPropertyPopupOpen}\r\n                                            setOpen={setAddPropertyPopupOpen}\r\n                                            header='Add Property'\r\n                                            onClickSave={()=>{}}\r\n                                            inputs={[]}\r\n                                            saveText={'Add'}\r\n                                            additionalComponent={()=>{return <AddPropertyPopupBody database={database} getTime={getTime} getDate={getDate} getYear={getYear} properties={properties} setProperties={setProperties} setAddPropertyPopupOpen={setAddPropertyPopupOpen}/>}}\r\n                                        />\r\n                                </div>\r\n                                <div className='p-2'>\r\n                                <input placeholder='Search' value={searchPropertiesInput} className='w-full border-2 border-gray-500 p-2 bg-gray-100 focus:ring-1 focus:ring-gray-700 focus:border-gray-700 focus:outline-none'\r\n                                    onChange={event => {\r\n                                        setSearchPropertiesInput(event.target.value);\r\n                                        setFilteredProperties(properties.filter(property => {\r\n                                          console.log(filteredProperties)\r\n                                          return property.address.toUpperCase().includes(event.target.value.toUpperCase());\r\n                                        }))\r\n                                      }}\r\n                                ></input>\r\n                                </div>\r\n                                <div className=''>\r\n                            {filteredProperties.map(property => {\r\n                                return(\r\n                                    <div className='p-2'>\r\n                                        <button \r\n                                            onClick={()=>{setSelectedProperty(property);\r\n                                                localStorage.setItem('selectedProperty', JSON.stringify(property));\r\n                                            }}\r\n                                            className={classNames(selectedProperty != undefined && selectedProperty.propertyID == property.propertyID ? 'border-2 border-blue-400 shadow-lg bg-yellow-400' : ' bg-yellow-300', 'w-full shadow rounded hover:bg-yellow-400 p-2 text-sm font-semibold')}>\r\n                                            <div>{property.address.toUpperCase()}</div>\r\n                                                <div className='text-gray-700'>{property.propertyID.toUpperCase()}</div>\r\n                                                </button>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    {selectedSection == 'Announcements' &&\r\n                                    <div>\r\n                                        <div className='w-full'>\r\n                                <div className='flow-root p-3 bg-white rounded shadow mx-2 my-2'>\r\n                                <textarea className='p-2 w-full mb-2 border-2 focus:border-black bg-gray-100 shadow-sm focus:outline-none border-gray-500 resize-none'\r\n                                    placeholder='Write announcement...'\r\n                                    value={announcementText}\r\n                                    onKeyDown={event => {\r\n                                        if(event.code === 'Enter'){\r\n                                            onClickPostAnnouncement();\r\n                                        }\r\n                                    }}\r\n                                    \r\n                                    onChange={event => {\r\n                                                if(!event.target.value.includes('\\n')){\r\n                                                    setAnnouncementText(event.target.value);\r\n                                                }\r\n                                    }}\r\n                                ></textarea>\r\n                                <div className='w-full flex pb-2 justify-center'>\r\n                                <button \r\n                                    onClick={onClickPostAnnouncement}\r\n                                    className={classNames(\r\n                                        announcementText != '' && announcementText != undefined ? 'bg-yellow-300 hover:bg-yellow-400' : 'bg-yellow-200 text-gray-400',\r\n                                        'w-64 flex text-md justify-center py-1 font-semibold rounded shadow')}>\r\n                                            <div className='flex justify-center'>\r\n                                    <PlusCircleIcon className='w-6 h-6'/>POST ANNOUNCEMENT\r\n                                    \r\n                                    </div>\r\n                                    </button>\r\n                                    </div>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className='mt-5 bg-gray-200 py-1 max-h-screen overflow-y-scroll'>\r\n                                        {announcements.map(announcement => {\r\n                                            return(\r\n                                                <div className='px-2 py-1'>\r\n                                                    <Announcement announcement={announcement}/>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                    </div>\r\n                                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    function Transfer({transfer}){\r\n    \r\n        return(\r\n            <div className='rounded bg-white text-sm shadow'>\r\n                <div className='w-full'>\r\n                <p className='pl-2 pt-2 font-semibold text-gray-700'>{transfer.date} at {transfer.time}</p>\r\n                <p className='pl-2 pt-2 font-semibold text-gray-700'>{transfer.transferID} {transfer.ssre}</p>\r\n                </div>\r\n                <div className='grid grid-cols-4 p-2 gap-2'>\r\n                {transfer.type == \"Incoming\" ?\r\n                <div className='col-span-2 grid grid-cols-2'>\r\n                            <div className='col-span-1'>\r\n                                <p className='font-semibold'>Amount</p>\r\n                                <p className='text-green-700'>+{transfer.amount} [M]</p>\r\n                            </div>\r\n                            <div className='col-span-1'>\r\n                                <p className='font-semibold'>From</p>\r\n                                <p className=''>{transfer.senderName}</p>\r\n                            </div>\r\n                            </div>\r\n                :    \r\n                <div className='col-span-2 grid grid-cols-2'>\r\n                <div className='col-span-1'>\r\n                    <p className='font-semibold'>Amount</p>\r\n                    <p className='text-red-700'>-{transfer.amount} [M]</p>\r\n                </div>\r\n                <div className='col-span-1'>\r\n                    <p className='font-semibold'>To</p>\r\n                    <p className=''>{transfer.receiverName}</p>\r\n                </div>\r\n                </div>\r\n                        }\r\n                <div className='col-span-1'>\r\n                                <p className='font-semibold'>Reason</p>\r\n                                <p className=''>{transfer.reason}</p>\r\n                            </div>\r\n                <div className='col-span-1'>\r\n                                <p className='font-semibold'>Resulting Balance</p>\r\n                                <p className=''>{transfer.resultingBalance} [M]</p>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        )\r\n    \r\n}\r\n\r\nfunction LicenseGovernment({license}){\r\n    return(\r\n        <div className='border-2 border-gray-500 bg-white shadow p-2'>\r\n            <div className='flow-root'>\r\n                <div className='float-left'>\r\n                    <p className='text-lg font-semibold'>{license.title}</p>\r\n                    <p className='font-semibold text-gray-700'>{license.licenseID}</p>\r\n                </div>\r\n                <p className='float-right font-bold text-xl'>{license.price} [M]</p>\r\n            </div>\r\n            \r\n            <p className='pt-2 font-semibold'>{license.permissions}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction LicenseUser({license}){\r\n    return(\r\n        <div className='border-2 border-gray-500 bg-white shadow p-2'>\r\n            <div className='flow-root'>\r\n                <div className='float-left'>\r\n                    <p className='text-lg font-semibold'>{license.title}</p>\r\n                    <p className='font-semibold text-gray-700'>{license.licenseID}</p>\r\n                </div>\r\n                <p className='float-right font-bold text-xl'>{license.price} [M]</p>\r\n            </div>\r\n            <div className='flow-root'>\r\n                <p className='pt-2 pr-2 font-semibold float-left'>{license.permissions}</p>\r\n                <div className='flex float-right'>\r\n                    <CheckCircleIcon className='w-7 h-7'/>\r\n                <p className='float-right font-bold px-1 text-lg'>Purchased {(selectedCitizen.licenses[license.licenseID]).datePurchased}</p>\r\n                </div>\r\n                \r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CriminalCharge({charge}){\r\n    \r\n    return(\r\n        <div className='rounded bg-white shadow text-sm break-words'>\r\n            <div className='w-full'>\r\n            <p className='pl-2 pt-2 font-semibold text-gray-700'>{charge.date} at {charge.time}</p>\r\n            <p className='pl-2 pt-2 font-semibold text-gray-700'>{charge.chargeID} {charge.ssre}</p>\r\n            </div>\r\n            \r\n                {charge.verdict == \"Guilty\" ?\r\n                <div className='grid grid-cols-3 p-2 gap-x-2 gap-y-2'>\r\n                <div className='col-span-1'>\r\n                <p className='font-semibold'>Prosecutor</p>\r\n                <p className=''>{charge.prosecutor.name}</p>\r\n                <p className=''>{charge.prosecutor.citizenID}</p>\r\n            </div>\r\n            <div className='col-span-1'>\r\n                <p className='font-semibold'>Defendant</p>\r\n                <p className=''>{charge.defendant.name}</p>\r\n                <p className=''>{charge.defendant.citizenID}</p>\r\n            </div>\r\n            <div className='col-span-1'>\r\n                        <p className='font-semibold'>Verdict</p>\r\n                        <p className='text-red-700'>Guilty</p>\r\n                        </div>\r\n            <div className='col-span-1'>\r\n                        <p className='font-semibold'>Crime</p>\r\n                        <p className=''>{charge.crime}</p>\r\n                        </div>\r\n\r\n                        \r\n                        <div className='col-span-1'>\r\n                            <p className='font-semibold'>Reason for Verdict</p>\r\n                            <p className=''>{charge.reasonForVerdict}</p>\r\n                        </div>\r\n                        <div className='col-span-1'>\r\n                        <p className='font-semibold'>Punishment</p>\r\n                        <p className=''>{charge.punishment}</p>\r\n                        </div>\r\n            </div> :\r\n            <div className='grid grid-cols-3 p-2 gap-x-2 gap-y-2'>\r\n            <div className='col-span-1'>\r\n            <p className='font-semibold'>Prosecutor</p>\r\n            <p className=''>{charge.prosecutor.name}</p>\r\n            <p className=''>{charge.prosecutor.citizenID}</p>\r\n        </div>\r\n        <div className='col-span-1'>\r\n            <p className='font-semibold'>Defendant</p>\r\n            <p className=''>{charge.defendant.name}</p>\r\n            <p className=''>{charge.defendant.citizenID}</p>\r\n        </div>\r\n        <div className='col-span-1'>\r\n        <div className='col-span-1'>\r\n                    <p className='font-semibold'>Verdict</p>\r\n                    <p className='text-green-700'>Not Guilty</p>\r\n                    </div>\r\n                    <p className='font-semibold'>Alleged Crime</p>\r\n                    <p className=''>{charge.allegedCrime}</p>\r\n                    </div>\r\n                    \r\n                   \r\n                   \r\n                    <div className='col-span-2'>\r\n                        <p className='font-semibold'>Reason for Verdict</p>\r\n                        <p className=''>{charge.reasonForVerdict}</p>\r\n                    </div>\r\n                   \r\n                    </div>\r\n        \r\n                }\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\n    function Property({property}){\r\n        return(\r\n            <div className={classNames(selectedSection == 'Citizens' ? 'text-sm' : '', 'p-1')}>\r\n                                            <div className='w-full bg-white group-hover:bg-gray-200 border-2 border-gray-500 grid grid-cols-4'>\r\n                                                <div className='col-span-4 p-2 flow-root'>\r\n                                                    <div className='float-left'>\r\n                                                    <p className={classNames(selectedSection == 'Citizens' ? 'text-lg' : 'text-xl', 'font-bold')}>{property.address}</p>\r\n                                                    <p className={classNames(selectedSection == 'Citizens' ? 'text-xs' : 'text-sm', 'uppercase font-semibold')}>{property.type}</p>\r\n                                                    </div>\r\n                                                    {/* <div className='float-right'>\r\n                                                        <button className='rounded flex p-2 text-sm uppercase shadow font-semibold bg-yellow-300 hover:bg-yellow-400'>\r\n                                                            <PencilIcon className='h-5 w-5'/>\r\n                                                            Edit Property\r\n                                                        </button>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                                \r\n{/*                                                 <div className='col-span-3 px-2 uppercase font-bold'>Information</div>\r\n */}                                                \r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Property ID</p>\r\n                                                    <p>{property.propertyID}</p>\r\n                                                </div>\r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Price</p>\r\n                                                    <p>{property.price} [M]</p>\r\n                                                </div>\r\n                                                \r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Dimensions</p>\r\n                                                    <p>{property.length} by {property.width}</p>\r\n                                                </div>\r\n                                                {/* <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Size</p>\r\n                                                    <p>{property.size} Blocks</p>\r\n                                                </div> */}\r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Date Added</p>\r\n                                                    <p>{property.dateAdded}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            </div>\r\n        )\r\n    }\r\n\r\n    function Announcement({announcement}){\r\n        return(\r\n            <div className='bg-white rounded shadow p-2'>\r\n                <p className='text-gray-700 font-semibold'>{announcement.datePosted} at {announcement.timePosted}</p>\r\n                <div className='p-2'>\r\n                        <p className='text-lg font-semibold py-2 px-2 border-2 border-gray-400 shadow-sm'>\r\n                            {announcement.text}\r\n                        </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Government;","import React, {useEffect, useState} from 'react'\r\nimport { PlusCircleIcon, ThumbUpIcon, ThumbDownIcon, XCircleIcon, ChatIcon, DotsHorizontalIcon, NewspaperIcon, SpeakerphoneIcon, ScaleIcon, BellIcon } from '@heroicons/react/outline';\r\n//import { ThumbUpIcon } from '@heroicons/react/solid';\r\nimport { Menu, Transition } from '@headlessui/react';\r\nimport { Fragment } from 'react';\r\n\r\nconst Home = ({database, user, getDate, getYear, getTime, selectedSection, setSelectedSection, selectedPost, setSelectedPost}) => {\r\n    const [criminalCharges, setCriminalCharges] = useState([]);\r\n    const [posts, setPosts] = useState();\r\n    const [filteredPosts, setFilteredPosts] = useState();\r\n    const [announcements, setAnnouncements] = useState([]);\r\n    const [notifications, setNotifications] = useState();\r\n    const [postPopupBodyOpen, setPostPopupBodyOpen] = useState(false);\r\n    const [postText, setPostText] = useState('');\r\n    const [numberOfPostsShown, setNumberOfPostsShown] = useState(12);\r\n    const [selectedFilter, setSelectedFilter] = useState('Most Recent');\r\n    const [postsLoaded, setPostsLoaded] = useState(false);\r\n    const [notificationsLoaded, setNotificationsLoaded] = useState(false);\r\n    const [unseenNotifications, setUnseenNotifications] = useState(false);\r\n    const [announcementsLoaded, setAnnouncementsLoaded] = useState(false);\r\n    const [criminalChargesLoaded, setCriminalChargesLoaded] = useState(false);\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    const navigationSections = [\r\n        {sectionName: 'Public Posts', sectionSelected: selectedSection == 'Public Posts', icon: NewspaperIcon},\r\n        {sectionName: 'Government Announcements', sectionSelected: selectedSection == 'Government Announcements', icon: SpeakerphoneIcon},\r\n        {sectionName: 'Criminal Charges', sectionSelected: selectedSection == 'Criminal Charges', icon: ScaleIcon},\r\n        {sectionName: 'Notifications', sectionSelected: selectedSection == 'Notifications', icon: BellIcon},\r\n    ]\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    useEffect(updateValues, []);\r\n    useEffect(()=>{updateFilteredPosts(posts, numberOfPostsShown)}, [selectedFilter]);\r\n\r\n    function updateValues(){\r\n        console.log('Called updateValues()')\r\n        database.ref(`/citizens/${user.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n            if(notificationsSnapshot.val() != undefined){\r\n                setNotifications(Object.values(notificationsSnapshot.val()).sort((notification1, notification2) => {\r\n                    return notification2.ssre - notification1.ssre\r\n                }));\r\n            }\r\n            if(selectedSection == 'Notifications'){\r\n                database.ref(`/citizens/${user.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                    if(notificationsSnapshot.val() != undefined){\r\n                        const notifications = Object.values(notificationsSnapshot.val());\r\n                        notifications.forEach(notification => {\r\n                            notification.seen = true;\r\n                        });\r\n                        setUnseenNotifications(false);\r\n                        database.ref(`/citizens/${user.citizenID}/notifications`).set(notifications);\r\n                        setNotifications(notifications.sort((notification1, notification2) => {\r\n                            return notification2.ssre - notification1.ssre\r\n                        }));\r\n                    }\r\n                })\r\n            } else {\r\n                if(notificationsSnapshot.val() != undefined){updateUnseenNotifications(Object.values(notificationsSnapshot.val()))};\r\n            }\r\n            setNotificationsLoaded(true);\r\n        database.ref('/posts').get().then(postsSnapshot => {\r\n            if(postsSnapshot.val() != undefined){\r\n                console.log('Retrieved', Object.values(postsSnapshot.val()).length, 'posts, showing', numberOfPostsShown);\r\n\r\n                setPosts(Object.values(postsSnapshot.val()).sort((post1, post2)=>{\r\n                    return post2.ssre - post1.ssre\r\n                }).slice(0, 100));\r\n                updateFilteredPosts(Object.values(postsSnapshot.val()).sort((post1, post2)=>{\r\n                    return post2.ssre - post1.ssre\r\n                }), numberOfPostsShown);\r\n            }\r\n            setPostsLoaded(true);\r\n            database.ref('/announcements').get().then(announcementsSnapshot => {\r\n                if(announcementsSnapshot.val() != undefined){\r\n                    setAnnouncements(Object.values(announcementsSnapshot.val()).sort((announcement1, announcement2) => {\r\n                        return(\r\n                            announcement2.ssre - announcement1.ssre\r\n                        );\r\n                    }).slice(0, 100));\r\n                }\r\n                setAnnouncementsLoaded(true);\r\n                database.ref('/criminalCharges').get().then(criminalChargesSnapshot => {\r\n                    if(criminalChargesSnapshot.val() != undefined){\r\n                        setCriminalCharges(Object.values(criminalChargesSnapshot.val()).sort((charge1, charge2) => {\r\n                            return charge2.ssre - charge1.ssre\r\n                        }));\r\n                    }\r\n                    setCriminalChargesLoaded(true);\r\n                    \r\n                });\r\n            })\r\n        });\r\n    })\r\n    }\r\n\r\n    function updateFilteredPosts(postsInput, numberOfPostsShown){\r\n        if(postsInput){\r\n            const sortedPosts = [...postsInput.sort((post1, post2)=>{\r\n                return post2.ssre - post1.ssre;})]                \r\n            if(selectedFilter == 'Most Liked'){\r\n                sortedPosts.sort((post1, post2) => {\r\n                    const post1Likes = post1.liked != undefined ? Object.values(post1.liked).length : 0;\r\n                    const post2Likes = post2.liked != undefined ? Object.values(post2.liked).length : 0;\r\n                    return post2Likes - post1Likes;\r\n                });} else if (selectedFilter == 'Most Disliked'){\r\n                    sortedPosts.sort((post1, post2) => {\r\n                        const post1Dislikes = post1.disliked != undefined ? Object.values(post1.disliked).length : 0;\r\n                        const post2Dislikes = post2.disliked != undefined ? Object.values(post2.disliked).length : 0;\r\n                        return post2Dislikes - post1Dislikes;\r\n                    });\r\n                }\r\n            setFilteredPosts(sortedPosts.slice(0, numberOfPostsShown));\r\n            }\r\n        \r\n    }\r\n\r\n    function censor(citizenID){\r\n        return(user.citizenID != citizenID ? `CI-***${citizenID.substring(6, 8)}` : citizenID);\r\n    }\r\n\r\n    function makeReadableTimeAgo(post){\r\n        const secondsSincePost = Math.round(((new Date()).getTime()/1000)-rushingtonEpoch) - post.ssre;\r\n        if(secondsSincePost > 2591999){\r\n            return(`${post.datePosted}`);\r\n        } else if(secondsSincePost > 307199){\r\n            const yearsAgo = toFixed(secondsSincePost/307200, 0);\r\n            return(`${yearsAgo} Rushington ${yearsAgo != 1 ? 'years' : 'year'} ago`);\r\n        } else if(secondsSincePost > 38399){\r\n            const monthsAgo = toFixed(secondsSincePost/38400, 0);\r\n            return(`${monthsAgo} Rushington ${monthsAgo != 1 ? 'months' : 'month'} ago`);\r\n        } else if(secondsSincePost > 1199){\r\n            const daysAgo = toFixed(Math.round(((new Date()).getTime()/1000)-rushingtonEpoch)/1200, 0) - \r\n                toFixed(post.ssre/1200, 0);\r\n            return(`${daysAgo} Rushington ${daysAgo != 1 ? 'days' : 'day'} ago`);\r\n        } else if(secondsSincePost > 59){\r\n            const minutesSincePost = toFixed(secondsSincePost/60, 0);\r\n            return(`${minutesSincePost} ${minutesSincePost != 1 ? 'minutes' : 'minute'} ago`);\r\n        } else {\r\n            return(`${secondsSincePost} ${secondsSincePost != 1 ? 'seconds' : 'second'} ago`);\r\n        }\r\n    }\r\n\r\n    function toFixed(num, fixed) {\r\n        var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\r\n        return num.toString().match(re)[0];\r\n    }\r\n\r\n    function onClickPost(){\r\n        if(postText != '' && postText != undefined){\r\n            const postID = generatePostID();\r\n            const newPost = {\r\n                postID: postID,\r\n                ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                poster: {\r\n                    citizenID: user.citizenID,\r\n                    name: user.name\r\n                },\r\n                text: postText,\r\n                datePosted: `${getDate()}, ${getYear()}`,\r\n                timePosted: getTime(),\r\n                \r\n            }\r\n            database.ref(`/posts/${postID}`).set(newPost);\r\n            updateValues();\r\n            setPostText('');\r\n        }\r\n    }\r\n\r\n    function generatePostID(){\r\n        var postID = 'PO-'\r\n        for(var i = 0; i < 5; i++){\r\n            postID = postID + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(postID);\r\n    }\r\n    \r\n    function updateUnseenNotifications(notifications){\r\n        console.log('Called updateUnseenNotifications()')\r\n        var unseenNotificationsValue = false;\r\n        var count = 0;\r\n        if(notifications != undefined){\r\n        notifications.forEach(notification => {\r\n            if(!notification.seen){\r\n                count++;\r\n                unseenNotificationsValue = true;\r\n            }\r\n        });}\r\n        console.log('Found', count, 'unseen notifications');\r\n        setUnseenNotifications(unseenNotificationsValue);\r\n    }\r\n\r\n    function UpOrDownArrow(props){\r\n        if(props.open){\r\n            return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 15l7-7 7 7\" />\r\n              </svg>} else {\r\n            return <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n          }\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <div className='grid grid-cols-4 gap-5'>\r\n                <div className='col-span-4 lg:col-span-1 lg:h-40 lg:sticky lg:top-6'>\r\n                    \r\n                    {navigationSections.map(navigationSection => {\r\n                        const Icon = navigationSection.icon;\r\n                        return(\r\n                        \r\n                        <div className='flex-auto lg:flex-none'>\r\n                        <button\r\n                            onClick={()=>{setSelectedSection(navigationSection.sectionName);\r\n                                localStorage.setItem('selectedSection', navigationSection.sectionName);\r\n                                if(navigationSection.sectionName == 'Notifications'){\r\n                                    database.ref(`/citizens/${user.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                        if(notificationsSnapshot.val() != undefined){\r\n                                            const notifications = Object.values(notificationsSnapshot.val());\r\n                                            notifications.forEach(notification => {\r\n                                                notification.seen = true;\r\n                                            });\r\n                                            database.ref(`/citizens/${user.citizenID}/notifications`).set(notifications);\r\n                                            updateValues();\r\n                                        }\r\n                                    })\r\n                                }\r\n                            }}\r\n                            className={classNames(navigationSection.sectionSelected ? 'bg-gray-200' : 'bg-white hover:bg-gray-100',\r\n                                'rounded p-2 w-full text-center lg:text-left'\r\n                            )}\r\n                        >\r\n                            <div className='flex gap-2 justify-center lg:justify-start'>\r\n                                <Icon className='h-6 w-6'\r\n                                    fill={classNames(navigationSection.sectionName == 'Notifications' && unseenNotifications ? '#facc15' : 'white')}\r\n                                />\r\n                            <p className='text-gray-800 font-semibold'>{navigationSection.sectionName}</p>\r\n                            </div>\r\n                            </button>\r\n                        </div>\r\n                        )\r\n                    })}\r\n                    \r\n                </div>\r\n                <div className='col-span-4 lg:col-span-3 bg-gray-100 rounded'>\r\n                    <div className=''>\r\n                        <p className='font-bold py-1 px-2 bg-gray-100 border-b border-gray-400 text-xl'>{selectedSection}</p>\r\n                        {\r\n                            selectedSection == 'Criminal Charges' &&\r\n                            <div className={classNames(criminalChargesLoaded ? '' : 'animate-pulse', 'p-1 lg:p-2')}>\r\n                                {!criminalChargesLoaded &&\r\n                                    <div className='flex justify-center'>\r\n                                    <DotsHorizontalIcon className='h-10 w-10'/>\r\n                                    </div>\r\n                                }\r\n                                {criminalCharges.map(\r\n                                    criminalCharge => {\r\n                                        return(\r\n                                            <div className='p-1 lg:p-2'>\r\n                                                <CriminalCharge charge={criminalCharge}/>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                )}\r\n                            </div>\r\n                        }\r\n                        {\r\n                            selectedSection == 'Public Posts' &&\r\n                            <div className={classNames(postsLoaded ? '' : 'animate-pulse', 'w-full')}>\r\n                                <div className='flow-root p-1 mx-2 my-2'>\r\n                                <textarea className='p-2 rounded w-full focus:ring-1 focus:ring-gray-700 mb-2 border-2 focus:border-gray-700 bg-white shadow-sm focus:outline-none border-gray-500 resize-none'\r\n                                    placeholder='Write post...'\r\n                                    value={postText}\r\n                                    onKeyDown={event => {\r\n                                        if(event.code === 'Enter'){\r\n                                            onClickPost();\r\n                                        }\r\n                                    }}\r\n                                    \r\n                                    onChange={event => {\r\n                                                if(!event.target.value.includes('\\n')){\r\n                                                    setPostText(event.target.value);\r\n                                                }\r\n                                    }}\r\n                                ></textarea>\r\n                                <div className='w-full flex pb-2 justify-center'>\r\n                                <button \r\n                                    onClick={onClickPost}\r\n                                    className={classNames(\r\n                                        postText != '' && postText != undefined ? 'bg-yellow-300 hover:bg-yellow-400' : 'bg-yellow-200 text-gray-400',\r\n                                        'w-64 flex text-md justify-center py-1 font-semibold rounded shadow')}>\r\n                                            <div className='flex justify-center'>\r\n                                    <PlusCircleIcon className='w-6 h-6'/>POST TO EVERYONE\r\n                                    \r\n                                    </div>\r\n                                    </button>\r\n                                    </div>\r\n                                    </div>\r\n                                    {!postsLoaded &&\r\n                                    <div className='flex justify-center'>\r\n                                    <DotsHorizontalIcon className='h-10 w-10'/>\r\n                                    </div>\r\n                                    }\r\n                                    {filteredPosts &&\r\n                                    <div className='w-full'>\r\n                                        <div className='flow-root w-full px-3 py-1'>\r\n                                        <Menu as=\"div\" className={classNames(\"flex-shrink-0 float-right\")}>\r\n                  {({ open }) => (\r\n                    <>\r\n                      <div className='flex justify-center'>\r\n                        <Menu.Button className=\"bg-white justify-center flex rounded-lg flex px-2 py-2 font-semibold text-sm ring-2 ring-gray ring-opacity-20 focus:outline-none\">\r\n                            <p className='text-center'>\r\n                              {selectedFilter}\r\n                            </p>\r\n                            <UpOrDownArrow open={open}/>\r\n                        </Menu.Button>\r\n                      </div>\r\n                      <Transition\r\n                        show={open}\r\n                        as={Fragment}\r\n                        enter=\"transition ease-out duration-75\"\r\n                        enterFrom=\"transform opacity-0 scale-95\"\r\n                        enterTo=\"transform opacity-100 scale-100\"\r\n                        leave=\"transition ease-in duration-75\"\r\n                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                        leaveTo=\"transform opacity-0 scale-95\"\r\n                      >\r\n                        <div className='flex justify-center'>\r\n                          \r\n                        <Menu.Items\r\n                          static\r\n                          className=\"z-50 absolute justify-center h-auto w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-green ring-opacity-5 focus:outline-none\"\r\n                        >\r\n                          <div className='max-h-40'>\r\n                          \r\n                              <Menu.Item>\r\n                            {({ active }) => (\r\n                               <button\r\n                               onClick={()=>{setSelectedFilter('Most Recent')}}\r\n                               className={classNames(\r\n                                 active ? \"bg-gray-100\" : \"\",\r\n                                 \"block w-full text-left px-4 py-2 text-sm text-green\"\r\n                               )}\r\n                             >\r\n                              Most Recent\r\n                             </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                          <Menu.Item>\r\n                            {({ active }) => (\r\n                               <button\r\n                               onClick={()=>{setSelectedFilter('Most Liked')}}\r\n                               className={classNames(\r\n                                 active ? \"bg-gray-100\" : \"\",\r\n                                 \"block w-full text-left px-4 py-2 text-sm text-green\"\r\n                               )}\r\n                             >\r\n                              Most Liked\r\n                             </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                          <Menu.Item>\r\n                            {({ active }) => (\r\n                               <button\r\n                               onClick={()=>{setSelectedFilter('Most Disliked')}}\r\n                               className={classNames(\r\n                                 active ? \"bg-gray-100\" : \"\",\r\n                                 \"block w-full text-left px-4 py-2 text-sm text-green\"\r\n                               )}\r\n                             >\r\n                              Most Disliked\r\n                             </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                          </div>\r\n                        </Menu.Items>\r\n                        </div>\r\n                      </Transition>\r\n                    </>\r\n                  )}\r\n                </Menu>\r\n                </div>\r\n                {filteredPosts.length != 0 ?\r\n                <div className='w-full p-1 lg:p-2 bg-gray-200'>\r\n                                            \r\n                {filteredPosts.map(\r\n                    post => {\r\n                        return(\r\n                            <div className='p-1 lg:p-2'>\r\n                                <Post post={post}/>\r\n                            </div>\r\n                        )\r\n                    }\r\n                )}\r\n                {numberOfPostsShown < posts.length &&\r\n                <div className='flex justify-center py-2'>\r\n                <button className='px-2 py-1 rounded shadow bg-yellow-300 hover:bg-yellow-400 font-semibold flex'\r\n                    onClick={() => {\r\n                        const newNumberOfPostsShown = numberOfPostsShown + 10;\r\n                        setNumberOfPostsShown(newNumberOfPostsShown);\r\n                        updateFilteredPosts(posts, newNumberOfPostsShown);\r\n                    }}\r\n                >\r\n                    <PlusCircleIcon className='h-6 w-6'/>\r\n                    LOAD MORE POSTS</button>\r\n                </div>\r\n                }\r\n                </div>\r\n                    :\r\n                    <p className='text-gray-700 text-center font-bold py-2 w-full'>NONE YET</p>\r\n\r\n                                        }\r\n                                    </div>\r\n                                    }\r\n                                    \r\n                            </div>\r\n                        }\r\n                        {selectedSection == 'Government Announcements' &&\r\n                            <div className={classNames(announcementsLoaded ? '' : 'animate-pulse', 'py-1 lg:py-2')}>\r\n                                {!announcementsLoaded &&\r\n                                    <div className='flex justify-center'>\r\n                                    <DotsHorizontalIcon className='h-10 w-10'/>\r\n                                    </div>\r\n                                }\r\n                                {announcements.map(announcement => {\r\n                                    return(\r\n                                        <div className='px-2 py-1 lg:px-4 lg:py-2'>\r\n                                            <Announcement announcement={announcement}/>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        }\r\n                        {selectedSection == 'Notifications' &&\r\n                            <div className={classNames(notificationsLoaded ? '' : 'animate-pulse')}>\r\n                                {!notificationsLoaded ? \r\n                                <div className='flex justify-center pt-10'>\r\n                                    <DotsHorizontalIcon className='h-10 w-10'/>\r\n                                </div>  :\r\n                        <div className='px-2 lg:px-4'>\r\n                            \r\n                                {notifications != undefined ? \r\n                                <div className='py-1 lg:py-2'>\r\n                                    {notifications.map(notification => {\r\n                                        return(\r\n                                            <div className='py-1 lg:py-2'>\r\n                                            <button className='bg-white rounded shadow p-2 w-full'\r\n                                            onClick={()=>{\r\n                                                        \r\n                                                database.ref(`/posts/${notification.post.postID}`).get().then(postSnapshot => {\r\n                                                    if(postSnapshot.val() != undefined){\r\n                                                        setSelectedPost(postSnapshot.val());\r\n                                                        localStorage.setItem('selectedPost', JSON.stringify(postSnapshot.val()));\r\n                                                        window.location.href='/post'\r\n                                                    }\r\n                                                })\r\n                                            }}>\r\n                                                {notification.action == 'commented' ? \r\n                                                <div className='flex flex-wrap gap-1'>\r\n                                                    <p className='font-bold flex-none flex-wrap'>{notification.actor.name}</p>\r\n                                                    \r\n                                                    <p className='flex-wrap'>commented:</p>\r\n                                                    <p className='text-left flex-wrap font-semibold'>{notification.commentText}</p>\r\n                                                    \r\n                                                    \r\n                                                    </div> :\r\n                                                <div className='flex flex-wrap gap-1'>\r\n                                                    <p className='font-bold flex-none flex-wrap'>{notification.actor.name}</p>\r\n                                                    <p className='flex-none'>{notification.action} your {notification.object}:</p>\r\n                                                    <p className='font-semibold flex justify-start text-left'>{notification.object == 'post' ? notification.post.text : notification.comment.text}</p>\r\n                                                </div>\r\n                                            }\r\n                                                \r\n                                                \r\n                                                <p className='font-semibold text-gray-700 pt-1 text-sm text-left'>{notification.dateAdded} at {notification.timeAdded}</p>\r\n                                                </button>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                :\r\n                                <div className='text-center font-semibold text-lg py-6 text-gray-700'>NO NOTIFICATIONS YET</div>\r\n                            }\r\n                            </div>\r\n                        }\r\n                    </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    function Post({post}){\r\n        return(\r\n            <div className='rounded bg-white shadow'>\r\n                <a\r\n                    onClick={()=>{\r\n                        setSelectedPost(post);\r\n                        localStorage.setItem('selectedPost', JSON.stringify(post));\r\n                    }}\r\n                    href='/post'>\r\n                <div className='flow-root'>\r\n                     <button\r\n                        onClick={(event) => {\r\n                            event.preventDefault();\r\n                            database.ref(`/citizens/${post.poster.citizenID}`).get().then(citizenSnapshot => {\r\n                                localStorage.setItem('selectedCitizen', JSON.stringify(citizenSnapshot.val()));\r\n                                window.location.href = '/profile';\r\n                            })\r\n                        }}\r\n                     className='px-1 m-1 text-gray-700 text-left font-semibold float-left hover:bg-gray-100 rounded'>\r\n                     <p className=''>{post.poster.citizenID == user.citizenID ? 'Me' : post.poster.name}</p>\r\n                     <p className='text-sm'>{censor(post.poster.citizenID)}</p>\r\n                     </button>\r\n                    <div className='float-right p-2'>\r\n                    <p className='text-right text-gray-700 font-semibold uppercase text-sm'>{makeReadableTimeAgo(post)}</p>\r\n                    </div>\r\n                </div>\r\n                    <div className='px-3 py-1'>\r\n                        <p className='text-lg font-semibold py-2 px-2 border-2 border-gray-400 shadow-sm bg-white'>\r\n                            {post.text}\r\n                        </p>\r\n                    </div>\r\n                    <div className={classNames(post.comments != undefined ? 'border-b border-gray-500' : '', 'w-full flow-root pb-2 pt-5 px-2')}>\r\n                        <button className='flex gap-1 float-left hover:bg-gray-200 rounded p-1'\r\n                            \r\n                            onClick={event=>{\r\n                                event.preventDefault();\r\n                                database.ref(`/posts/${post.postID}`).get().then(postSnapshot => {\r\n                                    const post = postSnapshot.val();\r\n                                var liked = post.liked != undefined ? [...Object.values(post.liked)] : [];\r\n                                var disliked = post.disliked != undefined ? [...Object.values(post.disliked)] : [];\r\n                                if(!liked.includes(user.citizenID)){\r\n                                    liked.push(user.citizenID);\r\n                                    if(disliked.includes(user.citizenID)){\r\n                                        disliked.splice(disliked.indexOf(user.citizenID), 1);\r\n                                    }\r\n                                database.ref(`/posts/${post.postID}/liked`).set(\r\n                                    liked\r\n                                );\r\n                                database.ref(`/posts/${post.postID}/disliked`).set(\r\n                                    disliked\r\n                                );\r\n                                updateValues();\r\n                                if(post.poster.citizenID != user.citizenID){\r\n                                database.ref(`/citizens/${post.poster.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                    const notifications = notificationsSnapshot.val() != undefined ? Object.values(notificationsSnapshot.val()) : [];\r\n                                    notifications.push({\r\n                                        dateAdded: `${getDate()}, ${getYear()}`,\r\n                                        timeAdded: getTime(),\r\n                                        action: 'liked',\r\n                                        object: 'post',\r\n                                        actor: {\r\n                                            name: user.name,\r\n                                            citizenID: user.citizenID\r\n                                        },\r\n                                        post: {postID: post.postID,\r\n                                            text: post.text},\r\n                                        seen: false,\r\n                                        ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                    });\r\n                                    database.ref(`/citizens/${post.poster.citizenID}/notifications`).set(notifications);\r\n                                })}\r\n                                } else {\r\n                                    liked.splice(liked.indexOf(user.citizenID), 1);\r\n                                    console.log('liked', liked)\r\n                                    database.ref(`/posts/${post.postID}/liked`).set(liked);\r\n                                    updateValues();\r\n                                }\r\n                                })\r\n                            }}\r\n                        >\r\n                            <ThumbUpIcon className='h-6 w-6' \r\n                                \r\n                                fill={\r\n                                \r\n                                classNames(post.liked != undefined ?\r\n                                Object.values(post.liked).includes(user.citizenID) ? '#facc15' : 'white'\r\n                                : 'white')\r\n                            }/>\r\n                            <p className='font-semibold'>{post.liked != undefined ? Object.values(post.liked).length : 0}</p>\r\n                        </button>\r\n                        <button className='flex gap-1 float-left hover:bg-gray-200 rounded p-1 mx-1'\r\n                            onClick={event=>{\r\n                                event.preventDefault();\r\n                                database.ref(`posts/${post.postID}`).get().then(postSnapshot => {\r\n                                    const post = postSnapshot.val();\r\n                                    var disliked = post.disliked != undefined ? [...Object.values(post.disliked)] : [];\r\n                                var liked = post.liked != undefined ? [...Object.values(post.liked)] : [];\r\n                                if(!disliked.includes(user.citizenID)){\r\n                                    disliked.push(user.citizenID);\r\n                                    if(liked.includes(user.citizenID)){\r\n                                        liked.splice(liked.indexOf(user.citizenID), 1);\r\n                                    }\r\n                                database.ref(`/posts/${post.postID}/disliked`).set(\r\n                                    disliked\r\n                                );\r\n                                database.ref(`/posts/${post.postID}/liked`).set(liked);\r\n                                updateValues();\r\n                                if(post.poster.citizenID != user.citizenID){\r\n                                    database.ref(`/citizens/${post.poster.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                        const notifications = notificationsSnapshot.val() != undefined ? Object.values(notificationsSnapshot.val()) : [];\r\n                                        notifications.push({\r\n                                            dateAdded: `${getDate()}, ${getYear()}`,\r\n                                            timeAdded: getTime(),\r\n                                            action: 'disliked',\r\n                                            object: 'post',\r\n                                            actor: {\r\n                                                name: user.name,\r\n                                                citizenID: user.citizenID\r\n                                            },\r\n                                            post: {postID: post.postID,\r\n                                                text: post.text},\r\n                                            seen: false,\r\n                                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                        });\r\n                                        database.ref(`/citizens/${post.poster.citizenID}/notifications`).set(notifications);\r\n                                    })}\r\n                                } else {\r\n                                    disliked.splice(disliked.indexOf(user.citizenID), 1);\r\n                                    //console.log('liked', disliked)\r\n                                    database.ref(`/posts/${post.postID}/disliked`).set(disliked);\r\n                                    updateValues();\r\n                                }\r\n                                })\r\n                                \r\n                                \r\n                            }}\r\n                        >\r\n                            <ThumbDownIcon className='h-6 w-6' \r\n                                \r\n                                fill={\r\n                                \r\n                                classNames(post.disliked != undefined ?\r\n                                Object.values(post.disliked).includes(user.citizenID) ? '#facc15' : 'white'\r\n                                : 'white')\r\n                            }/>\r\n                            <p className='font-semibold'>{post.disliked != undefined ? Object.values(post.disliked).length : 0}</p>\r\n                        </button>\r\n                        <a href={`/post`} className='p-1 gap-1 float-left rounded flex hover:bg-gray-200' onClick={()=>{\r\n                            setSelectedPost(post);\r\n                            localStorage.setItem('selectedPost', JSON.stringify(post));\r\n                        }}>\r\n                            <ChatIcon className='h-6 w-6' fill='white'/>\r\n                            <p className='font-semibold'>{post.comments != undefined ? Object.values(post.comments).length : 0}</p>\r\n                        </a>\r\n                        {\r\n                            post.poster.citizenID == user.citizenID &&\r\n                            <button className='font-semibold bg-yellow-300 hover:bg-yellow-400 rounded shadow flex float-right'\r\n                                onClick={event=>{\r\n                                    event.preventDefault();\r\n                                    database.ref(`/posts/${post.postID}`).set(null);\r\n                                    updateValues();\r\n                                }}\r\n                                >\r\n                                <div className='px-2 py-1 flex'>\r\n                                <XCircleIcon className='h-6 w-6'/>\r\n                                DELETE\r\n                                </div>\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                    {post.comments != undefined &&\r\n                    <div className='p-2'>\r\n                        {\r\n                            Object.values(post.comments).sort((comment1, comment2) => {\r\n                                return comment2.ssre - comment1.ssre;\r\n                            }).sort((comment1, comment2) => {\r\n                                const comment1Likes = comment1.liked != undefined ? Object.values(comment1.liked).length : 0;\r\n                                const comment2Likes = comment2.liked != undefined ? Object.values(comment2.liked).length : 0;\r\n                                return comment2Likes - comment1Likes;\r\n                            }).slice(0, 2).map(comment => {\r\n                                return (<div className='flex gap-3'>\r\n                                    <div className='font-bold flex-none'>{comment.poster.name}</div>\r\n                                    <p className='truncate'>{comment.text}</p>\r\n                                </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                            Object.values(post.comments).length > 2 &&\r\n                            <div className='text-base font-semibold pt-1'>{Object.values(post.comments).length - 2} more...</div>\r\n                        }\r\n                    </div>}\r\n                    </a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function CriminalCharge({charge}){\r\n    \r\n        return(\r\n            <div className='rounded bg-white shadow text-sm break-words'>\r\n            <div className='w-full'>\r\n            <p className='pl-2 pt-2 font-semibold text-gray-700'>{charge.date} at {charge.time}</p>\r\n            <p className='pl-2 pt-2 font-semibold text-gray-700'>{charge.chargeID} {charge.ssre}</p>\r\n            </div>\r\n            \r\n                {charge.verdict == \"Guilty\" ?\r\n                <div className='grid grid-cols-2 lg:grid-cols-3 p-2 gap-x-4 gap-y-2'>\r\n                <div className='col-span-1'>\r\n                <p className='font-semibold'>Prosecutor</p>\r\n                <p className=''>{charge.prosecutor.name}</p>\r\n                <p className=''>{censor(charge.prosecutor.citizenID)}</p>\r\n            </div>\r\n            <div className='col-span-1'>\r\n                <p className='font-semibold'>Defendant</p>\r\n                <p className=''>{charge.defendant.name}</p>\r\n                <p className=''>{censor(charge.defendant.citizenID)}</p>\r\n            </div>\r\n            <div className='col-span-2 lg:col-span-1'>\r\n                        <p className='font-semibold'>Crime</p>\r\n                        <p className=''>{charge.crime}</p>\r\n                        </div>\r\n            <div className='col-span-2 lg:col-span-1'>\r\n                        <p className='font-semibold'>Verdict</p>\r\n                        <p className='text-red-700'>Guilty</p>\r\n                        </div>\r\n            \r\n\r\n                        \r\n                        <div className='col-span-2 lg:col-span-1'>\r\n                            <p className='font-semibold'>Reason for Verdict</p>\r\n                            <p className=''>{charge.reasonForVerdict}</p>\r\n                        </div>\r\n                        <div className='col-span-2 lg:col-span-1'>\r\n                        <p className='font-semibold'>Sentence</p>\r\n                        <p className=''>{charge.punishment}</p>\r\n                        </div>\r\n            </div> :\r\n            <div className='grid grid-cols-2 lg:grid-cols-3 gap-x-4 gap-y-2 p-2'>\r\n            <div className='col-span-1'>\r\n            <p className='font-semibold'>Prosecutor</p>\r\n            <p className=''>{charge.prosecutor.name}</p>\r\n            <p className=''>{censor(charge.prosecutor.citizenID)}</p>\r\n        </div>\r\n        <div className='col-span-1'>\r\n            <p className='font-semibold'>Defendant</p>\r\n            <p className=''>{charge.defendant.name}</p>\r\n            <p className=''>{censor(charge.defendant.citizenID)}</p>\r\n        </div>\r\n        <div className='col-span-2 lg:col-span-1'>\r\n                    <p className='font-semibold'>Alleged Crime</p>\r\n                    <p className=''>{charge.allegedCrime}</p>\r\n                    </div>\r\n        <div className='col-span-2 lg:col-span-1'>\r\n                    <p className='font-semibold'>Verdict</p>\r\n                    <p className='text-green-700'>Not Guilty</p>\r\n                    </div>\r\n                    <div className='col-span-2'>\r\n                        <p className='font-semibold'>Reason for Verdict</p>\r\n                        <p className=''>{charge.reasonForVerdict}</p>\r\n                    </div>\r\n                   \r\n                    </div>\r\n        \r\n                }\r\n    </div>\r\n        )\r\n    \r\n    }\r\n\r\n    function Announcement({announcement}){\r\n        return(\r\n            <div className='bg-white rounded shadow p-2'>\r\n                <p className='text-gray-700 font-semibold'>{announcement.datePosted} at {announcement.timePosted}</p>\r\n                <div className='p-2'>\r\n                        <p className='text-lg font-semibold py-2 px-2 border-2 border-gray-400 shadow-sm'>\r\n                            {announcement.text}\r\n                        </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default React.memo(Home);","import { LibraryIcon, CheckCircleIcon, CreditCardIcon, PencilAltIcon, PlusCircleIcon, ThumbUpIcon, ThumbDownIcon, ChatIcon, XCircleIcon, DotsHorizontalIcon } from \"@heroicons/react/outline\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Profile = ({user, database, getDate, getYear, getTime}) => {\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    const [selectedCitizen, setSelectedCitizen] = useState(localStorage.getItem('selectedCitizen') != undefined ? JSON.parse(localStorage.getItem('selectedCitizen')) : {});\r\n\r\n    const [selectedSection, setSelectedSection] = useState('Posts');\r\n    const [editingBiography, setEditingBiography] = useState(false);\r\n    const [posts, setPosts] = useState();\r\n    const [postsLoaded, setPostsLoaded] = useState(false);\r\n    const [newBiography, setNewBiography] = useState(selectedCitizen.biography != undefined ? selectedCitizen.biography : undefined);\r\n    \r\n    useEffect(updateValues, []);\r\n    \r\n    function censor(citizenID){\r\n        return(user.citizenID != citizenID ? `CI-***${citizenID.substring(6, 8)}` : citizenID);\r\n    }\r\n\r\n    function updateValues(){\r\n        database.ref(`/citizens/${selectedCitizen.citizenID}`).get().then(citizenSnapshot => {\r\n            setSelectedCitizen(citizenSnapshot.val());\r\n            localStorage.setItem('selectedCitizen', JSON.stringify(citizenSnapshot.val()));\r\n            setNewBiography(citizenSnapshot.val().biography);\r\n            database.ref('/posts').get().then(postsSnapshot => {\r\n                setPosts(Object.values(postsSnapshot.val()).filter(post => {\r\n                    return post.poster.citizenID == selectedCitizen.citizenID;\r\n                }).sort((post1, post2) => {\r\n                    return post2.ssre - post1.ssre;\r\n                }));\r\n                setPostsLoaded(true);\r\n            })\r\n        })\r\n    }\r\n\r\n    function makeReadableTimeAgo(post){\r\n        const secondsSincePost = Math.round(((new Date()).getTime()/1000)-rushingtonEpoch) - post.ssre;\r\n        if(secondsSincePost > 3455999){\r\n            return(`${post.datePosted}`);\r\n        } else if(secondsSincePost > 345599){\r\n            const yearsAgo = toFixed(secondsSincePost/345600, 0);\r\n            return(`${yearsAgo} Rushington ${yearsAgo != 1 ? 'years' : 'year'} ago`);\r\n        } else if(secondsSincePost > 28799){\r\n            const monthsAgo = toFixed(secondsSincePost/28800, 0);\r\n            return(`${monthsAgo} Rushington ${monthsAgo != 1 ? 'months' : 'month'} ago`);\r\n        } else if(secondsSincePost > 1199){\r\n            const daysAgo = toFixed(Math.round(((new Date()).getTime()/1000)-rushingtonEpoch)/1200, 0) - \r\n                toFixed(post.ssre/1200, 0);\r\n            return(`${daysAgo} Rushington ${daysAgo != 1 ? 'days' : 'day'} ago`);\r\n        } else if(secondsSincePost > 59){\r\n            const minutesSincePost = toFixed(secondsSincePost/60, 0);\r\n            return(`${minutesSincePost} ${minutesSincePost != 1 ? 'minutes' : 'minute'} ago`);\r\n        } else {\r\n            return(`${secondsSincePost} ${secondsSincePost != 1 ? 'seconds' : 'second'} ago`);\r\n        }\r\n    }\r\n\r\n    function toFixed(num, fixed) {\r\n        var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\r\n        return num.toString().match(re)[0];\r\n    }\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n    \r\n    return(\r\n        <div className='bg-white rounded lg:px-20'>\r\n            <div className='py-2'>\r\n            <div className='flex justify-center text-3xl font-bold'>\r\n                {selectedCitizen.name}\r\n            </div>\r\n            <div className='flex justify-center text-lg'>\r\n                {censor(selectedCitizen.citizenID)}\r\n            </div>\r\n            </div>\r\n            {editingBiography ?\r\n            <div className='w-full'>\r\n            <textarea className='rounded resize-none border-2 text-center border-gray-500 h-20 w-full p-2 focus:outline-none focus:ring-1 focus:ring-gray-700 focus:border-gray-700'\r\n                onChange={\r\n                    event => {\r\n                        setNewBiography(event.target.value);\r\n                    }\r\n                }\r\n                placeholder={classNames(selectedCitizen.biography != undefined ? 'Edit biography...' : 'Add biography...')}\r\n                value={newBiography}\r\n            >\r\n\r\n            </textarea>\r\n            \r\n            </div>\r\n             :\r\n             null\r\n            }\r\n            <div className='border-b border-gray-500 lg:mx-2 pb-2'>\r\n            {selectedCitizen.biography != undefined && !editingBiography &&\r\n            <div className='flex justify-center'>\r\n            <p className='p-2 border-gray-500 border-2 font-semibold text-center shadow'>{selectedCitizen.biography}</p>\r\n            </div>\r\n            }\r\n            \r\n            {selectedCitizen.citizenID == user.citizenID ?\r\n                editingBiography ?\r\n                <div className='flex gap-2 justify-center'>\r\n                    <button className='bg-yellow-300 hover:bg-yellow-400 font-semibold p-2 flex justify-center rounded my-1 text-sm shadow'\r\n                onClick={() => {\r\n                    setEditingBiography(false);\r\n                }}\r\n            >\r\n                <XCircleIcon className='h-5 w-5'/>\r\n                CANCEL</button>\r\n            <button className={classNames(newBiography != undefined && newBiography != '' ? 'bg-yellow-300 hover:bg-yellow-400' :\r\n                'bg-yellow-200 text-gray-400', 'font-semibold p-2 flex justify-center rounded my-1 text-sm shadow')}\r\n                onClick={() => {\r\n                    if(newBiography != undefined && newBiography != ''){\r\n                        database.ref(`/citizens/${user.citizenID}/biography`).set(newBiography);\r\n                        setEditingBiography(false);\r\n                        updateValues();\r\n                    }\r\n                }}\r\n            >\r\n                <CheckCircleIcon className='h-5 w-5'/>\r\n                SAVE</button>\r\n                </div> :\r\n            selectedCitizen.biography == undefined ?\r\n            <div className='flex justify-center'>\r\n            <button className='bg-yellow-300 hover:bg-yellow-400 shadow text-sm font-semibold p-2 flex justify-center rounded my-1'\r\n                onClick={() => {\r\n                    setEditingBiography(true);\r\n                }}\r\n            >\r\n                <PlusCircleIcon className='h-5 w-5'/>\r\n                ADD BIO</button></div> : \r\n                <div className='flex justify-center my-2'>\r\n                    <button className='bg-yellow-300 hover:bg-yellow-400 text-sm font-semibold flex rounded p-2 shadow justify-center'\r\n                        onClick={() => {\r\n                            setEditingBiography(true);\r\n                        }}\r\n                    >\r\n                        <PencilAltIcon className='h-5 w-5'/>\r\n                        EDIT BIO\r\n                    </button></div> : null\r\n        }\r\n            \r\n        </div>\r\n        \r\n            \r\n            \r\n            <div className='pt-8 lg:mx-2 border-b border-gray-500'>\r\n                <button className={classNames(\r\n                    selectedSection == 'Posts' ? 'border-b-4 border-yellow-300 font-bold hover:bg-gray-100 rounded-t' : 'text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded',\r\n                    'w-1/2 py-1')}\r\n                    onClick={() => {\r\n                        setSelectedSection('Posts');\r\n                    }}\r\n                    >POSTS</button>\r\n                <button className={classNames(\r\n                    selectedSection == 'File' ? 'border-b-4 border-yellow-300 font-bold hover:bg-gray-100 rounded-t' : 'text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded',\r\n                    'w-1/2 py-1')}\r\n                    onClick={() => {\r\n                        setSelectedSection('File');\r\n                    }}\r\n                    >FILE</button>\r\n\r\n            </div>\r\n            <div>\r\n                {selectedSection == 'File' &&\r\n                    <div className='pt-2'>\r\n                                        <div className='text-lg'>\r\n                                            \r\n                                            <div className='grid grid-cols-3 lg:m-2 border-2 border-gray-400'>\r\n                                            <div className='col-span-1 p-2'>\r\n                                                <p className='font-semibold'>Name</p>\r\n                                                <p>{selectedCitizen.name}</p>\r\n                                            </div>\r\n                                            <div className='col-span-1 p-2'>\r\n                                                <p className='font-semibold'>Citizen ID</p>\r\n                                                <p>{censor(selectedCitizen.citizenID)}</p>\r\n                                            </div>\r\n                                            <div className='col-span-1 p-2'>\r\n                                                <p className='font-semibold'>Date Added</p>\r\n                                                <p>{selectedCitizen.dateAdded}</p>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='py-2'>\r\n                                            <div className='grid grid-cols-2'>\r\n                                            <div className='col-span-2 py-2 lg:px-2'>\r\n                                                \r\n                                                <div className='bg-white'>\r\n                                                    \r\n                                                    <div className='w-full flow-root p-2 bg-gray-200'>\r\n                                                    <p className='font-semibold float-left'>BANK</p>\r\n                                                    <div className='float-right flex gap-1'>\r\n                                                        <a \r\n                                                            href='/bank'\r\n                                                            className='bg-yellow-300 py-1 px-2 flex text-sm hover:bg-yellow-400 font-semibold rounded shadow'>\r\n                                                            <LibraryIcon className='w-5 h-5'/>\r\n                                                            GO TO BANK</a>\r\n                                                    </div>\r\n                                                    </div>\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                        <p className='float-left font-semibold text-gray-700'>Balance</p>\r\n                                                        <p className='float-right'>{selectedCitizen.meldas} [M]</p>\r\n                                                    </div>\r\n                                                    <div className='p-2 border-b-2 border-r-2 border-l-2 border-gray-400'>\r\n                                                        <p className='font-semibold text-gray-700'>Transaction History</p>\r\n                                                        {selectedCitizen.transfers != undefined &&\r\n                                                        <div className='max-h-96 overflow-y-scroll bg-gray-100 md:scrollbar-show sm:scrollbar-hide'>\r\n                                                            \r\n                                                            \r\n                                                            \r\n                                                        {Object.values(selectedCitizen.transfers).sort((transfer1, transfer2)=>{\r\n                                                            return(transfer2.ssre - transfer1.ssre);\r\n                                                        }).map(transfer => {\r\n                                                            return(\r\n                                                                <div className='p-1'>\r\n                                                                <Transfer transfer={transfer}/>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                        \r\n                                                        </div>}\r\n                                                        {selectedCitizen.transfers == undefined &&\r\n                                                        <div className=''>None yet</div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            <div className='col-span-2 py-2 lg:px-2'>\r\n                                                \r\n                                                <div className='bg-white'>\r\n                                                <div className='p-2 flow-root w-full bg-gray-200'>\r\n                                                <p className='font-semibold float-left'>CRIMINAL CHARGES</p>\r\n                                                        \r\n                                                    </div>\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                        <p className='float-left font-semibold text-gray-700'>Total</p>\r\n                                                        <p className='float-right'>{selectedCitizen.charges ? Object.values(selectedCitizen.charges).length : 0}</p>\r\n                                                    </div>\r\n                                                    <div className='p-2 border-b-2 border-r-2 border-l-2 border-gray-400'>\r\n                                                        {selectedCitizen.charges != undefined &&\r\n                                                        <div className='max-h-96 overflow-y-scroll bg-gray-100'>\r\n                                                            \r\n                                                            \r\n                                                            \r\n                                                        {Object.values(selectedCitizen.charges).sort((charge1, charge2)=>{\r\n                                                            return(charge2.ssre - charge1.ssre);\r\n                                                        }).map(charge => {\r\n                                                            return(\r\n                                                                <div className='p-1'>\r\n                                                                <CriminalCharge charge={charge}/>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                        \r\n                                                        </div>}\r\n                                                        {selectedCitizen.charges == undefined &&\r\n                                                        <div className=''>None yet</div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                            \r\n                                            </div>\r\n                                            {/* <div className='col-span-2 py-2 lg:px-2'>\r\n                                                \r\n                                                <div className='bg-white'>\r\n                                                <div className='p-2 flow-root w-full bg-gray-200'>\r\n                                                <p className='font-semibold float-left'>PROPERTIES</p>\r\n                                                        \r\n                                                    </div>\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                        <p className='float-left font-semibold text-gray-700'>Total</p>\r\n                                                        <p className='float-right'>{selectedCitizen.properties ? Object.values(selectedCitizen.properties).length : 0}</p>\r\n                                                    </div>\r\n                                                    <div className='p-2 border-b-2 border-r-2 border-l-2 border-gray-400'>\r\n                                                        {selectedCitizen.properties != undefined &&\r\n                                                        <div className='max-h-96 overflow-y-scroll bg-gray-100'>\r\n                                                            \r\n                                                            \r\n                                                            \r\n                                                        {Object.values(selectedCitizen.properties).sort((property1, property2)=>{\r\n                                                            return(property2.ssre - property1.ssre);\r\n                                                        }).map(property => {\r\n                                                            return(\r\n                                                                <div className='w-full text-left group'\r\n                                                                    onClick={()=>{\r\n                                                                        /* setSelectedProperty(findPropertyByID(property.propertyID));\r\n                                                                        setSelectedSection('Properties');\r\n                                                                    }}\r\n                                                                >\r\n                                                                <Property property={property}/>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                        \r\n                                                        </div>}\r\n                                                        {selectedCitizen.properties == undefined &&\r\n                                                        <div className=''>None yet</div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                            </div> */}\r\n                                            <div className='col-span-2 py-2 lg:px-2'>\r\n                                                \r\n                                                <div className='bg-white'>\r\n                                                <div className='w-full flow-root p-2 bg-gray-200'>\r\n                                                    <p className='font-semibold float-left'>LICENSES</p>\r\n                                                    <div className='float-right flex gap-1'>\r\n                                                        <a \r\n                                                            href='/licenses'\r\n                                                            className='bg-yellow-300 py-1 px-2 flex text-sm hover:bg-yellow-400 font-semibold rounded shadow'>\r\n                                                            <CreditCardIcon className='w-5 h-5'/>\r\n                                                            GO TO LICENSES</a>\r\n                                                    </div>\r\n                                                    </div>\r\n                                                    <div className='flow-root p-2 border-2 border-gray-400'>\r\n                                                        <p className='float-left font-semibold text-gray-700'>Total</p>\r\n                                                        <p className='float-right'>{selectedCitizen.licenses ? Object.values(selectedCitizen.licenses).length : 0}</p>\r\n                                                    </div>\r\n                                                    <div className='p-2 border-b-2 border-r-2 border-l-2 border-gray-400'>\r\n                                                        {selectedCitizen.licenses != undefined &&\r\n                                                        <div className='max-h-96 overflow-y-scroll bg-gray-100'>\r\n                                                            \r\n                                                            \r\n                                                            \r\n                                                        {Object.values(selectedCitizen.licenses).sort((license1, license2)=>{\r\n                                                            return(license1.title.localeCompare(license2.title));\r\n                                                        }).map(license => {\r\n                                                            return(\r\n                                                                <div className='w-full text-left group'\r\n                                                                    onClick={()=>{\r\n                                                                        /* setSelectedProperty(findPropertyByID(property.propertyID));\r\n                                                                        setSelectedSection('Properties'); */\r\n                                                                    }}\r\n                                                                >\r\n                                                                <License license={license}/>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                        \r\n                                                        </div>}\r\n                                                        {selectedCitizen.licenses == undefined &&\r\n                                                        <div className=''>None yet</div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>}\r\n                                        {selectedSection == 'Posts' &&\r\n                                        <div className='lg:px-2'>\r\n                                            {posts != undefined && posts.length != 0 &&\r\n                                                <div className='bg-gray-200 p-1 lg:p-2 rounded-b'>\r\n                                                    {posts.map(post => {\r\n                                                        return(\r\n                                                            <div className='p-1 lg:p-2'>\r\n                                                            <Post post={post}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n                                                </div>\r\n                                            }\r\n                                            {posts != undefined && posts.length == 0 &&\r\n                                                <div className='bg-gray-200 p-1 lg:p-2 rounded-b'>\r\n                                                    <div className='p-1 lg:p-2'>\r\n                                                        <p className='text-gray-700 font-semibold text-center'>NONE YET</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                            {!postsLoaded &&\r\n                                                <div className='bg-gray-200 p-1 lg:p-2 rounded-b animate-pulse flex justify-center'>\r\n                                                    <DotsHorizontalIcon className='h-10 w-10'/>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n    )\r\n\r\n    function Post({post}){\r\n        return(\r\n            <div className='rounded bg-white shadow'>\r\n                <a\r\n                    onClick={()=>{\r\n                        localStorage.setItem('selectedPost', JSON.stringify(post));\r\n                    }}\r\n                    href='/post'>\r\n                <div className='flow-root'>\r\n                     <button\r\n                        onClick={(event) => {\r\n                            event.preventDefault();\r\n                            database.ref(`/citizens/${post.poster.citizenID}`).get().then(citizenSnapshot => {\r\n                                localStorage.setItem('selectedCitizen', JSON.stringify(citizenSnapshot.val()));\r\n                                window.location.href = '/profile';\r\n                            })\r\n                        }}\r\n                     className='p-1 m-1 text-gray-700 text-left font-semibold float-left hover:bg-gray-100 rounded'>\r\n                     <p className=''>{post.poster.citizenID == user.citizenID ? 'Me' : post.poster.name}</p>\r\n                     <p className='text-sm'>{censor(post.poster.citizenID)}</p>\r\n                     </button>\r\n                     <div className='float-right p-2'>\r\n                    <p className='text-right text-gray-700 font-semibold uppercase text-sm'>{makeReadableTimeAgo(post)}</p>\r\n                    </div>\r\n\r\n                </div>\r\n                    <div className='px-3 py-1'>\r\n                        <p className='text-lg font-semibold py-2 px-2 border-2 border-gray-400 shadow-sm bg-white'>\r\n                            {post.text}\r\n                        </p>\r\n                    </div>\r\n                    <div className={classNames(post.comments != undefined ? 'border-b border-gray-500' : '', 'w-full flow-root pb-2 pt-5 px-2')}>\r\n                        <button className='flex gap-1 float-left hover:bg-gray-200 rounded p-1'\r\n                            \r\n                            onClick={event=>{\r\n                                event.preventDefault();\r\n                                database.ref(`/posts/${post.postID}`).get().then(postSnapshot => {\r\n                                    const post = postSnapshot.val();\r\n                                var liked = post.liked != undefined ? [...Object.values(post.liked)] : [];\r\n                                var disliked = post.disliked != undefined ? [...Object.values(post.disliked)] : [];\r\n                                if(!liked.includes(user.citizenID)){\r\n                                    liked.push(user.citizenID);\r\n                                    if(disliked.includes(user.citizenID)){\r\n                                        disliked.splice(disliked.indexOf(user.citizenID), 1);\r\n                                    }\r\n                                database.ref(`/posts/${post.postID}/liked`).set(\r\n                                    liked\r\n                                );\r\n                                database.ref(`/posts/${post.postID}/disliked`).set(\r\n                                    disliked\r\n                                );\r\n                                updateValues();\r\n                                if(post.poster.citizenID != user.citizenID){\r\n                                database.ref(`/citizens/${post.poster.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                    const notifications = notificationsSnapshot.val() != undefined ? Object.values(notificationsSnapshot.val()) : [];\r\n                                    notifications.push({\r\n                                        dateAdded: `${getDate()}, ${getYear()}`,\r\n                                        timeAdded: getTime(),\r\n                                        action: 'liked',\r\n                                        actor: {\r\n                                            name: user.name,\r\n                                            citizenID: user.citizenID\r\n                                        },\r\n                                        post: {postID: post.postID,\r\n                                            text: post.text},\r\n                                        seen: false,\r\n                                        ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                    });\r\n                                    database.ref(`/citizens/${post.poster.citizenID}/notifications`).set(notifications);\r\n                                })}\r\n                                } else {\r\n                                    liked.splice(liked.indexOf(user.citizenID), 1);\r\n                                    console.log('liked', liked)\r\n                                    database.ref(`/posts/${post.postID}/liked`).set(liked);\r\n                                    updateValues();\r\n                                }\r\n                                })\r\n                            }}\r\n                        >\r\n                            <ThumbUpIcon className='h-6 w-6' \r\n                                \r\n                                fill={\r\n                                \r\n                                classNames(post.liked != undefined ?\r\n                                Object.values(post.liked).includes(user.citizenID) ? '#facc15' : 'white'\r\n                                : 'white')\r\n                            }/>\r\n                            <p className='font-semibold'>{post.liked != undefined ? Object.values(post.liked).length : 0}</p>\r\n                        </button>\r\n                        <button className='flex gap-1 float-left hover:bg-gray-200 rounded p-1 mx-1'\r\n                            onClick={event=>{\r\n                                event.preventDefault();\r\n                                database.ref(`posts/${post.postID}`).get().then(postSnapshot => {\r\n                                    const post = postSnapshot.val();\r\n                                    var disliked = post.disliked != undefined ? [...Object.values(post.disliked)] : [];\r\n                                var liked = post.liked != undefined ? [...Object.values(post.liked)] : [];\r\n                                if(!disliked.includes(user.citizenID)){\r\n                                    disliked.push(user.citizenID);\r\n                                    if(liked.includes(user.citizenID)){\r\n                                        liked.splice(liked.indexOf(user.citizenID), 1);\r\n                                    }\r\n                                database.ref(`/posts/${post.postID}/disliked`).set(\r\n                                    disliked\r\n                                );\r\n                                database.ref(`/posts/${post.postID}/liked`).set(liked);\r\n                                updateValues();\r\n                                if(post.poster.citizenID != user.citizenID){\r\n                                    database.ref(`/citizens/${post.poster.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                        const notifications = notificationsSnapshot.val() != undefined ? Object.values(notificationsSnapshot.val()) : [];\r\n                                        notifications.push({\r\n                                            dateAdded: `${getDate()}, ${getYear()}`,\r\n                                            timeAdded: getTime(),\r\n                                            action: 'disliked',\r\n                                            actor: {\r\n                                                name: user.name,\r\n                                                citizenID: user.citizenID\r\n                                            },\r\n                                            post: {postID: post.postID,\r\n                                                text: post.text},\r\n                                            seen: false,\r\n                                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                        });\r\n                                        database.ref(`/citizens/${post.poster.citizenID}/notifications`).set(notifications);\r\n                                    })}\r\n                                } else {\r\n                                    disliked.splice(disliked.indexOf(user.citizenID), 1);\r\n                                    //console.log('liked', disliked)\r\n                                    database.ref(`/posts/${post.postID}/disliked`).set(disliked);\r\n                                    updateValues();\r\n                                }\r\n                                })\r\n                                \r\n                                \r\n                            }}\r\n                        >\r\n                            <ThumbDownIcon className='h-6 w-6' \r\n                                \r\n                                fill={\r\n                                \r\n                                classNames(post.disliked != undefined ?\r\n                                Object.values(post.disliked).includes(user.citizenID) ? '#facc15' : 'white'\r\n                                : 'white')\r\n                            }/>\r\n                            <p className='font-semibold'>{post.disliked != undefined ? Object.values(post.disliked).length : 0}</p>\r\n                        </button>\r\n                        <a href={`/post`} className='p-1 gap-1 float-left rounded flex hover:bg-gray-200' onClick={()=>{\r\n                            localStorage.setItem('selectedPost', JSON.stringify(post));\r\n                        }}>\r\n                            <ChatIcon className='h-6 w-6' fill='white'/>\r\n                            <p className='font-semibold'>{post.comments != undefined ? Object.values(post.comments).length : 0}</p>\r\n                        </a>\r\n                        {\r\n                            post.poster.citizenID == user.citizenID &&\r\n                            <button className='font-semibold bg-yellow-300 hover:bg-yellow-400 rounded shadow flex float-right'\r\n                                onClick={event=>{\r\n                                    event.preventDefault();\r\n                                    database.ref(`/posts/${post.postID}`).set(null);\r\n                                    updateValues();\r\n                                }}\r\n                                >\r\n                                <div className='px-2 py-1 flex'>\r\n                                <XCircleIcon className='h-6 w-6'/>\r\n                                DELETE\r\n                                </div>\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                    {post.comments != undefined &&\r\n                    <div className='p-2'>\r\n                        {\r\n                            Object.values(post.comments).sort((comment1, comment2) => {\r\n                                return comment2.ssre - comment1.ssre;\r\n                            }).slice(0, 2).map(comment => {\r\n                                return (<div className='flex gap-3'>\r\n                                    <div className='font-bold flex-none'>{comment.poster.name}</div>\r\n                                    <p className='truncate'>{comment.text}</p>\r\n                                </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                            Object.values(post.comments).length > 2 &&\r\n                            <div className='text-base font-semibold pt-1'>{Object.values(post.comments).length - 2} more...</div>\r\n                        }\r\n                    </div>}\r\n                    </a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function Transfer({transfer}){\r\n    \r\n        return(\r\n            <div className='rounded bg-white text-sm shadow'>\r\n                <div className='w-full'>\r\n                <p className='pl-2 pt-2 font-semibold text-gray-700'>{transfer.date} at {transfer.time}</p>\r\n                <p className='pl-2 pt-2 font-semibold text-gray-700'>{transfer.transferID} {transfer.ssre}</p>\r\n                </div>\r\n                <div className='grid grid-cols-4 gap-y-2 lg:gap-3 p-2'>\r\n                {transfer.type == \"Incoming\" ?\r\n                <div className='col-span-4 lg:col-span-2 grid grid-cols-2'>\r\n                            <div className='col-span-1'>\r\n                                <p className='font-semibold'>Amount</p>\r\n                                <p className='text-green-700'>+{transfer.amount} [M]</p>\r\n                            </div>\r\n                            <div className='col-span-1'>\r\n                                <p className='font-semibold'>Sender</p>\r\n                                <p className=''>{transfer.senderName}</p>\r\n                            </div>\r\n                            </div>\r\n                :    \r\n                <div className='col-span-4 lg:col-span-2 grid grid-cols-2'>\r\n                <div className='col-span-1'>\r\n                    <p className='font-semibold'>Amount</p>\r\n                    <p className='text-red-700'>-{transfer.amount} [M]</p>\r\n                </div>\r\n                <div className='col-span-1'>\r\n                    <p className='font-semibold'>Receiver</p>\r\n                    <p className=''>{transfer.receiverName}</p>\r\n                </div>\r\n                </div>\r\n                        }\r\n                <div className='col-span-2 lg:col-span-1'>\r\n                                <p className='font-semibold'>Reason</p>\r\n                                <p className=''>{transfer.reason}</p>\r\n                            </div>\r\n                <div className='col-span-2 lg:col-span-1'>\r\n                                <p className='font-semibold'>Resulting Balance</p>\r\n                                <p className=''>{transfer.resultingBalance} [M]</p>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        )\r\n    \r\n}\r\nfunction CriminalCharge({charge}){\r\n    \r\n    return(\r\n        <div className='rounded bg-white shadow text-sm break-words'>\r\n        <div className='w-full'>\r\n        <p className='pl-2 pt-2 font-semibold text-gray-700'>{charge.date} at {charge.time}</p>\r\n        <p className='pl-2 pt-2 font-semibold text-gray-700'>{charge.chargeID} {charge.ssre}</p>\r\n        </div>\r\n        \r\n            {charge.verdict == \"Guilty\" ?\r\n            <div className='grid grid-cols-2 lg:grid-cols-3 p-2 gap-x-4 gap-y-2'>\r\n            <div className='col-span-1'>\r\n            <p className='font-semibold'>Prosecutor</p>\r\n            <p className=''>{charge.prosecutor.name}</p>\r\n            <p className=''>{censor(charge.prosecutor.citizenID)}</p>\r\n        </div>\r\n        <div className='col-span-1'>\r\n            <p className='font-semibold'>Defendant</p>\r\n            <p className=''>{charge.defendant.name}</p>\r\n            <p className=''>{censor(charge.defendant.citizenID)}</p>\r\n        </div>\r\n        <div className='col-span-2 lg:col-span-1'>\r\n                    <p className='font-semibold'>Crime</p>\r\n                    <p className=''>{charge.crime}</p>\r\n                    </div>\r\n        <div className='col-span-2 lg:col-span-1'>\r\n                    <p className='font-semibold'>Verdict</p>\r\n                    <p className='text-red-700'>Guilty</p>\r\n                    </div>\r\n        \r\n\r\n                    \r\n                    <div className='col-span-2 lg:col-span-1'>\r\n                        <p className='font-semibold'>Reason for Verdict</p>\r\n                        <p className=''>{charge.reasonForVerdict}</p>\r\n                    </div>\r\n                    <div className='col-span-2 lg:col-span-1'>\r\n                    <p className='font-semibold'>Sentence</p>\r\n                    <p className=''>{charge.punishment}</p>\r\n                    </div>\r\n        </div> :\r\n        <div className='grid grid-cols-2 lg:grid-cols-3 gap-x-4 gap-y-2 p-2'>\r\n        <div className='col-span-1'>\r\n        <p className='font-semibold'>Prosecutor</p>\r\n        <p className=''>{charge.prosecutor.name}</p>\r\n        <p className=''>{censor(charge.prosecutor.citizenID)}</p>\r\n    </div>\r\n    <div className='col-span-1'>\r\n        <p className='font-semibold'>Defendant</p>\r\n        <p className=''>{charge.defendant.name}</p>\r\n        <p className=''>{censor(charge.defendant.citizenID)}</p>\r\n    </div>\r\n    <div className='col-span-2 lg:col-span-1'>\r\n                <p className='font-semibold'>Alleged Crime</p>\r\n                <p className=''>{charge.allegedCrime}</p>\r\n                </div>\r\n    <div className='col-span-2 lg:col-span-1'>\r\n                <p className='font-semibold'>Verdict</p>\r\n                <p className='text-green-700'>Not Guilty</p>\r\n                </div>\r\n                <div className='col-span-2'>\r\n                    <p className='font-semibold'>Reason for Verdict</p>\r\n                    <p className=''>{charge.reasonForVerdict}</p>\r\n                </div>\r\n               \r\n                </div>\r\n    \r\n            }\r\n</div>\r\n    )\r\n\r\n}\r\n\r\n    function Property({property}){\r\n        return(\r\n            <div className={classNames('m-2')}>\r\n                                            <div className='w-full bg-white border-2 shadow border-gray-500 grid grid-cols-3'>\r\n                                                <div className='col-span-3 p-2 flow-root'>\r\n                                                    <div className='float-left'>\r\n                                                    <p className={classNames('text-xl', 'font-bold')}>{property.address}</p>\r\n                                                    <p className={classNames('text-sm', 'uppercase font-semibold')}>{property.type}</p>\r\n                                                    </div>\r\n                                                    {/* <div className='float-right'>\r\n                                                        <button className='rounded flex p-2 text-sm uppercase shadow font-semibold bg-yellow-300 hover:bg-yellow-400'>\r\n                                                            <PencilIcon className='h-5 w-5'/>\r\n                                                            Edit Property\r\n                                                        </button>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                                \r\n{/*                                                 <div className='col-span-3 px-2 uppercase font-bold'>Information</div>\r\n */}                                                \r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Property ID</p>\r\n                                                    <p>{property.propertyID}</p>\r\n                                                </div>\r\n                                                \r\n                                                {/* <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Size</p>\r\n                                                    <p>{property.size} Blocks</p>\r\n                                                </div> */}\r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Date Property Added</p>\r\n                                                    <p>{property.dateAdded}</p>\r\n                                                </div>\r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Date Property Given</p>\r\n                                                    <p>{property.owner.dateAdded}</p>\r\n                                                </div>\r\n                                                {property.type == 'Business' &&\r\n                                                <div className='col-span-3 p-2'>\r\n                                                    <div>\r\n                                                        <p className='font-semibold'>Business Name</p>\r\n                                                        <p>{property.business != undefined ? property.business.name : 'None yet'}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className='font-semibold pt-3'>Business Description</p>\r\n                                                        <p>{property.business != undefined ? property.business.description : 'None yet'}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                }\r\n                                            </div>\r\n                                            </div>\r\n        )\r\n    }\r\n\r\n    function License({license}){\r\n        return(\r\n            <div className='border-2 border-gray-500 bg-white shadow p-2 m-2'>\r\n                <div className='flow-root'>\r\n                    <div className='float-left'>\r\n                        <p className='text-lg font-semibold'>{license.title}</p>\r\n                        <p className='font-semibold text-gray-700'>{license.licenseID}</p>\r\n                    </div>\r\n                    <p className='float-right font-bold text-xl'>{license.price} [M]</p>\r\n                </div>\r\n                <div className='flow-root'>\r\n                    <p className='pt-2 pr-2 font-semibold float-left'>{license.permissions}</p>\r\n                    \r\n                    <div className='flex float-right'>\r\n                        <CheckCircleIcon className='w-7 h-7'/>\r\n                    <p className='float-right font-bold px-1 text-lg'>Purchased {(selectedCitizen.licenses[license.licenseID]).datePurchased}</p>\r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Profile;","import { useState, useEffect } from \"react\";\r\nimport { CheckCircleIcon } from \"@heroicons/react/outline\";\r\n\r\nconst Licenses = ({user, setUser, database, getDate, getYear, getTime}) => {\r\n\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    const [licenses, setLicenses] = useState([]);\r\n\r\n    useEffect(setValues, []);\r\n\r\n    function setValues(){\r\n        database.ref('/licenses').get().then(licensesSnapshot => {\r\n            if(licensesSnapshot.val() != undefined){\r\n                setLicenses(Object.values(licensesSnapshot.val()));\r\n            }\r\n        });\r\n        database.ref(`/citizens/${user.citizenID}`).get().then(userSnapshot => {\r\n            console.log('user retrieved', userSnapshot.val());\r\n            if(userSnapshot.val() != undefined){\r\n                setUser(userSnapshot.val());\r\n            }\r\n        })\r\n    }\r\n\r\n    function onClickBuyLicense(license){\r\n        const addedLicense = JSON.parse(JSON.stringify(license));\r\n        addedLicense.datePurchased = `${getDate()}, ${getYear()}`\r\n        if(Number(user.meldas) >= Number(license.price)){\r\n            database.ref(`/citizens/${user.citizenID}/licenses/${license.licenseID}`).set(addedLicense);\r\n            database.ref(`/licenses/${license.licenseID}/owners/${user.citizenID}`).set({\r\n                citizenID: user.citizenID,\r\n                datePurchased: `${getDate()}, ${getYear()}`,\r\n            })\r\n            const userResultingBalance = Number(user.meldas) - Number(license.price);\r\n            const transferID = generateID('MT');\r\n            database.ref(`/government/meldas`).get().then(meldasSnapshot => {\r\n                const governmentMeldas = Number(meldasSnapshot.val());\r\n                const governmentResultingBalance = Number(governmentMeldas) + Number(license.price);\r\n                database.ref('/government/meldas').set(governmentResultingBalance);\r\n                database.ref(`/citizens/${user.citizenID}/meldas`).set(Number(userResultingBalance));\r\n            database.ref(`/citizens/${user.citizenID}/transfers/${transferID}`).set(\r\n                {\r\n                    transferID: transferID,\r\n                    date: `${getDate()}, ${getYear()}`,\r\n                    time: getTime(),\r\n                    ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                    amount: Number(license.price),\r\n                    receiverName: 'Rushington Government',\r\n                    type: \"Outgoing\",\r\n                    reason: `Purchased ${license.title} ${license.licenseID}`,\r\n                    resultingBalance: userResultingBalance\r\n                }\r\n            );\r\n            database.ref(`/government/transfers/${transferID}`).set(\r\n                {\r\n                    transferID: transferID,\r\n                    date: `${getDate()}, ${getYear()}`,\r\n                    time: getTime(),\r\n                    ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                    amount: Number(license.price),\r\n                    senderName: user.name,\r\n                    senderCitizenID: user.citizenID,\r\n                    type: \"Incoming\",\r\n                    reason: `Purchased ${license.title} ${license.licenseID}`,\r\n                    resultingBalance: governmentResultingBalance\r\n                }\r\n            );\r\n            setValues();\r\n            }\r\n            )\r\n        }\r\n    }\r\n\r\n    function generateID(prefix){\r\n        var id = `${prefix}-`;\r\n        for(var i = 0; i < 5; i++){\r\n            id = id + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(id);\r\n    }\r\n\r\n    function userOwnsLicense(license){\r\n        userOwnsLicense = false;\r\n        if(user.licenses != undefined){\r\n            Object.values(user.licenses).forEach(userLicense => {\r\n                if(userLicense.licenseID == license.licenseID){\r\n                    userOwnsLicense = true;\r\n                }\r\n            });\r\n            return userOwnsLicense;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    return(\r\n        <div className='mx-1 lg:mx-10 my-1 lg:my-5'>\r\n            <div className='py-2 w-full flow-root'>\r\n                <p className='float-left text-4xl font-bold'>Licenses</p>\r\n                <div className='float-right'>\r\n                <p className='font-semibold text-right text-xl'>Current Balance</p>\r\n                <p className='text-right text-xl font-bold'>{user.meldas} [M]</p>\r\n                </div>\r\n            </div>\r\n            <div className='px-2 py-1 lg:px-6 lg:py-3 rounded bg-gray-100'>\r\n                {licenses.map(license => {\r\n                    return(\r\n                        <div className='lg:py-3 py-1'>\r\n                            <License license={license}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    function License({license}){\r\n        return(\r\n            <div className='border-2 border-gray-500 bg-white shadow p-2'>\r\n                <div className='flow-root'>\r\n                    <div className='float-left'>\r\n                        <p className='text-lg font-semibold'>{license.title}</p>\r\n                        <p className='font-semibold text-gray-700'>{license.licenseID}</p>\r\n                    </div>\r\n                    <p className='float-right font-bold text-xl'>{license.price} [M]</p>\r\n                </div>\r\n                <div className='lg:flow-root'>\r\n                    <p className='pt-2 pr-2 font-semibold lg:float-left'>{license.permissions}</p>\r\n                    {user.licenses != undefined && Object.keys(user.licenses).includes(license.licenseID) ?\r\n                    <div className='flex lg:float-right'>\r\n                        <CheckCircleIcon className='w-7 h-7'/>\r\n                    <p className='lg:float-right font-bold px-1 text-lg'>Purchased {(user.licenses[license.licenseID]).datePurchased}</p>\r\n                    </div>\r\n                    :\r\n                    <button className={classNames(\r\n                        Number(user.meldas) < Number(license.price) ? 'bg-yellow-200 text-gray-400' : 'bg-yellow-300 hover:bg-yellow-400',\r\n                        'font-semibold shadow rounded p-2 lg:float-right w-full mt-2 lg:mt-0 lg:w-52 text-lg')}\r\n                        onClick={()=>{onClickBuyLicense(license)}}\r\n                    >\r\n                        {user.meldas < license.price ? \"CAN'T AFFORD THIS\" : 'BUY'}\r\n                    </button>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Licenses;","import { useState, useEffect } from \"react\";\r\nimport { ThumbDownIcon, ThumbUpIcon, ChatIcon, XCircleIcon, PlusCircleIcon, XIcon, NewspaperIcon, SpeakerphoneIcon, ScaleIcon, BellIcon, ReplyIcon } from \"@heroicons/react/outline\";\r\n\r\nconst PostPage = ({selectedSection, setSelectedSection, selectedPost, setSelectedPost, notifications, setValues, user, database, getTime, getDate, getYear}) => {\r\n\r\n    const navigationSections = [\r\n        {sectionName: 'Public Posts', sectionSelected: selectedSection == 'Public Posts', icon: NewspaperIcon},\r\n        {sectionName: 'Government Announcements', sectionSelected: selectedSection == 'Government Announcements', icon: SpeakerphoneIcon},\r\n        {sectionName: 'Criminal Charges', sectionSelected: selectedSection == 'Criminal Charges', icon: ScaleIcon},\r\n        {sectionName: 'Notifications', sectionSelected: selectedSection == 'Notifications', icon: BellIcon},\r\n    ]\r\n\r\n    useEffect(updatePost, []);\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    function onClickPostComment(commentText){\r\n        if(commentText != undefined && commentText != ''){\r\n        database.ref(`/posts/${selectedPost.postID}/comments`).get().then(commentsSnapshot => {\r\n            const commentID = generateCommentID();\r\n            //const comments = commentsSnapshot.val() != undefined ? Object.values(commentsSnapshot.val()) : [];\r\n            const newComment = {\r\n                commentID: commentID,\r\n                text: commentText,\r\n                poster: {\r\n                    name: user.name,\r\n                    citizenID: user.citizenID\r\n                },\r\n                datePosted: `${getDate()}, ${getYear()}`,\r\n                timePosted: getTime(),\r\n                ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n            }\r\n            console.log('comment', newComment);\r\n            //comments.push(newComment);\r\n            database.ref(`/posts/${selectedPost.postID}/comments/${commentID}`).set(newComment);\r\n            updatePost();\r\n            if(selectedPost.poster.citizenID != user.citizenID){\r\n                database.ref(`/citizens/${selectedPost.poster.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                    const notifications = notificationsSnapshot.val() != undefined ? Object.values(notificationsSnapshot.val()) : [];\r\n                    notifications.push({\r\n                        dateAdded: `${getDate()}, ${getYear()}`,\r\n                        timeAdded: getTime(),\r\n                        action: 'commented',\r\n                        object: 'post',\r\n                        commentText: commentText,\r\n                        actor: {\r\n                            name: user.name,\r\n                            citizenID: user.citizenID\r\n                        },\r\n                        post: {postID: selectedPost.postID,\r\n                            text: selectedPost.text},\r\n                        seen: false,\r\n                        ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                    });\r\n                    database.ref(`/citizens/${selectedPost.poster.citizenID}/notifications`).set(notifications);\r\n                })}\r\n        })\r\n        }\r\n    }\r\n\r\n    function generateCommentID(){\r\n        var postID = 'CO-'\r\n        for(var i = 0; i < 5; i++){\r\n            postID = postID + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(postID);\r\n    }\r\n\r\n    function updatePost(){\r\n        database.ref(`/posts/${selectedPost.postID}`).get().then(postSnapshot => {\r\n            setSelectedPost(postSnapshot.val());\r\n            localStorage.setItem('selectedPost', JSON.stringify(postSnapshot.val()));\r\n        })\r\n    }\r\n\r\n    function unseenNotifications(){\r\n        var unseenNotificationsValue = false;\r\n        if(user.notifications != undefined){\r\n        Object.values(user.notifications).forEach(notification => {\r\n            //console.log(notification.seen)\r\n            if(!notification.seen){\r\n                unseenNotificationsValue = true;\r\n            }\r\n        });}\r\n        return unseenNotificationsValue;\r\n    }\r\n\r\n    function makeReadableTimeAgo(post){\r\n        const secondsSincePost = Math.round(((new Date()).getTime()/1000)-rushingtonEpoch) - post.ssre;\r\n        if(secondsSincePost > 2591999){\r\n            return(`${post.datePosted}`);\r\n        } else if(secondsSincePost > 307199){\r\n            const yearsAgo = toFixed(secondsSincePost/307200, 0);\r\n            return(`${yearsAgo} Rushington ${yearsAgo != 1 ? 'years' : 'year'} ago`);\r\n        } else if(secondsSincePost > 38399){\r\n            const monthsAgo = toFixed(secondsSincePost/38400, 0);\r\n            return(`${monthsAgo} Rushington ${monthsAgo != 1 ? 'months' : 'month'} ago`);\r\n        } else if(secondsSincePost > 1199){\r\n            const daysAgo = toFixed(Math.round(((new Date()).getTime()/1000)-rushingtonEpoch)/1200, 0) - \r\n                toFixed(post.ssre/1200, 0);\r\n            return(`${daysAgo} Rushington ${daysAgo != 1 ? 'days' : 'day'} ago`);\r\n        } else if(secondsSincePost > 59){\r\n            const minutesSincePost = toFixed(secondsSincePost/60, 0);\r\n            return(`${minutesSincePost} ${minutesSincePost != 1 ? 'minutes' : 'minute'} ago`);\r\n        } else {\r\n            return(`${secondsSincePost} ${secondsSincePost != 1 ? 'seconds' : 'second'} ago`);\r\n        }\r\n    }\r\n\r\n    function toFixed(num, fixed) {\r\n        var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\r\n        return num.toString().match(re)[0];\r\n    }\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    function censor(citizenID){\r\n        return(user.citizenID != citizenID ? `CI-***${citizenID.substring(6, 8)}` : citizenID);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className='grid grid-cols-4 gap-5'>\r\n                <div className='col-span-4 lg:col-span-1 lg:h-40 lg:sticky lg:top-6'>\r\n                    \r\n                    {navigationSections.map(navigationSection => {\r\n                        const Icon = navigationSection.icon;\r\n                        return(\r\n                        \r\n                        <div className='flex-auto lg:flex-none'>\r\n                            <button\r\n                                onClick={()=>{setSelectedSection(navigationSection.sectionName);\r\n                                    localStorage.setItem('selectedSection', navigationSection.sectionName);\r\n                                    if(navigationSection.sectionName == 'Notifications'){\r\n                                        database.ref(`/citizens/${user.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                            if(notificationsSnapshot.val() != undefined){\r\n                                                const notifications = Object.values(notificationsSnapshot.val());\r\n                                                notifications.forEach(notification => {\r\n                                                    notification.seen = true;\r\n                                                });\r\n                                                database.ref(`/citizens/${user.citizenID}/notifications`).set(notifications);\r\n                                                user.notifications = notifications;\r\n                                                localStorage.setItem('user', JSON.stringify(user));\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    window.location.href = '/';\r\n                                }}\r\n                                className='w-full'\r\n                            >\r\n                        <div\r\n                            className={classNames(navigationSection.sectionSelected ? 'bg-gray-200' : 'bg-white hover:bg-gray-100',\r\n                                'rounded p-2 w-full text-center lg:text-left'\r\n                            )}\r\n                        >\r\n                            <div className='flex gap-2 justify-center lg:justify-start'>\r\n                                <Icon className='h-6 w-6'\r\n                                    fill={classNames(navigationSection.sectionName == 'Notifications' && unseenNotifications() ? '#facc15' : 'white')}\r\n                                />\r\n                            <p className='text-gray-800 font-semibold'>{navigationSection.sectionName}</p>\r\n                            </div></div>\r\n                            </button>\r\n                        </div>\r\n                        )\r\n                    })}\r\n                    \r\n                </div>\r\n                <div className='col-span-4 lg:col-span-3 bg-gray-100 rounded'>\r\n                    <div className=''>\r\n                        <p className='font-bold py-1 px-2 bg-gray-100 border-b border-gray-400 text-xl'>{selectedPost.poster.name}'s Post</p>\r\n                        <Post/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\nfunction Post({}){\r\n    const [commentText, setCommentText] = useState();\r\n    console.log(selectedPost.postID)\r\n    return(\r\n        <div className='border-b border-l border-r border-gray-400 bg-white shadow'>\r\n            <div className='flow-root'>\r\n            <button\r\n                        onClick={(event) => {\r\n                            event.preventDefault();\r\n                            database.ref(`/citizens/${selectedPost.poster.citizenID}`).get().then(citizenSnapshot => {\r\n                                localStorage.setItem('selectedCitizen', JSON.stringify(citizenSnapshot.val()));\r\n                                window.location.href = '/profile';\r\n                            })\r\n                        }}\r\n                     className='px-1 m-1 text-gray-700 text-left font-semibold float-left hover:bg-gray-100 rounded'>\r\n                     <p className=''>{selectedPost.poster.citizenID == user.citizenID ? 'Me' : selectedPost.poster.name}</p>\r\n                     <p className='text-sm'>{censor(selectedPost.poster.citizenID)}</p>\r\n                     </button>\r\n                     <div className='float-right p-2'>\r\n                    <p className='text-right text-gray-700 font-semibold uppercase text-sm'>{makeReadableTimeAgo(selectedPost)}</p>\r\n                    </div>\r\n            </div>\r\n                <div className='px-3 py-1'>\r\n                    <p className='text-lg font-semibold py-2 px-2 border-2 border-gray-400 shadow-sm'>\r\n                        {selectedPost.text}\r\n                    </p>\r\n                </div>\r\n                <div className='w-full flow-root pb-2 pt-5 px-2 border-b border-gray-500'>\r\n                    <button className='flex gap-1 float-left hover:bg-gray-200 rounded p-1'\r\n                        onClick={()=>{\r\n                            database.ref(`/posts/${selectedPost.postID}`).get().then(postSnapshot => {\r\n                                const post = postSnapshot.val();\r\n                                var liked = post.liked != undefined ? [...Object.values(post.liked)] : [];\r\n                                var disliked = post.disliked != undefined ? [...Object.values(post.disliked)] : [];\r\n                                if(!liked.includes(user.citizenID)){\r\n                                    liked.push(user.citizenID);\r\n                                    if(disliked.includes(user.citizenID)){\r\n                                        disliked.splice(disliked.indexOf(user.citizenID), 1);\r\n                                    }\r\n                                database.ref(`/posts/${post.postID}/liked`).set(\r\n                                    liked\r\n                                );\r\n                                database.ref(`/posts/${post.postID}/disliked`).set(\r\n                                    disliked\r\n                                );\r\n                                updatePost();\r\n                                if(post.poster.citizenID != user.citizenID){\r\n                                database.ref(`/citizens/${post.poster.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                    const notifications = notificationsSnapshot.val() != undefined ? Object.values(notificationsSnapshot.val()) : [];\r\n                                    notifications.push({\r\n                                        dateAdded: `${getDate()}, ${getYear()}`,\r\n                                        timeAdded: getTime(),\r\n                                        action: 'liked',\r\n                                        object: 'post',\r\n                                        actor: {\r\n                                            name: user.name,\r\n                                            citizenID: user.citizenID\r\n                                        },\r\n                                        post: {postID: post.postID,\r\n                                            text: post.text},\r\n                                        seen: false,\r\n                                        ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                    });\r\n                                    database.ref(`/citizens/${post.poster.citizenID}/notifications`).set(notifications);\r\n                                })}\r\n                                } else {\r\n                                    liked.splice(liked.indexOf(user.citizenID), 1);\r\n                                    console.log('liked', liked)\r\n                                    database.ref(`/posts/${post.postID}/liked`).set(liked);\r\n                                    updatePost();\r\n                                }\r\n                                })\r\n                        }}\r\n                    >\r\n                        <ThumbUpIcon className='h-6 w-6' \r\n                            \r\n                            fill={\r\n                            \r\n                            classNames(selectedPost.liked != undefined ?\r\n                            Object.values(selectedPost.liked).includes(user.citizenID) ? '#facc15' : 'white'\r\n                            : 'white')\r\n                        }/>\r\n                        <p className='font-semibold'>{selectedPost.liked != undefined ? Object.values(selectedPost.liked).length : 0}</p>\r\n                    </button>\r\n                    <button className='flex gap-1 float-left hover:bg-gray-200 rounded p-1 mx-1'\r\n                        onClick={()=>{\r\n                            database.ref(`/posts/${selectedPost.postID}`).get().then(postSnapshot => {\r\n                                const post = postSnapshot.val();\r\n                                var disliked = post.disliked != undefined ? [...Object.values(post.disliked)] : [];\r\n                                var liked = post.liked != undefined ? [...Object.values(post.liked)] : [];\r\n                                if(!disliked.includes(user.citizenID)){\r\n                                    disliked.push(user.citizenID);\r\n                                    if(liked.includes(user.citizenID)){\r\n                                        liked.splice(liked.indexOf(user.citizenID), 1);\r\n                                    }\r\n                                database.ref(`/posts/${post.postID}/disliked`).set(\r\n                                    disliked\r\n                                );\r\n                                database.ref(`/posts/${post.postID}/liked`).set(liked);\r\n                                updatePost();\r\n                                if(post.poster.citizenID != user.citizenID){\r\n                                    database.ref(`/citizens/${post.poster.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                        const notifications = notificationsSnapshot.val() != undefined ? Object.values(notificationsSnapshot.val()) : [];\r\n                                        notifications.push({\r\n                                            dateAdded: `${getDate()}, ${getYear()}`,\r\n                                            timeAdded: getTime(),\r\n                                            action: 'disliked',\r\n                                            object: 'post',\r\n                                            actor: {\r\n                                                name: user.name,\r\n                                                citizenID: user.citizenID\r\n                                            },\r\n                                            post: {postID: post.postID,\r\n                                                text: post.text},\r\n                                            seen: false,\r\n                                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                        });\r\n                                        database.ref(`/citizens/${post.poster.citizenID}/notifications`).set(notifications);\r\n                                    })}\r\n                                } else {\r\n                                    disliked.splice(disliked.indexOf(user.citizenID), 1);\r\n                                    //console.log('liked', disliked)\r\n                                    database.ref(`/posts/${post.postID}/disliked`).set(disliked);\r\n                                    updatePost();\r\n                                }\r\n                                })\r\n                            \r\n                            \r\n                        }}\r\n                    >\r\n                        <ThumbDownIcon className='h-6 w-6' \r\n                            \r\n                            fill={\r\n                            \r\n                            classNames(selectedPost.disliked != undefined ?\r\n                            Object.values(selectedPost.disliked).includes(user.citizenID) ? '#facc15' : 'white'\r\n                            : 'white')\r\n                        }/>\r\n                        <p className='font-semibold'>{selectedPost.disliked != undefined ? Object.values(selectedPost.disliked).length : 0}</p>\r\n                    </button>\r\n                    <div className='p-1 gap-1 float-left rounded flex'>\r\n                            <ChatIcon className='h-6 w-6'/>\r\n                            <p className='font-semibold'>{selectedPost.comments != undefined ? Object.values(selectedPost.comments).length : 0}</p>\r\n                        </div>\r\n                    {\r\n                        selectedPost.poster.citizenID == user.citizenID &&\r\n                        <button className='font-semibold bg-yellow-300 hover:bg-yellow-400 rounded shadow flex float-right'\r\n                            onClick={()=>{\r\n                                database.ref(`/posts/${selectedPost.postID}`).set(null);\r\n                                updatePost();\r\n                            }}\r\n                            >\r\n                            <div className='px-2 py-1 flex'>\r\n                            <XCircleIcon className='h-6 w-6'/>\r\n                            DELETE\r\n                            </div>\r\n                        </button>\r\n                    }\r\n                </div>\r\n                <div className='p-2 bg-gray-100'>\r\n                    <p className='font-semibold text-lg pb-2 text-gray-700'>Comments</p>\r\n                        <textarea className='rounded resize-none bg-white focus:outline-none h-16 w-full p-2 bg-gray-100 border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700'\r\n                            placeholder='Write comment...'\r\n                            value={commentText}\r\n                            onKeyDown={event => {\r\n                                if(event.code === 'Enter'){\r\n                                    onClickPostComment(commentText);\r\n                                }\r\n                            }}\r\n                            \r\n                            onChange={event => {\r\n                                        if(!event.target.value.includes('\\n')){\r\n                                            setCommentText(event.target.value);\r\n                                        }\r\n                            }}\r\n                        ></textarea>\r\n                        <div className='flex justify-center w-full p-1'>\r\n                        <button \r\n                                    onClick={()=>{onClickPostComment(commentText)}}\r\n                                    className={classNames(\r\n                                        commentText != '' && commentText != undefined ? 'bg-yellow-300 hover:bg-yellow-400' : 'bg-yellow-200 text-gray-400',\r\n                                        'w-64 flex text-md justify-center py-1 font-semibold rounded shadow')}>\r\n                                            <div className='flex justify-center'>\r\n                                    <PlusCircleIcon className='w-6 h-6'/>POST COMMENT\r\n                                    \r\n                                    </div>\r\n                                    </button>\r\n                            </div>\r\n\r\n                        {selectedPost.comments != undefined ?\r\n                        <div className='pt-8'>\r\n                            {Object.values(selectedPost.comments).sort((comment1, comment2) => {\r\n                                return comment2.ssre - comment1.ssre;\r\n                            }).map(comment => {\r\n                                return(\r\n                                <div className='p-1 mt-2 bg-white rounded shadow'>\r\n                                    <div className='flow-root w-full pb-1'>\r\n                                    <button\r\n                        onClick={(event) => {\r\n                            event.preventDefault();\r\n                            database.ref(`/citizens/${comment.poster.citizenID}`).get().then(citizenSnapshot => {\r\n                                localStorage.setItem('selectedCitizen', JSON.stringify(citizenSnapshot.val()));\r\n                                window.location.href = '/profile';\r\n                            })\r\n                        }}\r\n                     className='text-gray-700 p-1 text-left font-semibold float-left hover:bg-gray-100 rounded'>\r\n                     <p className=''>{comment.poster.citizenID == user.citizenID ? 'Me' : comment.poster.name}</p>\r\n                     <p className='text-sm'>{censor(comment.poster.citizenID)}</p>\r\n                     </button>\r\n                                    <div className='float-right'>\r\n                                    <div className='float-right px-1'>\r\n                                        <p className='text-right text-gray-700 font-semibold uppercase text-sm'>{makeReadableTimeAgo(comment)}</p>\r\n                                    </div>\r\n                                    </div>\r\n                                    </div>\r\n                                    <p className='p-2 mx-2 my-1 bg-white border-2 border-gray-400 shadow-sm font-semibold'>{comment.text}</p>\r\n                                    <div className='flow-root m-0.5 pt-2'>\r\n                                    <button className='flex gap-1 float-left hover:bg-gray-200 rounded p-1'\r\n                        onClick={()=>{\r\n                            database.ref(`/posts/${selectedPost.postID}/comments/${comment.commentID}`).get().then(commentSnapshot => {\r\n                                const comment = commentSnapshot.val();\r\n                                var liked = comment.liked != undefined ? [...Object.values(comment.liked)] : [];\r\n                                var disliked = comment.disliked != undefined ? [...Object.values(comment.disliked)] : [];\r\n                                if(!liked.includes(user.citizenID)){\r\n                                    liked.push(user.citizenID);\r\n                                    if(disliked.includes(user.citizenID)){\r\n                                        disliked.splice(disliked.indexOf(user.citizenID), 1);\r\n                                    }\r\n                                database.ref(`/posts/${selectedPost.postID}/comments/${comment.commentID}/liked`).set(\r\n                                    liked\r\n                                );\r\n                                database.ref(`/posts/${selectedPost.postID}/comments/${comment.commentID}/disliked`).set(\r\n                                    disliked\r\n                                );\r\n                                updatePost();\r\n                                if(comment.poster.citizenID != user.citizenID){\r\n                                database.ref(`/citizens/${comment.poster.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                    const notifications = notificationsSnapshot.val() != undefined ? Object.values(notificationsSnapshot.val()) : [];\r\n                                    notifications.push({\r\n                                        dateAdded: `${getDate()}, ${getYear()}`,\r\n                                        timeAdded: getTime(),\r\n                                        action: 'liked',\r\n                                        object: 'comment',\r\n                                        actor: {\r\n                                            name: user.name,\r\n                                            citizenID: user.citizenID\r\n                                        },\r\n                                        post: {postID: selectedPost.postID,\r\n                                            text: selectedPost.text\r\n                                        },\r\n                                        comment: {commentID: comment.commentID,\r\n                                            text: comment.text},\r\n                                        seen: false,\r\n                                        ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                    });\r\n                                    database.ref(`/citizens/${comment.poster.citizenID}/notifications`).set(notifications);\r\n                                })}\r\n                                } else {\r\n                                    liked.splice(liked.indexOf(user.citizenID), 1);\r\n                                    console.log('liked', liked)\r\n                                    database.ref(`/posts/${selectedPost.postID}/comments/${comment.commentID}/liked`).set(liked);\r\n                                    updatePost();\r\n                                }\r\n                                })\r\n                        }}\r\n                    >\r\n                        <ThumbUpIcon className='h-5 w-5' \r\n                            \r\n                            fill={\r\n                            \r\n                            classNames(comment.liked != undefined ?\r\n                            Object.values(comment.liked).includes(user.citizenID) ? '#facc15' : 'white'\r\n                            : 'white')\r\n                        }/>\r\n                        <p className='font-semibold text-sm'>{comment.liked != undefined ? Object.values(comment.liked).length : 0}</p>\r\n                    </button>\r\n                    <button className='flex gap-1 float-left hover:bg-gray-200 rounded p-1 ml-0.5'\r\n                        onClick={()=>{\r\n                            database.ref(`/posts/${selectedPost.postID}/comments/${comment.commentID}`).get().then(commentSnapshot => {\r\n                                const comment = commentSnapshot.val();\r\n                                var disliked = comment.disliked != undefined ? [...Object.values(comment.disliked)] : [];\r\n                                var liked = comment.liked != undefined ? [...Object.values(comment.liked)] : [];\r\n                                if(!disliked.includes(user.citizenID)){\r\n                                    disliked.push(user.citizenID);\r\n                                    if(liked.includes(user.citizenID)){\r\n                                        liked.splice(liked.indexOf(user.citizenID), 1);\r\n                                    }\r\n                                database.ref(`/posts/${selectedPost.postID}/comments/${comment.commentID}/disliked`).set(\r\n                                    disliked\r\n                                );\r\n                                database.ref(`/posts/${selectedPost.postID}/comments/${comment.commentID}/liked`).set(liked);\r\n                                updatePost();\r\n                                if(comment.poster.citizenID != user.citizenID){\r\n                                    database.ref(`/citizens/${comment.poster.citizenID}/notifications`).get().then(notificationsSnapshot => {\r\n                                        const notifications = notificationsSnapshot.val() != undefined ? Object.values(notificationsSnapshot.val()) : [];\r\n                                        notifications.push({\r\n                                            dateAdded: `${getDate()}, ${getYear()}`,\r\n                                            timeAdded: getTime(),\r\n                                            action: 'disliked',\r\n                                            actor: {\r\n                                                name: user.name,\r\n                                                citizenID: user.citizenID\r\n                                            },\r\n                                            object: 'comment',\r\n                                            post: {postID: selectedPost.postID,\r\n                                                text: selectedPost.text\r\n                                            },\r\n                                            comment: {commentID: comment.commentID,\r\n                                                text: comment.text},\r\n                                            seen: false,\r\n                                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                        });\r\n                                        database.ref(`/citizens/${comment.poster.citizenID}/notifications`).set(notifications);\r\n                                    })}\r\n                                } else {\r\n                                    disliked.splice(disliked.indexOf(user.citizenID), 1);\r\n                                    //console.log('liked', disliked)\r\n                                    database.ref(`/posts/${selectedPost.postID}/comments/${comment.commentID}/disliked`).set(disliked);\r\n                                    updatePost();\r\n                                }\r\n                                })\r\n                            \r\n                            \r\n                        }}\r\n                    >\r\n                        <ThumbDownIcon className='h-5 w-5' \r\n                            \r\n                            fill={\r\n                            \r\n                            classNames(comment.disliked != undefined ?\r\n                            Object.values(comment.disliked).includes(user.citizenID) ? '#facc15' : 'white'\r\n                            : 'white')\r\n                        }/>\r\n                        <p className='font-semibold text-sm'>{comment.disliked != undefined ? Object.values(comment.disliked).length : 0}</p>\r\n                    </button>\r\n                    {/* <button className='p-1 gap-1 float-left rounded flex bg-yellow-300 hover:bg-yellow-400 text-sm shadow ml-4'>\r\n                            <ReplyIcon className='h-4 w-4'/>\r\n                            <p className='font-semibold'>REPLY</p>\r\n                        </button> */}\r\n                        {comment.poster.citizenID == user.citizenID &&\r\n                                    <button className='float-right text-sm rounded shadow bg-yellow-300 hover:bg-yellow-400 font-semibold flex px-2 py-1'\r\n                                        onClick={() => {\r\n                                            database.ref(`/posts/${selectedPost.postID}/comments/${comment.commentID}`).set(null);\r\n                                            updatePost();\r\n                                        }}\r\n                                    >\r\n                                        <XCircleIcon className='h-5 w-5'/>\r\n                                        DELETE\r\n                                    </button>}\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        :\r\n                        <p className='w-full text-center font-semibold text-gray-700 py-8'>NO COMMENTS</p>  \r\n                    }\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default PostPage;","export default __webpack_public_path__ + \"static/media/RushingtonMap.fcfe45e2.png\";","import RushingtonMap from '../../../RushingtonMap.png'\r\n\r\nconst Map = ({}) => {\r\n    return(\r\n        <div className='p-5'>\r\n            <p className='font-bold text-3xl text-center pb-7'>Map of Rushington</p>\r\n    <img src={RushingtonMap}\r\n        className='rounded'\r\n    ></img>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Map;","import { useEffect, useState } from \"react\";\r\n\r\nconst Properties = ({database}) => {\r\n\r\n    const [properties, setProperties] = useState([]);\r\n    const [filteredProperties, setFilteredProperties] = useState([]);\r\n\r\n    useEffect(updateProperties, []);\r\n\r\n    function updateProperties(){\r\n        database.ref('/properties').get().then(propertiesSnapshot => {\r\n            setProperties(Object.values(propertiesSnapshot.val()).sort((property1, property2) => {\r\n                return property1.address.localeCompare(property2.address);\r\n            }));\r\n            setFilteredProperties(Object.values(propertiesSnapshot.val()).sort((property1, property2) => {\r\n                return property1.address.localeCompare(property2.address);\r\n            }));\r\n        })\r\n    }\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    return(\r\n        <div className='mx-1 lg:mx-10 my-1 lg:my-5'>\r\n            <div className='py-2 w-full'>\r\n                <p className='text-4xl font-bold'>Properties</p>\r\n            </div>\r\n            <div className='px-2 py-1 lg:px-6 lg:py-3 rounded bg-gray-100'>\r\n                <input className='w-full border-2 border-gray-500 focus:outline-none focus:ring-1 focus:ring-gray-700 focus:border-gray-700 p-2 mt-3 mb-6'\r\n                    placeholder='Search'\r\n                    onChange={event => {\r\n                        setFilteredProperties(properties.filter(property => {\r\n                            return property.address.toUpperCase().includes(event.target.value.toUpperCase());\r\n                          }))\r\n                    }}\r\n                    ></input>\r\n            {filteredProperties.map(property => {\r\n                return(\r\n                    <div className='lg:py-3 py-1'>\r\n                        <Property property={property}/>\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    function Property({property}){\r\n        return(\r\n            <div className={classNames('')}>\r\n                                            <div className='w-full bg-white border-2 shadow border-gray-500 grid grid-cols-3'>\r\n                                                <div className='col-span-3 p-2 flow-root'>\r\n                                                    <div className='float-left'>\r\n                                                    <p className={classNames('text-xl', 'font-bold')}>{property.address}</p>\r\n                                                    <p className={classNames('text-sm', 'uppercase font-semibold')}>{property.type}</p>\r\n                                                    </div>\r\n                                                    {/* <div className='float-right'>\r\n                                                        <button className='rounded flex p-2 text-sm uppercase shadow font-semibold bg-yellow-300 hover:bg-yellow-400'>\r\n                                                            <PencilIcon className='h-5 w-5'/>\r\n                                                            Edit Property\r\n                                                        </button>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                                \r\n{/*                                                 <div className='col-span-3 px-2 uppercase font-bold'>Information</div>\r\n */}                                                \r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Property ID</p>\r\n                                                    <p>{property.propertyID}</p>\r\n                                                </div>\r\n                                                \r\n                                                {/* <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Size</p>\r\n                                                    <p>{property.size} Blocks</p>\r\n                                                </div> */}\r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Date Property Added</p>\r\n                                                    <p>{property.dateAdded}</p>\r\n                                                </div>\r\n                                                <div className='col-span-1 p-2'>\r\n                                                    <p className='font-semibold'>Owner</p>\r\n                                                    <p>{property.owner != undefined ? property.owner.name : 'Available'}</p>\r\n                                                </div>\r\n                                                {property.type == 'Business' &&\r\n                                                <div className='col-span-3 p-2'>\r\n                                                    <div>\r\n                                                        <p className='font-semibold'>Business Name</p>\r\n                                                        <p>{property.business != undefined ? property.business.name : 'None yet'}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className='font-semibold pt-3'>Business Description</p>\r\n                                                        <p>{property.business != undefined ? property.business.description : 'None yet'}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                }\r\n                                            </div>\r\n                                            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Properties;","import { useEffect, useState } from \"react\";\r\n\r\nconst Citizens = ({database, user}) => {\r\n\r\n    const [citizens, setCitizens] = useState([]);\r\n    const [filteredCitizens, setFilteredCitizens] = useState([]);\r\n\r\n    useEffect(updateCitizens, []);\r\n\r\n    function updateCitizens(){\r\n        database.ref('/citizens').get().then(citizensSnapshot => {\r\n            if(citizensSnapshot.val() != undefined){\r\n                setCitizens(Object.values(citizensSnapshot.val()));\r\n                setFilteredCitizens(Object.values(citizensSnapshot.val()).sort((citizen1, citizen2) => {\r\n                    return citizen1.name.localeCompare(citizen2.name);\r\n                }));\r\n            }\r\n        })\r\n    }\r\n\r\n    function censor(citizenID){\r\n        return(user.citizenID != citizenID ? `CI-***${citizenID.substring(6, 8)}` : citizenID);\r\n    }\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    return(\r\n        <div className='mx-1 lg:mx-10 my-1 lg:my-5'>\r\n            <div className='py-2 w-full'>\r\n                <p className='text-4xl font-bold'>Citizens</p>\r\n            </div>\r\n            <div className='px-2 py-1 lg:px-6 lg:py-3 rounded bg-gray-100'>\r\n                <input className='rounded w-full border-2 border-gray-500 focus:outline-none focus:ring-1 focus:ring-gray-700 focus:border-gray-700 p-2 mt-3 mb-6'\r\n                    placeholder='Search'\r\n                    onChange={event => {\r\n                        setFilteredCitizens(citizens.filter(citizen => {\r\n                            return citizen.name.toUpperCase().includes(event.target.value.toUpperCase());\r\n                          }).sort((citizen1, citizen2) => {\r\n                            return citizen1.name.localeCompare(citizen2.name);\r\n                          }))\r\n                    }}\r\n                    ></input>\r\n            {filteredCitizens.map(citizen => {\r\n                return(\r\n                    <div className='lg:py-3 py-1'>\r\n                        <Citizen citizen={citizen}/>\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    function Citizen({citizen}){\r\n        return(\r\n            <button className={classNames('w-full')}\r\n                onClick={(event) => {\r\n                    event.preventDefault();\r\n                    database.ref(`/citizens/${citizen.citizenID}`).get().then(citizenSnapshot => {\r\n                        localStorage.setItem('selectedCitizen', JSON.stringify(citizenSnapshot.val()));\r\n                        window.location.href = '/profile';\r\n                    })\r\n                }}\r\n            >\r\n                <div className='w-full bg-white border-2 shadow border-gray-500'>\r\n                    <div className='p-2 flow-root w-full'>\r\n                        <p className='float-left text-xl font-bold'>{citizen.name}</p>\r\n                        <p className='float-right text-xl'>{censor(citizen.citizenID)}</p>\r\n                    </div>\r\n                </div>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Citizens;","import { useState, useEffect } from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { CheckCircleIcon, EyeIcon, EyeOffIcon, PencilAltIcon, XCircleIcon } from '@heroicons/react/outline';\r\n\r\nconst Settings = ({user, database, setUser}) => {\r\n\r\n    useEffect(updateUser, []);\r\n\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [requirePasswordChecked, setRequirePasswordChecked] = useState(user.settings.requirePassword);\r\n    const [isEditingPassword, setIsEditingPassword] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    function updateUser(){\r\n        database.ref(`/citizens/${user.citizenID}`).get().then(citizenSnapshot => {\r\n            setUser(citizenSnapshot.val());\r\n            setRequirePasswordChecked(citizenSnapshot.val().settings.requirePassword);\r\n            localStorage.setItem('user', JSON.stringify(citizenSnapshot.val()));\r\n        })\r\n    }\r\n\r\n    function isNewPasswordValid(){\r\n        return newPassword != undefined && newPassword != '';\r\n    }\r\n\r\n    function stringToArrayBuffer(str) {\r\n        var buf = new ArrayBuffer(str.length*2); // 2 bytes for each char\r\n        var bufView = new Uint16Array(buf);\r\n        for (var i=0, strLen=str.length; i < strLen; i++) {\r\n          bufView[i] = str.charCodeAt(i);\r\n        }\r\n        return buf;\r\n      }\r\n      \r\n    return(\r\n        <div className='mx-1 lg:mx-10 my-1 lg:my-5'>\r\n            <div className='py-2'>\r\n                <p className='text-4xl text-black font-bold'>Settings</p>\r\n            </div>\r\n            <div className='my-4 p-2 border-2 border-gray-500 shadow'>\r\n                <div className='flow-root bg-gray-100 border border-gray-500 rounded shadow p-2'>\r\n                <div className='float-left w-2/3'>\r\n                    <p className='text-xl font-bold pt-1'>Censor my Citizen ID</p>\r\n                </div>\r\n                <div className='float-right'>\r\n                <Switch\r\n                    checked={user.settings.censorCitizenID}\r\n                    onChange={() => {\r\n                        database.ref(`/citizens/${user.citizenID}/settings/censorCitizenID`).set(!user.settings.censorCitizenID);\r\n                        updateUser();\r\n                    }}\r\n                    color='primary'\r\n                />\r\n                </div>\r\n                </div>\r\n                <div className='pt-2'>\r\n                    <p className='p-1 font-semibold text-lg'>To be able to screenshot, show my screen to others, etc. without them seeing my full Citizen ID</p>\r\n                </div>\r\n            </div>\r\n            <div className='my-4 p-2 border-2 border-gray-500 shadow'>\r\n                <div className='bg-gray-100 border border-gray-500 rounded shadow p-2'>\r\n                    <div className='flow-root'>\r\n                <div className='float-left w-2/3'>\r\n                    <p className='text-xl font-bold pt-1'>Require password to sign in</p>\r\n                </div>\r\n                <div className='float-right'>\r\n                <Switch\r\n                    checked={requirePasswordChecked}\r\n                    onChange={() => {\r\n                        /* database.ref(`/citizens/${user.citizenID}/settings/requirePassword`).set(!user.settings.requirePassword);\r\n                        updateUser(); */\r\n                        if(requirePasswordChecked == true){\r\n                            database.ref(`/citizens/${user.citizenID}/settings/requirePassword`).set(false);\r\n                            setIsEditingPassword(false);\r\n                            setNewPassword('');\r\n                            setShowPassword(false);\r\n                        }\r\n                        if(!requirePasswordChecked){\r\n                            if(user.password != undefined){\r\n                                database.ref(`/citizens/${user.citizenID}/settings/requirePassword`).set(true);\r\n                            } else {\r\n                                setIsEditingPassword(true);\r\n                            }\r\n                        }\r\n                        setRequirePasswordChecked(!requirePasswordChecked);\r\n                    }}\r\n                    color='primary'\r\n                />\r\n                </div>\r\n                </div>\r\n                {requirePasswordChecked && isEditingPassword &&\r\n                <div className='flex justify-center my-2'>\r\n                    \r\n                    <div className=''>\r\n                <input className='border-2 border-gray-500 focus:outline-none focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-1'\r\n                    value={newPassword}\r\n                    type={showPassword? '' : 'password'}\r\n                    placeholder='Set password...'\r\n                    onChange={event => {\r\n                        setNewPassword(event.target.value);\r\n                        setIsEditingPassword(true);\r\n                    }}\r\n                ></input>\r\n                {isNewPasswordValid() &&\r\n                <div className='flow-root w-full'>\r\n                <button className='float-left py-1 px-2 mt-2 font-semibold bg-yellow-300 hover:bg-yellow-400 shadow rounded flex'\r\n                    onClick={() => {\r\n                        setShowPassword(!showPassword);\r\n                    }}\r\n                >\r\n                    {showPassword ?\r\n                        <EyeOffIcon className='h-6 w-6'/> :\r\n                        <EyeIcon className='h-6 w-6'/>\r\n                    }\r\n                    {showPassword ? 'HIDE' : 'SHOW'}\r\n                </button>\r\n                <button className='float-right py-1 px-2 mt-2 font-semibold bg-yellow-300 hover:bg-yellow-400 shadow rounded flex'\r\n                    onClick={() => {\r\n                        database.ref(`/citizens/${user.citizenID}/settings/requirePassword`).set(true);\r\n                        /* sha256(newPassword).then(hashedPassword => {\r\n                            console.log(hashedPassword);\r\n                        }) */\r\n                        window.crypto.subtle.digest(\"SHA-256\", stringToArrayBuffer(newPassword)).then(result => {\r\n                            //database.ref(`/citizens/${user.citizenID}/password`).set();\r\n                            console.log(result);\r\n                            const hashArray = Array.from(new Uint8Array(result));                     // convert buffer to byte array\r\n                            const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n                            console.log(hashHex);\r\n                            database.ref(`/citizens/${user.citizenID}/password`).set(hashHex);\r\n                            setIsEditingPassword(false);\r\n                            setNewPassword('');\r\n                            setShowPassword(false);\r\n                            updateUser();\r\n                        })\r\n                        \r\n                    }}\r\n                >\r\n                    \r\n                    <CheckCircleIcon className='h-6 w-6'/>\r\n                    SAVE\r\n                </button>\r\n                </div>}\r\n                <button className='mt-2 w-full rounded bg-yellow-300 hover:bg-yellow-400 shadow px-2 py-1 font-semibold flex justify-center'\r\n                    onClick={() => {\r\n                        setIsEditingPassword(false);\r\n                        setNewPassword('');\r\n                        if(user.password == undefined){\r\n                            setRequirePasswordChecked(false);\r\n                        }\r\n                        setShowPassword(false);\r\n                    }}>\r\n                        <XCircleIcon className='h-6 w-6'/>\r\n                        CANCEL</button>\r\n                </div>\r\n                </div>}\r\n                {requirePasswordChecked && !isEditingPassword &&\r\n                <div className='flex justify-center my-2'>\r\n                    <button className='rounded bg-yellow-300 hover:bg-yellow-400 shadow px-2 py-1 font-semibold text-lg flex justify-center'\r\n                        onClick={() => {\r\n                            setIsEditingPassword(true);\r\n                        }}\r\n                    >\r\n                        <PencilAltIcon className='h-7 w-7'/>\r\n                        CHANGE PASSWORD\r\n                    </button>\r\n                </div>\r\n                }\r\n                \r\n                </div>\r\n                <div className='pt-2'>\r\n                    <p className='p-1 font-semibold text-lg'>If my Citizen ID is leaked, someone will still need a password to sign in</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import { useState } from \"react\";\r\nimport { DatabaseIcon, PlusCircleIcon } from \"@heroicons/react/outline\";\r\n\r\nconst AddNewBusinessPopupBody = ({setAddNewBusinessPopupOpen, user, database, updateBusinesses, getTime, getDate, getYear}) => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    function generateBusinessID(){\r\n        var postID = 'BU-'\r\n        for(var i = 0; i < 5; i++){\r\n            postID = postID + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(postID);\r\n    }\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    return(\r\n        <div className='w-full justify-center '>\r\n            <div className='pb-4'>\r\n            <div className='p-5 bg-blue-200 rounded shadow'>\r\n                \r\n                <div className=''>\r\n                <p className='text-sm font-bold'>NAME</p>\r\n                <input className='rounded p-1 w-full border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 focus:outline-none'\r\n                    onChange={event => {setName(event.target.value)}}\r\n                ></input>\r\n                </div>\r\n                <div className='pt-2'>\r\n                <p className='text-sm font-bold'>DESCRIPTION</p>\r\n                \r\n                <textarea className='rounded p-1 w-full border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 resize-none focus:outline-none'\r\n                    onChange={event => {setDescription(event.target.value)}}\r\n                ></textarea>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n            </div>\r\n            <div className='flex justify-center'>\r\n            <button className={classNames(\r\n                name && description ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'rounded py-1 px-2 font-semibold flex shadow')}\r\n                onClick={onClickAddBusinessButton}\r\n            >\r\n                <PlusCircleIcon className='w-6 h-6'/>\r\n                ADD</button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    function onClickAddBusinessButton(){\r\n        if(name && description){\r\n            const newBusinessID = generateBusinessID();\r\n            database.ref(`/businesses/${newBusinessID}`).set(\r\n                {\r\n                    businessID: newBusinessID,\r\n                    name: name,\r\n                    description: description,\r\n                    founder: {\r\n                        citizenID: user.citizenID,\r\n                        name: user.name\r\n                    },\r\n                    owners: {0: {\r\n                        citizenID: user.citizenID,\r\n                        name: user.name    \r\n                    }},\r\n                    timeAdded: getTime(),\r\n                    dateAdded: getDate(),\r\n                    yearAdded: getYear(),\r\n                    meldas: 0\r\n                }\r\n            );\r\n            updateBusinesses();\r\n            setAddNewBusinessPopupOpen(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport default AddNewBusinessPopupBody;","import { useEffect, useState } from \"react\";\r\nimport { PlusCircleIcon, CreditCardIcon } from \"@heroicons/react/outline\";\r\nimport AddNewBusinessPopupBody from '../Low Level/AddNewBusinessPopupBody';\r\nimport Popup from '../Low Level/Popup'\r\n\r\nconst Businesses = ({database, user, setUser, getTime, getDate, getYear}) => {\r\n    const [businesses, setBusinesses] = useState([]);\r\n    const [userBusinesses, setUserBusinesses] = useState([]);\r\n    const [filteredBusinesses, setFilteredBusinesses] = useState([]);\r\n    const [selectedSection, setSelectedSection] = useState('All');\r\n    const [addNewBusinessPopupOpen, setAddNewBusinessPopupOpen] = useState(false);\r\n\r\n    const userHasBAOLicense = user.licenses != undefined ? () => {\r\n        var found = false;\r\n        Object.values(user.licenses).forEach(license => {\r\n            if(license.licenseID == 'LI-67981'){\r\n                found = true;\r\n            }\r\n        })\r\n        return found;\r\n    } : false;\r\n\r\n    useEffect(updateBusinesses, []);\r\n\r\n    function updateBusinesses(){\r\n        database.ref('/businesses').get().then(businessesSnapshot => {\r\n            if(businessesSnapshot.val()){\r\n                setBusinesses(Object.values(businessesSnapshot.val()));\r\n                setFilteredBusinesses(Object.values(businessesSnapshot.val()).sort((business1, business2) => {\r\n                    return business1.name.localeCompare(business2.name);\r\n                  }));\r\n                setUserBusinesses(Object.values(businessesSnapshot.val()).filter(business => {\r\n                    return checkUserIsOwner(business);\r\n                }))\r\n            }\r\n        })\r\n    }\r\n\r\n    function checkUserIsOwner(business){\r\n        var userIsOwner = false;\r\n        Object.values(business.owners).forEach(owner => {\r\n            if(owner.citizenID == user.citizenID) userIsOwner = true;\r\n        });\r\n        return userIsOwner;\r\n    }\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    return(\r\n        <div className='mx-1 lg:mx-10 my-1 lg:my-5'>\r\n            <div className='py-2 w-full'>\r\n                <p className='text-4xl font-bold border-b border-gray-500 pb-4'>Businesses</p>\r\n            </div>\r\n            <div className='pt-4 border-b border-gray-500'>\r\n                <button className={classNames(\r\n                    selectedSection == 'All' ? 'border-b-4 border-yellow-300 font-bold hover:bg-gray-100 rounded-t' : 'text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded',\r\n                    'w-1/3 py-1 px-1')}\r\n                    onClick={() => {\r\n                        setSelectedSection('All');\r\n                    }}\r\n                    >ALL BUSINESSES</button>\r\n                <button className={classNames(\r\n                    selectedSection == 'Purchases' ? 'border-b-4 border-yellow-300 font-bold hover:bg-gray-100 rounded-t' : 'text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded',\r\n                    'w-1/3 py-1 px-1')}\r\n                    onClick={() => {\r\n                        setSelectedSection('Purchases');\r\n                    }}\r\n                    >MY PURCHASES</button>\r\n                <button className={classNames(\r\n                    selectedSection == 'My' ? 'border-b-4 border-yellow-300 font-bold hover:bg-gray-100 rounded-t' : 'text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded',\r\n                    'w-1/3 py-1 px-1')}\r\n                    onClick={() => {\r\n                        setSelectedSection('My');\r\n                    }}\r\n                    >MY BUSINESSES</button>\r\n            </div>\r\n            <div className='px-2 py-1 lg:px-6 lg:py-3 rounded-b bg-gray-200'>\r\n                {selectedSection == 'All' &&\r\n                    <div>\r\n                <input className='rounded w-full border-2 border-gray-500 focus:outline-none focus:ring-1 focus:ring-gray-700 focus:border-gray-700 p-2 mt-3 mb-6'\r\n                    placeholder='Search businesses...'\r\n                    onChange={event => {\r\n                        setFilteredBusinesses(businesses.filter(business => {\r\n                            return business.name.toUpperCase().includes(event.target.value.toUpperCase());\r\n                          }).sort((business1, business2) => {\r\n                            return business1.name.localeCompare(business2.name);\r\n                          }))\r\n                    }}\r\n                    ></input>\r\n            {filteredBusinesses.map(filteredBusiness => {\r\n                return(\r\n                    <div className='lg:py-3 py-1'>\r\n                        <Business business={filteredBusiness}/>\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n            }\r\n            {selectedSection == 'Purchases' &&\r\n            <div>\r\n                {user.businessPurchases != undefined &&\r\n                    <div>\r\n                        {Object.values(user.businessPurchases).sort((purchase1, purchase2) => {\r\n                            return(purchase2.ssre - purchase1.ssre);\r\n                        }).map(purchase => {\r\n                            return(\r\n                            <div className='py-2'>\r\n                                <Purchase purchase={purchase}/>\r\n                            </div>)\r\n                        })}\r\n                    </div>\r\n                }\r\n                {user.businessPurchases == undefined &&\r\n                    <p className='text-gray-700 font-semibold text-center py-2'>NO PURCHASES YET</p>\r\n                }\r\n            </div>\r\n            }\r\n            {selectedSection == 'My' && userHasBAOLicense &&\r\n            <div>\r\n                <div className='flex justify-center py-3 lg:py-0'>\r\n                <button className='bg-yellow-300 hover:bg-yellow-400 font-semibold py-1 px-2 flex rounded shadow justify-center'\r\n                    onClick={() => {\r\n                        setAddNewBusinessPopupOpen(true);\r\n                    }}\r\n                >\r\n                    \r\n                    <PlusCircleIcon className='w-6 h-6'/>\r\n                    ADD NEW BUSINESS\r\n                    <Popup\r\n                        open={addNewBusinessPopupOpen}\r\n                        setOpen={setAddNewBusinessPopupOpen}\r\n                        header='New Business'\r\n                        additionalComponent={() => {return(<AddNewBusinessPopupBody\r\n                            setAddNewBusinessPopupOpen={setAddNewBusinessPopupOpen}\r\n                            updateBusinesses={updateBusinesses}\r\n                            getTime={getTime} getDate={getDate} getYear={getYear}\r\n                            user={user} database={database}\r\n                        />)}}\r\n                    />\r\n                </button>\r\n                </div>\r\n                {userBusinesses.length == 0 ?\r\n                    <p className='text-center text-gray-700 font-semibold pt-4'>NONE YET</p>\r\n                    :\r\n                    <div className=''>\r\n                        {userBusinesses.map(business => {\r\n                            return(\r\n                                <div className='lg:py-3 py-1'>\r\n                                    <Business business={business}/>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n            }\r\n            {selectedSection == 'My' && !userHasBAOLicense &&\r\n            <div>\r\n                <p className='text-center text-gray-700 font-semibold pt-4'>YOU DON'T HAVE A BUSINESS AND ORGANIZATION LICENSE</p>\r\n                <div className='flex justify-center py-2'>\r\n                <a \r\n                    href='/licenses'\r\n                    className='bg-yellow-300 py-1 px-2 flex hover:bg-yellow-400 font-semibold rounded shadow'>\r\n                    <CreditCardIcon className='w-6 h-6'/>\r\n                    GO TO LICENSES</a>\r\n                </div>\r\n            </div>\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\nfunction Purchase({purchase}){\r\n    return(\r\n        <div className='rounded bg-white border border-gray-400 shadow'>\r\n            <div className='bg-gray-100 border-b border-gray-400 rounded-t p-2 lg:grid-cols-none lg:flow-root grid grid-cols-2 gap-2'>\r\n                    <div className='lg:float-left'>\r\n                    \r\n                    <p className='text-gray-700 text-sm'>{purchase.type == 'Buy' ? 'BOUGHT' : 'ORDERED'}</p>\r\n                    <p className='text-lg text-gray-700 font-semibold'>\r\n                        {purchase.datePurchased}, {purchase.yearPurchased}</p>\r\n                    </div>\r\n                    <div className='lg:float-left lg:pl-4'>\r\n                    <p className='text-gray-700 text-sm'>TOTAL</p>\r\n                    <p className='text-lg text-gray-700 font-semibold'>{purchase.total} [M]</p>\r\n                    </div>\r\n                    <div className='lg:float-left lg:pl-4'>\r\n                    <p className='text-gray-700 text-sm'>BUSINESS</p>\r\n                    <p className='text-lg text-gray-700 font-semibold'>\r\n                        {purchase.business.name}</p>\r\n                    \r\n                    </div>\r\n                    <div className='lg:float-right'>\r\n                        <p className='text-gray-700 text-sm'>PURCHASE ID</p>\r\n                        <p className='text-lg text-gray-700 font-semibold lg:text-right'>{purchase.purchaseID}</p>\r\n                    </div>\r\n                </div>\r\n            <div className='p-2'>\r\n                <p className='text-2xl font-semibold'>{purchase.product.name} ({purchase.quantity})</p>\r\n                <p className='text-blue-900 text-lg uppercase font-semibold'>{purchase.type == 'Buy' ? purchase.product.buyingPrice : purchase.product.orderingPrice} [M] each</p>\r\n            </div>\r\n            {purchase.type == 'Order' &&\r\n            <div className='p-2 border-t border-gray-400'>\r\n                {purchase.delivered ?\r\n                    <p className='text-green-700 font-semibold text-lg'>Delivered {purchase.dateDelivered}, {purchase.yearDelivered} at {purchase.timeDelivered}</p>\r\n                     :\r\n                    <p className='font-semibold text-red-700 text-lg'>Not delivered</p>\r\n                }\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nfunction Business({business}){\r\n    return(\r\n        <button className={classNames('w-full')}\r\n            onClick={(event) => {\r\n                event.preventDefault();\r\n                database.ref(`/businesses/${business.businessID}`).get().then(businessSnapshot => {\r\n                    localStorage.setItem('selectedBusiness', JSON.stringify(businessSnapshot.val()));\r\n                    window.location.href = '/business';\r\n                })\r\n            }}\r\n        >\r\n            <div className='w-full bg-white border-2 shadow border-gray-500'>\r\n                <div className='p-2 flow-root w-full'>\r\n                    <p className='float-left text-xl font-bold'>{business.name}</p>\r\n                    <p className='float-right text-xl'>{business.founder.name}</p>\r\n                </div>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n}\r\n\r\nexport default Businesses;","import CitizenUserDropboxMenu from './CitizenUserDropboxMenu'\r\nimport React, {useEffect, useState} from 'react'\r\nimport { ArrowCircleUpIcon } from '@heroicons/react/outline';\r\n\r\nconst NewBusinessTransferPopupBody = ({database, user, setUser, business, updateBusiness, setMeldas, meldas, getTime, getDate, getYear, setTransfers, setNewBusinessTransferPopupOpen}) => {\r\n    const [citizens, setCitizens] = useState([]);\r\n    const [filteredCitizens, setFilteredCitizens] = useState([]);\r\n    const [selectedCitizen, setSelectedCitizen] = useState();\r\n    const [transferAmount, setTransferAmount] = useState(0);\r\n    const [transferReason, setTransferReason] = useState('');\r\n    const [salesTaxRate, setSalesTaxRate] = useState(0);\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    useEffect(()=>{addCitizens();\r\n        console.log('Called useeffect')\r\n    }, []);\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n      }\r\n    function addCitizens(){\r\n    database.ref('/citizens').get().then(citizensObjects => {\r\n        setCitizens(Object.values(citizensObjects.val()));\r\n        setFilteredCitizens(Object.values(citizensObjects.val()));\r\n        console.log(citizensObjects.val()[user.citizenID]);\r\n        database.ref('/government/salesTaxRate').get().then(salesTaxRateSnapshot => {\r\n            setSalesTaxRate(salesTaxRateSnapshot.val());\r\n        })\r\n        if(JSON.stringify(user) != JSON.stringify(citizensObjects.val()[user.citizenID])) setUser(citizensObjects.val()[user.citizenID]);\r\n        //setSelectedCitizen(Object.values(citizensObjects.val())[0]);\r\n        //console.log(Object.values(citizensObjects.val())[0])\r\n    })}\r\n\r\n    function onClickSendTransfer(){\r\n        var receiverResultingBalance = 0;\r\n        var senderResultingBalance = 0;\r\n        if(isTransferAmountValid()){\r\n        database.ref(`/citizens/${selectedCitizen.citizenID}/meldas`).get().then(\r\n            meldasSnapshot => {\r\n                const amountTaxed = Math.round(Number(transferAmount) * salesTaxRate);\r\n                receiverResultingBalance = (Number(meldasSnapshot.val()) + Number(transferAmount)) - amountTaxed;\r\n                database.ref(`/citizens/${selectedCitizen.citizenID}/meldas`).set(receiverResultingBalance);\r\n                database.ref(`/businesses/${business.businessID}/meldas`).get().then(\r\n                    meldasSnapshot => {\r\n                        senderResultingBalance = Number(meldasSnapshot.val()) - Number(transferAmount);\r\n                        database.ref(`/businesses/${business.businessID}/meldas`).set(senderResultingBalance);\r\n                        business.meldas = senderResultingBalance;\r\n                        const transferID = generateTransferID();\r\n                        database.ref(`/businesses/${business.businessID}/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount,\r\n                            receiverID: selectedCitizen.citizenID,\r\n                            receiverName: selectedCitizen.name,\r\n                            type: \"Outgoing\",\r\n                            reason: transferReason.length != 0 ? transferReason : 'None given',\r\n                            resultingBalance: senderResultingBalance\r\n                        }\r\n                        \r\n                    );\r\n                    database.ref(`/citizens/${selectedCitizen.citizenID}/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount - amountTaxed,\r\n                            senderID: business.businessID,\r\n                            senderName: business.name,\r\n                            type: \"Incoming\",\r\n                            reason: transferReason.length != 0 ? transferReason : 'None given',\r\n                            resultingBalance: receiverResultingBalance\r\n                        }\r\n                        \r\n                    );\r\n                    if(amountTaxed > 0){\r\n                        const taxTransferID = generateTransferID();\r\n                        database.ref('/government').get().then(governmentSnapshot => {\r\n                            var governmentFunds = governmentSnapshot.val().meldas;\r\n                            const newGovernmentFunds = governmentFunds + amountTaxed;\r\n                            database.ref('/government/meldas').set(newGovernmentFunds);\r\n                            database.ref(`/government/transfers/${taxTransferID}`).set(\r\n                                {\r\n                                    transferID: taxTransferID,\r\n                                    date: `${getDate()}, ${getYear()}`,\r\n                                    time: getTime(),\r\n                                    ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                    amount: amountTaxed,\r\n                                    senderID: business.businessID,\r\n                                    senderName: business.name,\r\n                                    type: \"Incoming\",\r\n                                    reason: `${salesTaxRate * 100}% tax of ${transferID}`,\r\n                                    resultingBalance: newGovernmentFunds\r\n                                }\r\n                            )\r\n                        })\r\n                    }\r\n                    database.ref(`/businesses/${business.businessID}/transfers`).get().then(\r\n                        transfersSnapshot => {\r\n                            console.log(\"Transfers\", transfersSnapshot.val())\r\n                            business.transfers = Object.values(transfersSnapshot.val()).sort((transfer1, transfer2) => {\r\n                                return transfer2.ssre - transfer1.ssre\r\n                            });\r\n                            updateBusiness();\r\n                            localStorage.setItem('selectedBusiness', JSON.stringify(business));\r\n                            setNewBusinessTransferPopupOpen(false);\r\n                        }\r\n                    )\r\n                    /* database.ref(`/citizens/${user[\"Citizen ID\"]}/ArrayTest`).set(\r\n                        ['igrn', 'griolw', 'gej', 'aqe']\r\n                    ); */\r\n                    }\r\n                    \r\n                )\r\n            }\r\n        );\r\n        }\r\n    }\r\n\r\n    function generateTransferID(){\r\n        var transferID = 'MT-'\r\n        for(var i = 0; i < 5; i++){\r\n            transferID = transferID + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(transferID);\r\n    }\r\n\r\n    function isTransferAmountValid(){\r\n        return selectedCitizen != undefined && String(transferAmount).length != 0 && !String(transferAmount).startsWith('-') \r\n                && (Number(business.meldas) - Number(transferAmount) >= 0) && transferAmount != 0;\r\n    }\r\n\r\n    return(\r\n        <div className='w-full justify-center '>\r\n            <div className='pb-4'>\r\n            <div className='p-5 bg-blue-200 rounded shadow'>\r\n                <div className=''>\r\n                <div className='w-full pb-2'>\r\n                <p className='text-sm font-bold'>TO</p>\r\n                <CitizenUserDropboxMenu\r\n                    filteredCitizens={filteredCitizens}\r\n                    setFilteredCitizens={setFilteredCitizens}\r\n                    citizens={citizens}\r\n                    selectedCitizen={selectedCitizen}\r\n                    setSelectedCitizen={setSelectedCitizen}\r\n                    className='pb-2'\r\n                    user={user}\r\n                    type='All'\r\n                />\r\n                </div>\r\n                <div className='w-full pb-2'>\r\n                <p className='text-sm font-bold'>AMOUNT</p>\r\n                <div className='flex w-full justify-center'>\r\n                <input type='Number' placeholder='' min={0} max={business.meldas} defaultValue={transferAmount} onChange={event => {setTransferAmount(Number(event.target.value))}} className='rounded appearance-textfield flex justify-center w-full focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-1'></input>\r\n                <p className='font-semibold pl-1 text-xl'>[M]</p>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                <div className='pb-2'>\r\n                <p className='text-sm font-bold'>REASON</p>\r\n                <div className='flex justify-center'>\r\n                <textarea placeholder='' onChange={event => {setTransferReason(event.target.value)}} className='rounded w-full bg-white h-20 flex justify-center resize-none focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-2'></textarea>\r\n                </div>\r\n                </div>\r\n                {isTransferAmountValid() &&\r\n                <div>\r\n                <div className='pb-2'>\r\n                    \r\n                    <p className='text-sm font-bold'>RESULTING BALANCE</p>\r\n                    \r\n                    <p className='p-1 font-semibold shadow bg-white '>{Number(business.meldas) - Number(transferAmount)} {'[M]'}</p>\r\n                </div>\r\n                <div className='pb-2'>\r\n                    \r\n                <p className='text-sm font-bold'>AMOUNT TAXED</p>\r\n                \r\n                <p className='p-1 font-semibold shadow bg-white '>{Math.round(Number(transferAmount) * Number(salesTaxRate))} [M]</p>\r\n            </div>\r\n                </div>}\r\n            </div>\r\n            </div>\r\n            <button className={classNames(\r\n                isTransferAmountValid()\r\n                ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'w-1/3 rounded py-1 px-2 font-semibold shadow')}\r\n                onClick={onClickSendTransfer}\r\n            >\r\n                <div className='flex justify-center'>\r\n                <ArrowCircleUpIcon className='h-6 w-6'/>\r\n                SEND\r\n                </div>\r\n                </button>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(NewBusinessTransferPopupBody)","import { useState, useEffect } from \"react\"\r\nimport { CollectionIcon, LibraryIcon, BriefcaseIcon, PlusCircleIcon, ArrowCircleLeftIcon, TruckIcon, PencilAltIcon, XCircleIcon, CheckCircleIcon, ArrowCircleUpIcon, ArrowCircleDownIcon } from \"@heroicons/react/outline\";\r\nimport Popup from \"../Low Level/Popup\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CitizenUserDropboxMenu from \"../Low Level/CitizenUserDropboxMenu\";\r\nimport NewTransferPopupBody from \"../Low Level/NewTransferPopupBody\";\r\nimport NewBusinessTransferPopupBody from \"../Low Level/NewBusinessTransferPopupBody\";\r\n\r\n\r\nconst Business = ({database, user, setUser, getTime, getDate, getYear}) => {\r\n    const [selectedBusiness, setSelectedBusiness] = useState(JSON.parse(localStorage.getItem('selectedBusiness')));\r\n    const [selectedSection, setSelectedSection] = useState('Items');\r\n    const [addItemPopupOpen, setAddItemPopupOpen] = useState(false);\r\n    const [editItemPopupOpen, setEditItemPopupOpen] = useState(false);\r\n    const [productBeingEdited, setProductBeingEdited] = useState();\r\n    const [citizens, setCitizens] = useState([]);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [filteredCitizens, setFilteredCitizens] = useState([]);\r\n    const [transferDropboxCitizens, setTransferDropboxCitizens] = useState([]);\r\n    const [filteredTransferDropboxCitizens, setFilteredTransferDropboxCitizens] = useState([])\r\n    const [selectedCitizen, setSelectedCitizen] = useState();\r\n    const [newTransferPopupOpen, setNewTransferPopupOpen] = useState(false);\r\n    const [newBusinessName, setNewBusinessName] = useState(JSON.parse(localStorage.getItem('selectedBusiness')).name);\r\n    const [newBusinessDescription, setNewBusinessDescription] = useState(JSON.parse(localStorage.getItem('selectedBusiness')).description);\r\n    const [salesTaxRate, setSalesTaxRate] = useState(0);\r\n\r\n\r\n    const rushingtonEpoch = 1522648800;\r\n\r\n    useEffect(updateCitizens, []);\r\n\r\n    function updateCitizens(){\r\n    database.ref('/citizens').get().then(citizensObjects => {\r\n        const citizens = Object.values(citizensObjects.val()).filter(citizen => {\r\n            var citizenIsNotInList = true;\r\n            Object.values(selectedBusiness.owners).forEach(owner => {\r\n                if(owner.citizenID == citizen.citizenID) citizenIsNotInList = false;\r\n            })\r\n            return citizenIsNotInList;\r\n        });\r\n        setCitizens(citizens);\r\n        setFilteredCitizens(citizens);\r\n        database.ref('/government/salesTaxRate').get().then(salesTaxRateSnapshot => {\r\n            setSalesTaxRate(salesTaxRateSnapshot.val());\r\n        })\r\n    })}\r\n\r\n    const navigationSections = selectedBusiness.founder.citizenID == user.citizenID ? [\r\n        {sectionName: 'Items', sectionSelected: selectedSection == 'Items', icon: CollectionIcon},\r\n        {sectionName: 'Bank Account', sectionSelected: selectedSection == 'Bank Account', icon: LibraryIcon},\r\n        {sectionName: 'Orders', sectionSelected: selectedSection == 'Orders', icon: TruckIcon},\r\n        {sectionName: 'Manage', sectionSelected: selectedSection == 'Manage', icon: BriefcaseIcon}\r\n    ] : \r\n    [\r\n        {sectionName: 'Items', sectionSelected: selectedSection == 'Items', icon: CollectionIcon},\r\n        {sectionName: 'Bank Account', sectionSelected: selectedSection == 'Bank Account', icon: LibraryIcon},\r\n        {sectionName: 'Orders', sectionSelected: selectedSection == 'Orders', icon: TruckIcon}\r\n    ]\r\n\r\n    const userIsOwner = checkUserIsOwner();\r\n\r\n    function checkUserIsOwner(){\r\n        var userIsOwner = false;\r\n        Object.values(selectedBusiness.owners).forEach(owner => {\r\n            if(owner.citizenID == user.citizenID) userIsOwner = true;\r\n        });\r\n        return userIsOwner;\r\n    }\r\n\r\n    console.log('userIsOwner', userIsOwner);\r\n\r\n    useEffect(updateBusiness, []);\r\n\r\n    function updateBusiness(){\r\n        database.ref(`/businesses/${selectedBusiness.businessID}`).get().then(business => {\r\n            setSelectedBusiness(business.val());\r\n            localStorage.setItem('selectedBusiness', JSON.stringify(business.val()));\r\n        })\r\n    }\r\n\r\n    function censor(id){\r\n        return(id.startsWith('CI-') && user.citizenID != id ? `CI-***${id.substring(6, 8)}` : id);\r\n    }\r\n\r\n    function generateID(prefix){\r\n        var transferID = `${prefix}-`\r\n        for(var i = 0; i < 5; i++){\r\n            transferID = transferID + String(Math.floor(Math.random()*10));\r\n        }\r\n        return(transferID);\r\n    }\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(\" \");\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {userIsOwner &&\r\n                <div className='grid grid-cols-5 gap-5'>\r\n                    <div className='col-span-5 lg:col-span-1 lg:h-40 lg:sticky lg:top-6'>\r\n                    \r\n                    {navigationSections.map(navigationSection => {\r\n                        const Icon = navigationSection.icon;\r\n                        return(\r\n                        \r\n                        <div className='flex-auto lg:flex-none'>\r\n                        <button\r\n                            onClick={()=>{setSelectedSection(navigationSection.sectionName);\r\n                            }}\r\n                            className={classNames(navigationSection.sectionSelected ? 'bg-gray-200' : 'bg-white hover:bg-gray-100',\r\n                                'rounded p-2 w-full text-center lg:text-left'\r\n                            )}\r\n                        >\r\n                            <div className='flex gap-2 justify-center lg:justify-start'>\r\n                                <Icon className='h-6 w-6'\r\n                                    fill='white'\r\n                                />\r\n                            <p className='text-gray-800 font-semibold'>{navigationSection.sectionName}</p>\r\n                            </div>\r\n                            </button>\r\n                        </div>\r\n                        )\r\n                    })}\r\n                    \r\n                </div>\r\n                <div className='col-span-5 lg:col-span-4 bg-gray-100 rounded'>\r\n                    {selectedSection == 'Items' &&\r\n                        <div>\r\n                            <Popup\r\n                            header='Edit Product'\r\n                            additionalComponent={() => {return <EditProductPopupBody/>}}\r\n                            open={editItemPopupOpen}\r\n                            setOpen={setEditItemPopupOpen}\r\n                        />\r\n                            <div className='gap-y-2 border-b border-gray-500'>\r\n                            <a className='rounded bg-yellow-300 w-56 py-1 px-2 m-2 font-semibold hover:bg-yellow-400 flex justify-center shadow'\r\n                    href='/businesses'\r\n                >\r\n                                <ArrowCircleLeftIcon className='h-6 w-6'/>\r\n                                BACK TO BUSINESSES\r\n                </a>\r\n            <div className='gap-y-2 py-2'>\r\n                <div className='bg-white border-2 border-gray-700 p-2 m-2 shadow'>\r\n                <p className='text-center text-3xl font-bold'>{selectedBusiness.name}</p>\r\n                <p className='text-center text-lg'>{selectedBusiness.description}</p>\r\n                </div>\r\n            </div>\r\n                        </div>\r\n                            <div className='flow-root px-2'>\r\n                            <div className='float-left py-2'>\r\n                            <button className='bg-yellow-300 hover:bg-yellow-400 font-semibold rounded shadow flex py-1 px-2'\r\n                                onClick={() => {\r\n                                    setAddItemPopupOpen(true);\r\n                                }}\r\n                            >\r\n                                <Popup\r\n                                    header='New Product'\r\n                                    additionalComponent={() => {return <AddItemPopupBody/>}}\r\n                                    open={addItemPopupOpen}\r\n                                    setOpen={setAddItemPopupOpen}\r\n                                />\r\n                                <PlusCircleIcon className='w-6 h-6'/>\r\n                                ADD ITEM\r\n                            </button>\r\n                            </div>\r\n                            <div className='float-right'>\r\n                                <p className='font-bold text-center'>Personal Balance</p>\r\n                                <p className='text-center border-2 border-gray-500 font-semibold bg-white'>{user.meldas} [M]</p>\r\n                            </div>\r\n                            <input className='rounded w-full border-2 border-gray-500 focus:outline-none focus:ring-1 focus:ring-gray-700 focus:border-gray-700 p-2 mt-8 mb-3'\r\n                    placeholder='Search products...'\r\n                    onChange={event => {\r\n                        setSearchInput(event.target.value);\r\n                    }}\r\n                    ></input>\r\n                            </div>\r\n                            <div className=''>\r\n                                {selectedBusiness.products != undefined &&\r\n                                    <div className='lg:grid lg:grid-cols-4 gap-2 m-2'>\r\n                                        {Object.values(selectedBusiness.products).sort((product1, product2) => {\r\n                                            return(product1.name.localeCompare(product2.name))\r\n                                        }).filter(product => {\r\n                                            if(searchInput != ''){\r\n                                                return product.name.toUpperCase().includes(searchInput.toUpperCase());\r\n                                            } else {\r\n                                                return true;\r\n                                            }\r\n                                        }).map(product => {\r\n                                            return(\r\n                                                <div className='pt-2'>\r\n                                                <Product product={product}/>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                                {selectedBusiness.products == undefined &&\r\n                                    <p className='font-semibold text-center text-gray-700 pt-3 pb-6'>\r\n                                        NO PRODUCTS YET\r\n                                    </p>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {selectedSection == 'Bank Account' &&\r\n                        <div className='mx-1 lg:mx-2 my-1 lg:my-2'>\r\n                        <div className='flow-root p-2'>\r\n                            <div className='float-left'>\r\n                        <p className='text-3xl text-black font-bold'>Bank</p>\r\n                        \r\n                        </div>\r\n                        \r\n                        <div className='float-right'>\r\n                            <button className='rounded bg-yellow-300 p-2 font-semibold hover:bg-yellow-400 flex shadow'\r\n                                onClick={()=>{setNewTransferPopupOpen(true)}}\r\n                            ><PlusCircleIcon className='w-6 h-6'/><p className='pl-1'>NEW TRANSFER</p>\r\n                            <Popup\r\n                                open={newTransferPopupOpen}\r\n                                setOpen={setNewTransferPopupOpen}\r\n                                header='New Transfer'\r\n                                onClickSave={()=>{}}\r\n                                inputs={[]}\r\n            \r\n                                saveText={'Send'}\r\n                                additionalComponent={()=>{return <NewBusinessTransferPopupBody database={database} user={user}\r\n                                    business={selectedBusiness} updateBusiness={updateBusiness} setUser={setUser}\r\n                                    getTime={getTime} getDate={getDate} getYear={getYear} setNewBusinessTransferPopupOpen={setNewTransferPopupOpen}/>}}\r\n                            />\r\n                            </button>\r\n                        </div>\r\n                        </div>\r\n                        <div className='p-2 group bg-gray-100 rounded'>\r\n                        <div className='lg:flow-root w-full  p-1 shadow bg-white border-4 border-gray-500 text-bottom'>\r\n                            <div className='lg:float-left text-bottom bg-white'>\r\n                            <p className='text-2xl font-semibold pl-1 text-gray-700'>Current Balance</p>\r\n                            \r\n                            \r\n                            </div>\r\n                        <div className='flex justify-center text-2xl font-bold lg:float-right px-1 border-2 border-gray-500 bg-white'>\r\n                            <p className='pr-1'>{selectedBusiness.meldas}</p>\r\n                            <p>[M]</p>\r\n                        </div>\r\n                        </div>\r\n                        \r\n                        <div className='w-full border-gray-500 border-b-4 border-r-4 border-l-4 bg-white'>\r\n                            \r\n                            <p className='font-semibold text-gray-700 px-2 pt-2 text-2xl'>Transaction History</p>\r\n                            {selectedBusiness.transfers != undefined && Object.values(selectedBusiness.transfers).length != 0 ?\r\n                            <div className='lg:p-2 p-1 bg-gray-200'>\r\n                            {Object.values(selectedBusiness.transfers).sort((transfer1, transfer2) => {\r\n                                return transfer2.ssre - transfer1.ssre;\r\n                            }).map(transfer => {\r\n                                return(\r\n                                    <div className='p-1'>\r\n                                        <Transfer transfer={transfer}/>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            </div> :\r\n                            <div className='p-2 bg-gray-100'>\r\n                            <p className='font-semibold text-2xl'>Nothing yet</p>\r\n                            </div>\r\n                        }\r\n                            \r\n                        </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n                    }\r\n                    {selectedSection == 'Orders' &&\r\n                    <div className='m-4'>\r\n                        <div className=''>\r\n                            <p className='text-3xl text-black font-bold'>Orders</p>\r\n                        </div>\r\n                        {selectedBusiness.orders != undefined ?\r\n                        <div>\r\n                        {Object.values(selectedBusiness.orders).sort((order1, order2) => {\r\n                            return(order2.ssre - order1.ssre);\r\n                        }).map(order => {\r\n                            return(\r\n                            <div className='py-2'>\r\n                                <Order order={order}/>\r\n                            </div>)\r\n                        })}\r\n                    </div> : \r\n                    <p className='text-center text-gray-700 py-4 font-semibold'>NONE YET</p>\r\n                    }\r\n                    </div>\r\n                    }\r\n                    {selectedSection == 'Manage' &&\r\n                        <div>\r\n                            <div className='p-4'>\r\n                        <p className='text-3xl text-black font-bold'>Manage</p>\r\n                        \r\n                        </div>\r\n                            <div className='py-4 rounded bg-white mx-4 my-2 shadow'>\r\n                                <p className='font-bold text-sm text-center'>ADD OWNER</p>\r\n                            <CitizenUserDropboxMenu\r\n                                citizens={citizens}\r\n                                filteredCitizens={filteredCitizens}\r\n                                setFilteredCitizens={setFilteredCitizens}\r\n                                user={user}\r\n                                selectedCitizen={selectedCitizen}\r\n                                setSelectedCitizen={setSelectedCitizen}\r\n                            />\r\n                            <div className='flex justify-center pt-2'>\r\n                            <button className={classNames(\r\n                                selectedCitizen != undefined ? 'bg-yellow-300 hover:bg-yellow-400' : 'bg-yellow-200 text-gray-400',\r\n                                'font-semibold rounded shadow px-2 py-1 flex')}\r\n                                onClick={() => {\r\n                                    const ownersList = Object.values(selectedBusiness.owners);\r\n                                    ownersList.push(\r\n                                        {\r\n                                            citizenID: selectedCitizen.citizenID,\r\n                                            name: selectedCitizen.name\r\n                                        }\r\n                                    );\r\n                                    database.ref(`/businesses/${selectedBusiness.businessID}/owners`).set(ownersList);\r\n                                    updateBusiness();\r\n                                }}\r\n                                >\r\n                                <PlusCircleIcon className='h-6 w-6'/>\r\n                                ADD\r\n                            </button>\r\n                            </div>\r\n                            </div>\r\n                            <div className='p-4'>\r\n                            {Object.values(selectedBusiness.owners).map(owner => {\r\n                                return(\r\n                                    <div className='py-2'>\r\n                                    <div className='bg-white border-2 border-gray-700 shadow p-2'>\r\n                                        <div className='flow-root'>\r\n                                        <p className='float-left font-bold text-lg'>{owner.name}</p>\r\n                                        <p className='float-right text-lg'>{censor(owner.citizenID)}</p>\r\n                                        </div>\r\n                                        {owner.citizenID != user.citizenID &&\r\n                                            <div className='flex justify-center'>\r\n                                            <button className='bg-yellow-300 hover:bg-yellow-400 rounded shadow px-2 py-1 flex font-semibold'\r\n                                                onClick={() => {\r\n                                                    const ownersList = Object.values(selectedBusiness.owners);\r\n                                                    ownersList.splice(ownersList.indexOf(owner), 1);\r\n                                                    database.ref(`/businesses/${selectedBusiness.businessID}/owners`).set(ownersList);\r\n                                                    updateBusiness();\r\n                                                }}\r\n                                            >\r\n                                                <XCircleIcon className='w-6 h-6'/>\r\n                                                REMOVE OWNER\r\n                                            </button>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            </div>\r\n                            <div className='py-4 border-t border-gray-500'>\r\n                                <div className='p-4'>\r\n                            <input className='w-full rounded border-2 border-gray-500 focus:outline-none focus:ring-1 focus:ring-gray-700 focus:border-gray-700 p-2'\r\n                                defaultValue={selectedBusiness.name}\r\n                                placeholder='Business name'\r\n                                onChange={event => {\r\n                                    setNewBusinessName(event.target.value);\r\n                                }}></input>\r\n                            </div>\r\n                            <div className='p-4'>\r\n                            <textarea className='w-full resize-none rounded border-2 border-gray-500 focus:outline-none focus:ring-1 focus:ring-gray-700 focus:border-gray-700 p-2'\r\n                                defaultValue={selectedBusiness.description}\r\n                                placeholder='Business description'\r\n                                onChange={event => {\r\n                                    setNewBusinessDescription(event.target.value);\r\n                                }}\r\n                            >\r\n                            </textarea>\r\n                            </div>\r\n                            {(newBusinessName != selectedBusiness.name || newBusinessDescription != selectedBusiness.description) &&\r\n                                newBusinessName && newBusinessDescription &&\r\n                            <div className='flex justify-center'>\r\n                            <button className='bg-yellow-300 hover:bg-yellow-400 rounded shadow px-2 py-1 flex font-semibold'\r\n                                onClick={() => {\r\n                                    database.ref(`/businesses/${selectedBusiness.businessID}/name`).set(newBusinessName);\r\n                                    database.ref(`/businesses/${selectedBusiness.businessID}/description`).set(newBusinessDescription);\r\n                                    updateBusiness();\r\n                                }}\r\n                            >\r\n                                <CheckCircleIcon className='h-6 w-6'/>\r\n                                UPDATE NAME AND DESCRIPTION\r\n                                </button>\r\n                            </div>}\r\n                            </div>\r\n                            <div className='flex justify-center py-4 border-t border-gray-500'>\r\n                            <button className='bg-yellow-300 hover:bg-yellow-400 rounded shadow px-2 py-1 flex font-semibold'\r\n                                onClick={() => {\r\n                                    database.ref(`/businesses/${selectedBusiness.businessID}`).set(null);\r\n                                    window.location.href = '/businesses'\r\n                                }}>\r\n                                    <XCircleIcon className='w-6 h-6'/>\r\n                                    DELETE BUSINESS\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                </div>\r\n            }\r\n            {!userIsOwner &&\r\n            <div className='bg-gray-100 rounded p-2'>\r\n                \r\n                <a className='rounded bg-yellow-300 w-56 py-1 px-2 font-semibold hover:bg-yellow-400 flex justify-center shadow'\r\n                    href='/businesses'\r\n                >\r\n                                <ArrowCircleLeftIcon className='h-6 w-6'/>\r\n                                BACK TO BUSINESSES\r\n                </a>\r\n            <div className='gap-y-2 py-6 border-b border-gray-500'>\r\n                <div className='bg-white border-2 border-gray-700 py-2 shadow'>\r\n                <p className='text-center text-3xl font-bold'>{selectedBusiness.name}</p>\r\n                <p className='text-center text-lg'>{selectedBusiness.description}</p>\r\n                </div>\r\n            </div>\r\n            <div className='flow-root px-2'>\r\n            <div className='float-right'>\r\n                <p className='font-bold text-center'>Personal Balance</p>\r\n                <p className='text-center border-2 border-gray-500 font-semibold bg-white'>{user.meldas} [M]</p>\r\n            </div>\r\n            <input className='rounded w-full border-2 border-gray-500 focus:outline-none focus:ring-1 focus:ring-gray-700 focus:border-gray-700 p-2 mt-8 mb-3'\r\n                    placeholder='Search products...'\r\n                    onChange={event => {\r\n                        setSearchInput(event.target.value);\r\n                    }}\r\n                    ></input>\r\n            </div>\r\n            <div className=''>\r\n                {selectedBusiness.products != undefined &&\r\n                    <div className='lg:grid lg:grid-cols-4 gap-2 lg:m-2 m-1'>\r\n                        {Object.values(selectedBusiness.products).sort((product1, product2) => {\r\n                            return(product1.name.localeCompare(product2.name))\r\n                        }).filter(product => {\r\n                            if(searchInput != ''){\r\n                                return product.name.toUpperCase().includes(searchInput.toUpperCase());\r\n                            } else {\r\n                                return true;\r\n                            }\r\n                        }).map(product => {\r\n                            return(\r\n                                <div className='pt-2'>\r\n                                <Product product={product}/>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n                {selectedBusiness.products == undefined &&\r\n                    <p className='font-semibold text-center text-gray-700 pt-3 pb-6'>\r\n                        NO PRODUCTS YET\r\n                    </p>\r\n                }\r\n            </div>\r\n        </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n    function Product({product}){\r\n        const [quantity, setQuantity] = useState(1);\r\n        return(\r\n            <div className='bg-white shadow rounded place-content-end'>\r\n                \r\n                <p className='text-center font-bold p-2 text-xl'>{product.name}</p>\r\n                <p className='text-sm font-bold text-center text-gray-700'>NUMBER</p>\r\n                <div className='px-4 pb-2'>\r\n                <input type='Number' defaultValue={1} min={1}\r\n                    onChange={event => {\r\n                        if(event.target.value > 0){\r\n                        setQuantity(event.target.value);\r\n                        }\r\n                    }}\r\n                    className='border-2 border-gray-500 focus:outline-none focus:ring-1 focus:ring-gray-700 focus:border-gray-700 w-full p-1'></input>\r\n                </div>\r\n                <div className='flex'>\r\n                {product.buyable &&\r\n                    <div className={classNames(product.orderable ? 'pr-1' : 'pr-2', 'pl-2 py-2 flex-1')}>\r\n                    <button className={classNames((product.buyingPrice * quantity) <= user.meldas ? 'bg-yellow-300 hover:bg-yellow-400' : 'bg-yellow-200 text-gray-400', 'w-full shadow rounded font-semibold py-1 px-2')}\r\n                        onClick={() => {\r\n                            var businessResultingBalance = 0;\r\n        var senderResultingBalance = 0;\r\n        if((product.buyingPrice * quantity) <= user.meldas){\r\n            const transferAmount = Number(quantity * product.buyingPrice);\r\n        database.ref(`/businesses/${selectedBusiness.businessID}/meldas`).get().then(\r\n            meldasSnapshot => {\r\n                const amountTaxed = Math.round(Number(transferAmount) * salesTaxRate);\r\n                businessResultingBalance = Number(meldasSnapshot.val()) + transferAmount - amountTaxed;\r\n                database.ref(`/businesses/${selectedBusiness.businessID}/meldas`).set(businessResultingBalance);\r\n                database.ref(`/citizens/${user.citizenID}/meldas`).get().then(\r\n                    meldasSnapshot => {\r\n                        senderResultingBalance = Number(meldasSnapshot.val()) - transferAmount\r\n                        database.ref(`/citizens/${user.citizenID}/meldas`).set(senderResultingBalance);\r\n                        user.meldas = senderResultingBalance;\r\n                        const transferID = generateID('MT');\r\n                        database.ref(`/citizens/${user.citizenID}/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount,\r\n                            receiverID: selectedBusiness.businessID,\r\n                            receiverName: selectedBusiness.name,\r\n                            type: \"Outgoing\",\r\n                            reason: `Bought ${quantity} of '${product.name}'`,\r\n                            resultingBalance: senderResultingBalance,\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                        }\r\n                        \r\n                    );\r\n                    database.ref(`/businesses/${selectedBusiness.businessID}/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount - amountTaxed,\r\n                            senderID: user.citizenID,\r\n                            senderName: user.name,\r\n                            type: \"Incoming\",\r\n                            reason: `Bought ${quantity} of '${product.name}'`,\r\n                            resultingBalance: businessResultingBalance,\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                        }\r\n                        \r\n                    );\r\n                    const purchaseID = generateID('PU');\r\n                    database.ref(`/citizens/${user.citizenID}/businessPurchases/${purchaseID}`).set(\r\n                        {\r\n                            purchaseID: purchaseID,\r\n                            type: 'Buy',\r\n                            product: {\r\n                                name: product.name,\r\n                                productID: product.productID,\r\n                                buyingPrice: product.buyingPrice\r\n                            },\r\n                            business: {\r\n                                businessID: selectedBusiness.businessID,\r\n                                name: selectedBusiness.name,\r\n                                description: selectedBusiness.description\r\n                            },\r\n                            quantity: quantity,\r\n                            total: transferAmount,\r\n                            timePurchased: getTime(),\r\n                            datePurchased: getDate(),\r\n                            yearPurchased: getYear(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch)\r\n                        }\r\n                    );\r\n                    if(amountTaxed > 0){\r\n                        const taxTransferID = generateID('MT');\r\n                        database.ref('/government').get().then(governmentSnapshot => {\r\n                            var governmentFunds = governmentSnapshot.val().meldas;\r\n                            const newGovernmentFunds = governmentFunds + amountTaxed;\r\n                            database.ref('/government/meldas').set(newGovernmentFunds);\r\n                            database.ref(`/government/transfers/${taxTransferID}`).set(\r\n                                {\r\n                                    transferID: taxTransferID,\r\n                                    date: `${getDate()}, ${getYear()}`,\r\n                                    time: getTime(),\r\n                                    ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                    amount: amountTaxed,\r\n                                    senderID: user.citizenID,\r\n                                    senderName: user.name,\r\n                                    type: \"Incoming\",\r\n                                    reason: `${salesTaxRate * 100}% tax of ${transferID}`,\r\n                                    resultingBalance: newGovernmentFunds\r\n                                }\r\n                            )\r\n                        })\r\n                    }\r\n                    setUser(user);\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    updateBusiness();\r\n                    /* database.ref(`/citizens/${user[\"Citizen ID\"]}/ArrayTest`).set(\r\n                        ['igrn', 'griolw', 'gej', 'aqe']\r\n                    ); */\r\n                    }\r\n                    \r\n                )\r\n            }\r\n        );\r\n        }\r\n                        }}\r\n                    >\r\n                        <div className='flex justify-center'>\r\n                            BUY\r\n                        </div>\r\n                        <p>{quantity * product.buyingPrice} [M]</p>\r\n                    </button>\r\n                    </div>\r\n                }\r\n                {product.orderable &&\r\n                    <div className={classNames(product.orderable ? 'pl-1' : 'pl-2', 'pr-2 py-2 flex-1')}>\r\n                    <button className={classNames((product.orderingPrice * quantity) <= user.meldas ? 'bg-yellow-300 hover:bg-yellow-400' : 'bg-yellow-200 text-gray-400', 'w-full shadow rounded font-semibold py-1 px-2')}\r\n                        onClick={() => {\r\n                            var businessResultingBalance = 0;\r\n        var senderResultingBalance = 0;\r\n        if((product.orderingPrice * quantity) <= user.meldas){\r\n            const transferAmount = Number(quantity * product.orderingPrice);\r\n        database.ref(`/businesses/${selectedBusiness.businessID}/meldas`).get().then(\r\n            meldasSnapshot => {\r\n                const amountTaxed = Math.round(Number(transferAmount) * salesTaxRate);\r\n                businessResultingBalance = Number(meldasSnapshot.val()) + transferAmount - amountTaxed;\r\n                database.ref(`/businesses/${selectedBusiness.businessID}/meldas`).set(businessResultingBalance);\r\n                database.ref(`/citizens/${user.citizenID}/meldas`).get().then(\r\n                    meldasSnapshot => {\r\n                        senderResultingBalance = Number(meldasSnapshot.val()) - transferAmount;\r\n                        database.ref(`/citizens/${user.citizenID}/meldas`).set(senderResultingBalance);\r\n                        user.meldas = senderResultingBalance;\r\n                        const transferID = generateID('MT');\r\n                        database.ref(`/citizens/${user.citizenID}/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount,\r\n                            receiverID: selectedBusiness.businessID,\r\n                            receiverName: selectedBusiness.name,\r\n                            type: \"Outgoing\",\r\n                            reason: `Ordered ${quantity} of '${product.name}'`,\r\n                            resultingBalance: senderResultingBalance,\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                        }\r\n                        \r\n                    );\r\n                    database.ref(`/businesses/${selectedBusiness.businessID}/transfers/${transferID}`).set(\r\n                        {\r\n                            transferID: transferID,\r\n                            date: `${getDate()}, ${getYear()}`,\r\n                            time: getTime(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                            amount: transferAmount - amountTaxed,\r\n                            senderID: user.citizenID,\r\n                            senderName: user.name,\r\n                            type: \"Incoming\",\r\n                            reason: `Ordered ${quantity} of '${product.name}'`,\r\n                            resultingBalance: businessResultingBalance,\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                        }\r\n                        \r\n                    );\r\n                    const purchaseID = generateID('PU');\r\n                    database.ref(`/citizens/${user.citizenID}/businessPurchases/${purchaseID}`).set(\r\n                        {\r\n                            purchaseID: purchaseID,\r\n                            type: 'Order',\r\n                            delivered: false,\r\n                            product: {\r\n                                name: product.name,\r\n                                productID: product.productID,\r\n                                orderingPrice: product.orderingPrice\r\n                            },\r\n                            business: {\r\n                                businessID: selectedBusiness.businessID,\r\n                                name: selectedBusiness.name,\r\n                                description: selectedBusiness.description\r\n                            },\r\n                            quantity: quantity,\r\n                            total: transferAmount,\r\n                            timePurchased: getTime(),\r\n                            datePurchased: getDate(),\r\n                            yearPurchased: getYear(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch)\r\n                        }\r\n                    );\r\n                    database.ref(`/businesses/${selectedBusiness.businessID}/orders/${purchaseID}`).set(\r\n                        {\r\n                            purchaseID: purchaseID,\r\n                            delivered: false,\r\n                            product: {\r\n                                name: product.name,\r\n                                productID: product.productID,\r\n                                orderingPrice: product.orderingPrice\r\n                            },\r\n                            business: {\r\n                                businessID: selectedBusiness.businessID,\r\n                                name: selectedBusiness.name,\r\n                                description: selectedBusiness.description\r\n                            },\r\n                            customer: {\r\n                                citizenID: user.citizenID,\r\n                                name: user.name\r\n                            },\r\n                            quantity: quantity,\r\n                            total: transferAmount - amountTaxed,\r\n                            timePurchased: getTime(),\r\n                            datePurchased: getDate(),\r\n                            yearPurchased: getYear(),\r\n                            ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch)\r\n                        }\r\n                    );\r\n                    if(amountTaxed > 0){\r\n                        const taxTransferID = generateID('MT');\r\n                        database.ref('/government').get().then(governmentSnapshot => {\r\n                            var governmentFunds = governmentSnapshot.val().meldas;\r\n                            const newGovernmentFunds = governmentFunds + amountTaxed;\r\n                            database.ref('/government/meldas').set(newGovernmentFunds);\r\n                            database.ref(`/government/transfers/${taxTransferID}`).set(\r\n                                {\r\n                                    transferID: taxTransferID,\r\n                                    date: `${getDate()}, ${getYear()}`,\r\n                                    time: getTime(),\r\n                                    ssre: Math.round(((new Date()).getTime()/1000)-rushingtonEpoch),\r\n                                    amount: amountTaxed,\r\n                                    senderID: user.citizenID,\r\n                                    senderName: user.name,\r\n                                    type: \"Incoming\",\r\n                                    reason: `${salesTaxRate * 100}% tax of ${transferID}`,\r\n                                    resultingBalance: newGovernmentFunds\r\n                                }\r\n                            )\r\n                        })\r\n                    }\r\n                    setUser(user);\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    updateBusiness();\r\n                    /* database.ref(`/citizens/${user[\"Citizen ID\"]}/ArrayTest`).set(\r\n                        ['igrn', 'griolw', 'gej', 'aqe']\r\n                    ); */\r\n                    }\r\n                    \r\n                )\r\n            }\r\n        );\r\n        }\r\n                        }}\r\n                    >\r\n                        <div className='flex justify-center'>\r\n                            ORDER\r\n                        </div>\r\n                        <p>{quantity * product.orderingPrice} [M]</p>\r\n                    </button>\r\n                    </div>\r\n                }\r\n                </div>\r\n                {userIsOwner &&\r\n                    <div className='grid grid-cols-2 p-2 gap-2'>\r\n                        \r\n                        <button className='shadow rounded font-semibold py-1 px-2 bg-yellow-300 hover:bg-yellow-400'>\r\n                        <div className='flex justify-center'\r\n                            onClick={() => {\r\n                                setProductBeingEdited(product);\r\n                                setEditItemPopupOpen(true);\r\n                            }}\r\n                        >\r\n                            <PencilAltIcon className='w-6 h-6'/>\r\n                            EDIT\r\n                            \r\n                        </div>\r\n                        \r\n                        </button>\r\n                        <button className='shadow rounded font-semibold py-1 px-2 bg-yellow-300 hover:bg-yellow-400'>\r\n                        <div className='flex justify-center'\r\n                            onClick={() => {\r\n                                database.ref(`/businesses/${selectedBusiness.businessID}/products/${product.productID}`).set(null);\r\n                                updateBusiness();\r\n                            }}\r\n                        >\r\n                            <XCircleIcon className='w-6 h-6'/>\r\n                            DELETE\r\n                        </div>\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function Transfer({transfer}){\r\n    \r\n        return(\r\n            <div className='rounded bg-white shadow'>\r\n                <div className='w-full lg:flow-root'>\r\n                <p className='lg:float-left pl-2 pt-2 font-semibold text-gray-700'>{transfer.date} at {transfer.time}</p>\r\n                <p className='lg:float-right lg:pl-0 pl-2 pr-2 pt-2 font-semibold text-gray-700'>{transfer.transferID} {transfer.ssre}</p>\r\n                </div>\r\n                <div className='grid grid-cols-4 lg:gap-3 gap-y-3 p-2'>\r\n                {transfer.type == \"Incoming\" ?\r\n                <div className='col-span-4 lg:col-span-2 grid grid-cols-2'>\r\n                            <div className='col-span-1'>\r\n                                <p className='font-semibold'>Amount</p>\r\n                                <p className='text-green-700'>+{transfer.amount} [M]</p>\r\n                            </div>\r\n                            <div className='col-span-1'>\r\n                                <p className='font-semibold'>Sender</p>\r\n                                <p className=''>{transfer.senderName}</p>\r\n                                <p className=''>{transfer.senderName != 'Rushington Government' && transfer.senderName != 'Rushington Bank' ? \r\n                                    censor(transfer.senderID) : ''}</p>\r\n                            </div>\r\n                            </div>\r\n                :    \r\n                <div className='col-span-4 lg:col-span-2 grid grid-cols-2'>\r\n                <div className='col-span-1'>\r\n                    <p className='font-semibold'>Amount</p>\r\n                    <p className='text-red-700'>-{transfer.amount} [M]</p>\r\n                </div>\r\n                <div className='col-span-1'>\r\n                    <p className='font-semibold'>Receiver</p>\r\n                    <p className=''>{transfer.receiverName}</p>\r\n                    <p className=''>{transfer.receiverName != 'Rushington Government' && transfer.receiverName != 'Rushington Bank' ? \r\n                                    censor(transfer.receiverID) : ''}</p>\r\n                </div>\r\n                </div>\r\n                        }\r\n                <div className='col-span-2 lg:col-span-1'>\r\n                                <p className='font-semibold'>Reason</p>\r\n                                <p className=''>{transfer.reason}</p>\r\n                            </div>\r\n                <div className='col-span-2 lg:col-span-1'>\r\n                                <p className='font-semibold'>Resulting Balance</p>\r\n                                <p className=''>{transfer.resultingBalance} [M]</p>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        )\r\n    \r\n}\r\n\r\n    function AddItemPopupBody({}){\r\n        const [newItemBuyingPrice, setNewItemBuyingPrice] = useState(null);\r\n        const [newItemOrderingPrice, setNewItemOrderingPrice] = useState(null);\r\n        const [newItemName, setNewItemName] = useState('');\r\n        const [newItemBuyable, setNewItemBuyable] = useState(true);\r\n        const [newItemOrderable, setNewItemOrderable] = useState(false);\r\n\r\n        function generateProductID(){\r\n            var productID = 'PR-'\r\n            for(var i = 0; i < 5; i++){\r\n                productID = productID + String(Math.floor(Math.random()*10));\r\n            }\r\n            return(productID);\r\n        }\r\n\r\n        function onClickAddItemButton(){\r\n            if(newItemName && (newItemBuyable ? newItemBuyingPrice > 0 : true) && (newItemOrderable ? newItemOrderingPrice > 0 : true) && (newItemOrderable || newItemBuyable)){\r\n                const newProductID = generateProductID();\r\n                database.ref(`/businesses/${selectedBusiness.businessID}/products/${newProductID}`).set(\r\n                    {\r\n                        productID: newProductID,\r\n                        name: newItemName,\r\n                        buyingPrice: newItemBuyingPrice,\r\n                        orderingPrice: newItemOrderingPrice,\r\n                        buyable: newItemBuyable,\r\n                        orderable: newItemOrderable\r\n                    }\r\n                );\r\n                updateBusiness();\r\n                setAddItemPopupOpen(false);\r\n            }\r\n        }\r\n        return(\r\n            <div className='w-full justify-center '>\r\n            <div className='pb-4'>\r\n            <div className='p-5 bg-blue-200 rounded shadow'>\r\n                \r\n                <div className=''>\r\n                <p className='text-sm font-bold'>PRODUCT NAME</p>\r\n                <input className='rounded p-1 w-full border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 focus:outline-none'\r\n                    onChange={event => {setNewItemName(event.target.value)}}\r\n                ></input>\r\n                </div>\r\n                <div className='bg-white shadow rounded'>\r\n                <div className='mt-4 flow-root'>\r\n                    <p className='float-left pt-2 font-bold pl-2'>Buyable</p>\r\n                    <Switch\r\n                    className='float-right'\r\n                    checked={newItemBuyable}\r\n                    onChange={() => {\r\n                        if(newItemBuyable){\r\n                            setNewItemBuyingPrice(null);\r\n                        }\r\n                        setNewItemBuyable(!newItemBuyable)\r\n                    }}\r\n                    color='primary'\r\n                />\r\n                </div>\r\n                <p className='text-center text-gray-700 text-sm font-semibold w-full p-2'>\r\n                    With this option selected, people will click buy when they take it from your store, and money will just be transferred\r\n                </p>\r\n                {newItemBuyable &&\r\n                <div className='px-4 pb-4 pt-1'>\r\n                <p className='text-sm font-bold'>BUYING PRICE</p>\r\n                <div className='flex w-full justify-center'>\r\n                <input type='Number' placeholder='' min={0} onChange={event => {setNewItemBuyingPrice(event.target.value)}} className='rounded appearance-textfield flex justify-center w-full focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-1'></input>\r\n                <p className='font-semibold pl-1 text-xl'>[M]</p>\r\n                </div>\r\n                </div>}\r\n                </div>\r\n                <div className='bg-white shadow rounded'>\r\n                <div className='mt-4 flow-root'>\r\n                    <p className='float-left pt-2 font-bold pl-2'>Orderable</p>\r\n                    <Switch\r\n                    className='float-right'\r\n                    checked={newItemOrderable}\r\n                    onChange={() => {\r\n                        if(newItemOrderable){\r\n                            setNewItemOrderingPrice(null);\r\n                        }\r\n                        setNewItemOrderable(!newItemOrderable)\r\n                    }}\r\n                    color='primary'\r\n                />\r\n                    \r\n                </div>\r\n                <p className='text-center text-gray-700 text-sm font-semibold w-full p-2'>\r\n                    With this option selected, people will click order, money will be transferred, and the order will be added to an order queue that your business is expected to fulfill\r\n                </p>\r\n                {newItemOrderable &&\r\n                <div className='px-4 pb-4 pt-1'>\r\n                <p className='text-sm font-bold'>ORDERING PRICE</p>\r\n                <div className='flex w-full justify-center'>\r\n                <input type='Number' placeholder='' min={0} onChange={event => {setNewItemOrderingPrice(event.target.value)}} className='rounded appearance-textfield flex justify-center w-full focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-1'></input>\r\n                <p className='font-semibold pl-1 text-xl'>[M]</p>\r\n                </div>\r\n                </div>}\r\n                </div>\r\n                \r\n            </div>\r\n            </div>\r\n            <div className='flex justify-center'>\r\n            <button className={classNames(\r\n                newItemName && (newItemBuyable ? newItemBuyingPrice > 0 : true) && (newItemOrderable ? newItemOrderingPrice > 0 : true) && (newItemOrderable || newItemBuyable) ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'rounded py-1 px-2 font-semibold flex shadow')}\r\n                onClick={onClickAddItemButton}\r\n            >\r\n                <PlusCircleIcon className='w-6 h-6'/>\r\n                ADD</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\nfunction EditProductPopupBody({}){\r\n        const [itemBuyingPrice, setItemBuyingPrice] = useState(productBeingEdited.buyingPrice ? productBeingEdited.buyingPrice : null);\r\n        const [itemOrderingPrice, setItemOrderingPrice] = useState(productBeingEdited.orderingPrice ? productBeingEdited.orderingPrice : null);\r\n        const [itemName, setItemName] = useState(productBeingEdited.name);\r\n        const [itemBuyable, setItemBuyable] = useState(productBeingEdited.buyable ? true : null);\r\n        const [itemOrderable, setItemOrderable] = useState(productBeingEdited.orderable ? true : null);\r\n\r\n        function onClickSaveItemButton(){\r\n            if(itemName && (itemBuyable ? itemBuyingPrice > 0 : true) && (itemOrderable ? itemOrderingPrice > 0 : true) && (itemOrderable || itemBuyable)){\r\n                database.ref(`/businesses/${selectedBusiness.businessID}/products/${productBeingEdited.productID}`).set(\r\n                    {\r\n                        productID: productBeingEdited.productID,\r\n                        name: itemName,\r\n                        buyingPrice: itemBuyingPrice,\r\n                        orderingPrice: itemOrderingPrice,\r\n                        buyable: itemBuyable,\r\n                        orderable: itemOrderable\r\n                    }\r\n                );\r\n                updateBusiness();\r\n                setEditItemPopupOpen(false);\r\n            }\r\n        }\r\n        return(\r\n            <div className='w-full justify-center '>\r\n            <div className='pb-4'>\r\n            <div className='p-5 bg-blue-200 rounded shadow'>\r\n                \r\n                <div className=''>\r\n                <p className='text-sm font-bold'>PRODUCT NAME</p>\r\n                <input className='p-1 w-full border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 focus:outline-none'\r\n                    value={itemName}\r\n                    onChange={event => {setItemName(event.target.value)}}\r\n                ></input>\r\n                </div>\r\n                <div className='bg-white shadow rounded'>\r\n                <div className='mt-4 flow-root'>\r\n                    <p className='float-left pt-2 font-bold pl-2'>Buyable</p>\r\n                    <Switch\r\n                    className='float-right'\r\n                    checked={itemBuyable}\r\n                    onChange={() => {\r\n                        if(itemBuyable){\r\n                            setItemBuyingPrice(null);\r\n                        }\r\n                        setItemBuyable(!itemBuyable)\r\n                    }}\r\n                    color='primary'\r\n                />\r\n                </div>\r\n                <p className='text-center text-gray-700 text-sm font-semibold w-full p-2'>\r\n                    With this option selected, people will click buy when they take it from your store, and money will just be transferred\r\n                </p>\r\n                {itemBuyable &&\r\n                <div className='px-4 pb-4 pt-1'>\r\n                <p className='text-sm font-bold'>BUYING PRICE</p>\r\n                <div className='flex w-full justify-center'>\r\n                <input type='Number' placeholder='' defaultValue={itemBuyingPrice} min={0} onChange={event => {setItemBuyingPrice(event.target.value)}} className='appearance-textfield flex justify-center w-full focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-1'></input>\r\n                <p className='font-semibold pl-1 text-xl'>[M]</p>\r\n                </div>\r\n                </div>}\r\n                </div>\r\n                <div className='bg-white shadow rounded'>\r\n                <div className='mt-4 flow-root'>\r\n                    <p className='float-left pt-2 font-bold pl-2'>Orderable</p>\r\n                    <Switch\r\n                    className='float-right'\r\n                    checked={itemOrderable}\r\n                    onChange={() => {\r\n                        if(itemOrderable){\r\n                            setItemOrderingPrice(null);\r\n                        }\r\n                        setItemOrderable(!itemOrderable)\r\n                    }}\r\n                    color='primary'\r\n                />\r\n                    \r\n                </div>\r\n                <p className='text-center text-gray-700 text-sm font-semibold w-full p-2'>\r\n                    With this option selected, people will click order, money will be transferred, and the order will be added to an order queue that your business is expected to fulfill\r\n                </p>\r\n                {itemOrderable &&\r\n                <div className='px-4 pb-4 pt-1'>\r\n                <p className='text-sm font-bold'>ORDERING PRICE</p>\r\n                <div className='flex w-full justify-center'>\r\n                <input type='Number' placeholder='' defaultValue={itemOrderingPrice} min={0} onChange={event => {setItemOrderingPrice(event.target.value)}} className='appearance-textfield flex justify-center w-full focus:outline-none border-2 border-gray-500 focus:border-gray-700 focus:ring-1 focus:ring-gray-700 p-1'></input>\r\n                <p className='font-semibold pl-1 text-xl'>[M]</p>\r\n                </div>\r\n                </div>}\r\n                </div>\r\n                \r\n            </div>\r\n            </div>\r\n            <div className='flex justify-center'>\r\n            <button className={classNames(\r\n                itemName && (itemBuyable ? itemBuyingPrice > 0 : true) && (itemOrderable ? itemOrderingPrice > 0 : true) && (itemOrderable || itemBuyable) ? 'text-black bg-yellow-300 hover:bg-yellow-400' : 'text-gray-400 bg-yellow-100',\r\n                'rounded py-1 px-2 font-semibold flex shadow')}\r\n                onClick={onClickSaveItemButton}\r\n            >\r\n                <CheckCircleIcon className='w-6 h-6'/>\r\n                SAVE</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    function Order({order}){\r\n        return(\r\n            <div className='rounded bg-white border border-gray-400 shadow'>\r\n                <div className='bg-gray-100 border-b border-gray-400 rounded-t p-2 lg:grid-cols-none lg:flow-root grid grid-cols-2 gap-2'>\r\n                    <div className='lg:float-left'>\r\n                    \r\n                    <p className='text-gray-700 text-sm'>ORDERED</p>\r\n                    <p className='text-lg text-gray-700 font-semibold'>\r\n                        {order.datePurchased}, {order.yearPurchased}</p>\r\n                    </div>\r\n                    <div className='lg:float-left lg:pl-4'>\r\n                    <p className='text-gray-700 text-sm'>TOTAL</p>\r\n                    <p className='text-lg text-gray-700 font-semibold'>{order.total} [M]</p>\r\n                    </div>\r\n                    <div className='lg:float-left lg:pl-4'>\r\n                    <p className='text-gray-700 text-sm'>CUSTOMER</p>\r\n                    <p className='text-lg text-gray-700 font-semibold'>\r\n                        {order.customer.name}</p>\r\n                    </div>\r\n                    <div className='lg:float-right'>\r\n                        <p className='text-gray-700 text-sm'>PURCHASE ID</p>\r\n                        <p className='text-lg text-gray-700 font-semibold lg:text-right'>{order.purchaseID}</p>\r\n                    </div>\r\n                </div>\r\n                <div className='p-2'>\r\n                <p className='text-2xl font-semibold'>{order.product.name} ({order.quantity})</p>\r\n                <p className='text-blue-900 text-lg uppercase font-semibold'>{order.product.orderingPrice} [M] each</p>\r\n            </div>\r\n                <div className='p-2 border-t border-gray-400'>\r\n                    {order.delivered ?\r\n                     <p className='text-green-700 font-semibold text-lg'>Delivered {order.dateDelivered}, {order.yearDelivered} at {order.timeDelivered}</p>\r\n                     :\r\n                     <div>\r\n                     <p className='font-semibold text-red-700 text-lg'>Not delivered</p>\r\n                     <div className='flex justify-center'>\r\n                     <button className='shadow flex rounded font-semibold py-1 px-2 bg-yellow-300 hover:bg-yellow-400'\r\n                         onClick={() => {\r\n                             const businessOrderReference = `/businesses/${selectedBusiness.businessID}/orders/${order.purchaseID}`;\r\n                             database.ref(`${businessOrderReference}/delivered`).set(true);\r\n                             database.ref(`${businessOrderReference}/timeDelivered`).set(getTime());\r\n                             database.ref(`${businessOrderReference}/dateDelivered`).set(getDate());\r\n                             database.ref(`${businessOrderReference}/yearDelivered`).set(getYear());\r\n                             updateBusiness();\r\n\r\n                             const citizenPurchaseReference = `/citizens/${order.customer.citizenID}/businessPurchases/${order.purchaseID}`;\r\n                             database.ref(`${citizenPurchaseReference}/delivered`).set(true);\r\n                             database.ref(`${citizenPurchaseReference}/timeDelivered`).set(getTime());\r\n                             database.ref(`${citizenPurchaseReference}/dateDelivered`).set(getDate());\r\n                             database.ref(`${citizenPurchaseReference}/yearDelivered`).set(getYear());\r\n                             if(order.customer.citizenID == user.citizenID){\r\n                             database.ref(`/citizens/${order.customer.citizenID}`).get().then(citizen => {\r\n                                 setUser(citizen.val());\r\n                                 localStorage.setItem('user', JSON.stringify(citizen.val()));\r\n                             })\r\n                            }\r\n                         }}\r\n                     >\r\n                     <CheckCircleIcon className='h-6 w-6'/>\r\n                     SET AS DELIVERED\r\n                     </button>\r\n                     </div>\r\n                     </div>\r\n                        }\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Business;","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Resources from './Resources'\r\nimport Bank from './Bank';\r\nimport Calendar from './Calendar';\r\nimport Constitution from './Constitution';\r\nimport Government from './Government';\r\nimport Home from './Home'\r\nimport Profile from './Profile';\r\nimport Licenses from './Licenses';\r\nimport PostPage from '../Low Level/PostPage';\r\nimport Map from './Map';\r\nimport Properties from './Properties';\r\nimport Citizens from './Citizens';\r\nimport Settings from './Settings';\r\nimport Businesses from './Businesses';\r\nimport Business from './Business';\r\n\r\nconst Panel = ({ setFilteredPeople, email, setPeople, open, setOpen, chosenPerson, setChosenPerson, site, name, CompanyId, siteClosed, setSiteClosed, isSubscribed, isAdmin, currentDate, currentYear, currentTime, user, setUser, citizenID, database, getTime, getDate, getYear }) => {\r\n    const [selectedSection, setSelectedSection] = useState(localStorage.getItem('selectedSection') != undefined ? localStorage.getItem('selectedSection') : 'Public Posts');\r\n    const [selectedPost, setSelectedPost] = useState(localStorage.getItem('selectedPost') != undefined ? JSON.parse(localStorage.getItem('selectedPost')) : undefined);\r\n\r\n    return(\r\n        <div className=\"h-full\">\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/' render={(props) => {return <Home{...props} database={database} getDate={getDate} getYear={getYear} getTime={getTime} user={user} selectedSection={selectedSection} setSelectedSection={setSelectedSection} selectedPost={selectedPost} setSelectedPost={setSelectedPost}/>}}></Route>\r\n                    <Route path='/bank' render={(props) => {return <Bank{...props} user={user} citizenID={citizenID} database={database} getDate={getDate} getYear={getYear} getTime={getTime}/>}}></Route>\r\n                    <Route path='/resources' render={(props) => {return <Resources{...props}/>}}></Route>\r\n                    <Route path='/calendar' render={(props) => {return <Calendar{...props} currentDate={currentDate} currentYear={currentYear}/>}}></Route>\r\n                    <Route path='/constitution' render={(props) => {return <Constitution{...props}/>}}></Route>\r\n                    {isAdmin &&\r\n                    <Route path='/government' render={(props) => {return <Government{...props} database={database} getDate={getDate} getYear={getYear} getTime={getTime} user={user} setUser={setUser}/>}}></Route>\r\n                    }\r\n                    <Route path='/profile' render={(props)=>{return <Profile{...props} user={user} database={database} getDate={getDate} getYear={getYear} getTime={getTime}/>}}></Route>\r\n                    <Route path='/licenses' render={(props)=>{return <Licenses{...props} user={user} database={database} getDate={getDate} getYear={getYear} getTime={getTime} setUser={setUser}/>}}></Route>\r\n                    <Route path='/post' render={(props)=>{return <PostPage{...props} user={user} database={database} getTime={getTime} getDate={getDate} getYear={getYear} selectedSection={selectedSection} setSelectedSection={setSelectedSection} selectedPost={selectedPost} setSelectedPost={setSelectedPost}/>}}></Route>\r\n                    <Route path='/map' render={(props) => {return <Map{...props}/>}}></Route>\r\n                    <Route path='/properties' render={(props) => {return <Properties{...props} database={database}/>}}></Route>\r\n                    <Route path='/citizens' render={(props) => {return <Citizens{...props} database={database} user={user}/>}}></Route>\r\n                    <Route path='/settings' render={(props) => {return <Settings{...props} database={database} user={user} setUser={setUser}/>}}></Route>\r\n                    <Route path='/businesses' render={(props) => {return <Businesses{...props} database={database} user={user} setUser={setUser} getTime={getTime} getDate={getDate} getYear={getYear}/>}}></Route>\r\n                    <Route path='/business' render={(props) => {return <Business{...props} database={database} user={user} setUser={setUser} getTime={getTime} getDate={getDate} getYear={getYear}/>}}></Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Panel);\r\n","import React from \"react\";\r\nimport Panel from \"../Mid Level/Panel\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n\r\nconst Content = ({\r\n  isAdmin,\r\n  currentDate,\r\n  currentYear,\r\n  user,\r\n  database,\r\n  getTime,\r\n  getDate,\r\n  getYear,\r\n  setUser\r\n}) => {\r\n  \r\n  return (\r\n    <main className=\"-mt-24 lg:pb-8 bg-blue-200\">\r\n      <div className=\"max-w-3xl mx-auto px-2 sm:px-6 lg:max-w-7xl lg:px-8\">\r\n        <h1 className=\"sr-only\">Page title</h1>\r\n        {/* Main 3 column grid */}\r\n        <div className=\"grid grid-cols-1 gap-4 items-start lg:grid-cols-3 lg:gap-8\">\r\n          {/* Left column */}\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path={['/bank', '/constitution', '/calendar', '/resources', '/', '/profile', isAdmin ? '/government' : '', '/licenses', '/post', '/map', '/properties', '/citizens', '/settings', '/businesses', '/business']}\r\n                render={(props)=>{return(\r\n                  <div className=\"grid grid-cols-1 gap-4 lg:col-span-3 py-2 lg:pt-5\">\r\n                  <section aria-labelledby=\"section-1-title\">\r\n                    <h2 className=\"sr-only\" id=\"section-1-title\">\r\n                      Section title\r\n                    </h2>\r\n                    <div className=\"rounded lg:rounded-lg bg-white shadow\">\r\n                      <div className=\"p-2 lg:p-6\">\r\n                        {\r\n                          /* Your content */\r\n                          <Panel isAdmin={isAdmin}\r\n                                      user={user}\r\n                                      database={database}\r\n                                      getTime={getTime}\r\n                                      getYear={getYear}\r\n                                      getDate={getDate}\r\n                                      currentYear={currentYear}\r\n                                      currentDate={currentDate}\r\n                                      setUser={setUser}\r\n                                      />\r\n                        }\r\n                      </div>\r\n                    \r\n                    </div>\r\n                \r\n                  </section>\r\n                </div>\r\n                );}}/>\r\n              \r\n          </Switch>\r\n          </Router>\r\n        </div>\r\n        \r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nconst navigation = [\r\n    {\r\n      name: 'Facebook',\r\n      href: '#',\r\n      icon: (props) => (\r\n        <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      name: 'Instagram',\r\n      href: '#',\r\n      icon: (props) => (\r\n        <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      name: 'Twitter',\r\n      href: '#',\r\n      icon: (props) => (\r\n        <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n          <path d=\"M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84\" />\r\n        </svg>\r\n      ),\r\n    },\r\n    \r\n  ]\r\n  \r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className=\"bg-dark\">\r\n      <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 md:flex md:items-center md:justify-between lg:px-8\">\r\n        <div className=\"flex justify-center space-x-6 md:order-2\">\r\n\r\n          {/* navigation.map((item) => (\r\n            <a key={item.name} href={item.href} className=\"text-green hover:text-purple\">\r\n              <span className=\"sr-only\">{item.name}</span>\r\n              <item.icon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n            </a>\r\n          )) */}\r\n\r\n        </div>\r\n        <div className=\"mt-8 md:mt-0 md:order-1\">\r\n          <p className=\"text-center text-base text-green\">&copy; 2021 Jonah Nelson. All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import Header from \"../Fragments/High Level/Header\";\r\nimport Content from \"../Fragments/High Level/Content\";\r\nimport Footer from \"../Fragments/High Level/Footer\";\r\n\r\nconst Main = ({user, setUser, setSignedIn, setIsAdmin, isAdmin, database, currentTime, currentDate, currentYear, getTime, getDate, getYear}) => {\r\n    return(\r\n        <>\r\n            <Header setIsAdmin={setIsAdmin} currentTime={currentTime} currentDate={currentDate} currentYear={currentYear} user={user}\r\n                setSignedIn={setSignedIn} isAdmin={isAdmin} setUser={setUser}/>\r\n            <Content user={user} database={database} setUser={setUser}\r\n                        isAdmin={isAdmin} currentDate={currentDate} currentYear={currentYear} getDate={getDate} getYear={getYear} getTime={getTime} />\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport SignIn from \"./Components/Pages/SignIn\";\r\nimport Main from \"./Components/Pages/Main\"\r\nimport './App.css';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseInstance = firebase.initializeApp({\r\n  apiKey: \"AIzaSyDxMjxCQ2kfL3u3e0e9wCp5Iz4b5MhdqIo\",\r\n  authDomain: \"rushington-virtual-bank.firebaseapp.com\",\r\n  databaseURL: \"https://rushington-virtual-bank-default-rtdb.firebaseio.com\",\r\n  projectId: \"rushington-virtual-bank\",\r\n  storageBucket: \"rushington-virtual-bank.appspot.com\",\r\n  messagingSenderId: \"470262828378\",\r\n  appId: \"1:470262828378:web:1763b4bfd889cf74dc3763\",\r\n});\r\n\r\nconst database =  firebaseInstance.database();\r\n\r\nconst rushingtonEpoch = 1522648800;\r\n\r\n\r\nfunction App() {\r\n  const [citizens, setCitizens] = useState();\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n  const [isAdmin, setIsAdmin] = useState(booleanify(localStorage.getItem('isAdmin')));\r\n  const [signedIn, setSignedIn] = useState(booleanify(localStorage.getItem(\"signedIn\")));\r\n  const [currentYear, setCurrentYear] = useState(getYear());\r\n  const [currentDate, setCurrentDate] = useState(getDate());\r\n  const [currentTime, setCurrentTime] = useState(getTime());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentTime(getTime());\r\n      setCurrentDate(getDate());\r\n      setCurrentYear(getYear());\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  useEffect(updateCitizens, []);\r\n\r\n  function updateCitizens(){\r\n    database.ref('citizens').get().then(\r\n      citizensSnapshot => {\r\n        setCitizens(citizensSnapshot.val());\r\n\r\n        /* Object.values(citizensSnapshot.val()).forEach(citizen => {\r\n          if(citizen.transfers != undefined){\r\n          Object.values(citizen.transfers).forEach(transfer => {\r\n            if(transfer.senderCitizenID != undefined){\r\n              transfer.senderID = transfer.senderCitizenID;\r\n              transfer.senderCitizenID = null;\r\n            }\r\n            if(transfer.receiverCitizenID != undefined){\r\n              transfer.receiverID = transfer.receiverCitizenID;\r\n              transfer.receiverCitizenID = null;\r\n            }\r\n            database.ref(`/citizens/${citizen.citizenID}/transfers/${transfer.transferID}`).set(transfer);\r\n          });\r\n          database.ref(`/citizens/${citizen.citizenID}/settings/censorCitizenID`).set(false);\r\n          database.ref(`/citizens/${citizen.citizenID}/settings/requirePassword`).set(false);\r\n        }}) */\r\n        \r\n        if(user != undefined){\r\n          setUser(citizensSnapshot.val()[user.citizenID]);\r\n          localStorage.setItem('user', JSON.stringify(citizensSnapshot.val()[user.citizenID]));\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // If the user is logged in, the local storage will have already set the signedIn state to true, and if\r\n  // the state is true, that means all the other information is there.\r\n  if (signedIn === true) {\r\n    return (\r\n      <Main\r\n        signedIn={signedIn}\r\n        setSignedIn={setSignedIn}\r\n        setIsAdmin={setIsAdmin}\r\n        isAdmin={isAdmin}\r\n        citizens={citizens}\r\n        setUser={setUser}\r\n        user={user}\r\n        database={database}\r\n        currentTime={currentTime}\r\n        currentDate={currentDate}\r\n        currentYear={currentYear}\r\n        getTime={getTime}\r\n        getDate={getDate}\r\n        getYear={getYear}\r\n      />\r\n    );\r\n\r\n    // 'else' because then something will always be rendered, and the signedIn state could be null or false, so\r\n    // we don't check for that. \"react-login-github\": \"^1.0.7\", line 20 of package.json\r\n  } else {\r\n    return (\r\n      <SignIn\r\n        signedIn={signedIn}\r\n        setSignedIn={setSignedIn}\r\n        setIsAdmin={setIsAdmin}\r\n        citizens={citizens}\r\n        setUser={setUser}\r\n        database={database}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// Local storage only stores strings, so to actually be able to use the signedIn local storage info, it has to be\r\n// converted into a boolean.\r\nfunction booleanify(s) {\r\n  if (s === \"true\" || s === true) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst months = [\r\n  {number: 1, name: 'Igmo'},\r\n  {number: 2, name: 'Bostiod'},\r\n  {number: 3, name: 'Walin'},\r\n  {number: 4, name: 'Sabetata'},\r\n  {number: 5, name: 'Carton'},\r\n  {number: 6, name: 'Wayu'},\r\n  {number: 7, name: 'Wildder'},\r\n  {number: 8, name: 'Wekenbarg'},\r\n  {number: 9, name: 'Pape'},\r\n  {number: 10, name: 'Fortis'},\r\n  {number: 11, name: 'Callidus'},\r\n  {number: 12, name: 'Fastis'}\r\n];\r\n\r\nfunction getTime(){\r\n  var currentTotalSeconds, year, month, day, hour, seconds;\r\n  const currentDate = new Date();\r\n  currentTotalSeconds = Math.round((currentDate.getTime()/1000)-rushingtonEpoch);\r\n  year = toFixed(currentTotalSeconds/345600, 0);\r\n  month = toFixed((currentTotalSeconds - (345600 * year))/28800, 0);\r\n  day = toFixed(((currentTotalSeconds - (345600 * year) - (28800 * month)))/1200, 0);\r\n  hour = toFixed(((currentTotalSeconds - (345600 * year) - (28800 * month) - (1200 * day))/60), 0);\r\n  seconds = toFixed(currentTotalSeconds - (345600 * year) - (28800 * month) - (1200 * day) - (60 * hour), 0);\r\n  hour++;\r\n  if(String(seconds).length > 1){\r\n    seconds = String(seconds);\r\n  } else {\r\n    seconds = `0${seconds}`;\r\n  }\r\n  return(`${hour}:${seconds}`);\r\n}\r\n\r\nfunction getDate(){\r\n  var currentTotalSeconds, year, month, day;\r\n  const currentDate = new Date();\r\n  currentTotalSeconds = Math.round((currentDate.getTime()/1000)-rushingtonEpoch);\r\n  year = toFixed(currentTotalSeconds/345600, 0);\r\n  month = toFixed((currentTotalSeconds - (345600 * year))/28800, 0);\r\n  day = toFixed(((currentTotalSeconds - (345600 * year) - (28800 * month)))/1200 + 1, 0);\r\n  var monthString = '';\r\n  months.forEach(monthItem => {\r\n    if(monthItem.number === Number(month) + 1){\r\n      monthString = monthItem.name;\r\n    }\r\n  });\r\n  var dayString = String(day);\r\n  if(dayString.endsWith('0') ||\r\n     dayString.endsWith('4') ||\r\n     dayString.endsWith('5') ||\r\n     dayString.endsWith('6') ||\r\n     dayString.endsWith('7') ||\r\n     dayString.endsWith('8') ||\r\n     dayString.endsWith('9')){\r\n       dayString = dayString.concat('th');\r\n     } else if(dayString.endsWith('1')){\r\n       dayString = dayString == '11' ? dayString.concat('th') : dayString.concat('st');\r\n     } else if(dayString.endsWith('2')){\r\n       dayString = dayString == '12' ? dayString.concat('th') : dayString.concat('nd');\r\n     } else if(dayString.endsWith('3')){\r\n       dayString = dayString == '13' ? dayString.concat('th') : dayString.concat('rd');\r\n     }\r\n  return(`${monthString} ${dayString}`);\r\n}\r\n\r\nfunction getYear(){\r\n  var currentTotalSeconds, year;\r\n  const currentDate = new Date();\r\n  currentTotalSeconds = Math.round((currentDate.getTime()/1000)-1522648800);\r\n  year = toFixed(currentTotalSeconds/345600, 0);\r\n  return(`${year}`);\r\n}\r\n\r\n\r\nfunction toFixed(num, fixed) {\r\n  var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\r\n  return num.toString().match(re)[0];\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}